{
	"id": "b672c21118a5fd123342f0bab0676e84",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/DSCEngine.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.13;\n\n// Layout of Contract:\n// version\n// imports\n// interfaces, libraries, contracts\n// errors\n// Type declarations\n// State variables\n// Events\n// Modifiers\n// Functions\n\n// Layout of Functions:\n// constructor\n// receive function (if exists)\n// fallback function (if exists)\n// external\n// public\n// internal\n// private\n// view & pure functions\n\n//import { OracleLib, AggregatorV3Interface } from \"./libraries/OracleLib.sol\";\nimport { ReentrancyGuard } from \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { DecentralizedStableCoin } from \"./DecentralizedStableCoin.sol\";\n//import {AggregatorV3Interface} from \"@chainlink/contracts/src/v0.8/interface/AggregatorV3Interfsce.sol\";\nimport {AggregatorV3Interface} from \"lib/localDependencies/AggregatorV3Interface.sol\";\n\n\n/*\n * @title DSCEngine\n * @author Elia Bordoni\n *\n * The system is designed to be as minimal as possible, and have the tokens maintain a 1 token == $1 peg at all times.\n * This is a stablecoin with the properties:\n * - Exogenously Collateralized\n * - Dollar Pegged\n * - Algorithmically Stable\n *\n * It is similar to DAI if DAI had no governance, no fees, and was backed by only WETH and WBTC.\n *\n * Our DSC system should always be \"overcollateralized\". At no point, should the value of\n * all collateral < the $ backed value of all the DSC.\n *\n * @notice This contract is the core of the Decentralized Stablecoin system. It handles all the logic\n * for minting and redeeming DSC, as well as depositing and withdrawing collateral.\n * @notice This contract is based on the MakerDAO DSS system\n */\ncontract DSCEngine is ReentrancyGuard {\n\n    error DSCEngine__NeedsMoreThanZero();\n    error DSCEngine__TokenAddressesAndPriceFeedAddressesMustBeSameLength();\n    error DSCEngine__DscAddressCantBeZero();\n    error DSCEngine__NotAllowedToken();\n    error DSCEngine__CollateralDepositFailed(address collateralToken);\n    error DSCEngine__CollateralRedeemFailed(address tokenCollateral);\n    error DSCEngine__BreaksHealthFactor(uint256 userHealthFactor);\n    error DSCEngine__DscMintFailed();\n    error DSCEngine__DscBurnFailed();\n    error DSGEngine__HealtFactorOk();\n    error DSCEngine__HealthFactorNotImproved();\n\n    DecentralizedStableCoin public immutable i_dsc;\n    uint256 public constant ADDITION_FEED_PRECISION = 1e10;\n    uint256 public constant PRECISION = 1e18;\n    uint256 public constant LIQUIDATION_THRESHOLD = 50; //200% overcollateralized\n    uint256 public constant LIQUIDATION_PRECISION = 100;\n    uint256 public constant LIQUIDATION_BONUS = 10;  //means 10%\n    uint256 public constant MIN_HEALT_FACTOR = 1e18; \n\n    mapping(address token => address priceFeed) private s_priceFeeds;\n    mapping(address user => mapping(address tokenCollateral => uint256 amount)) private s_collateralDeposited;\n    mapping(address user => uint256 amountDscMinted) private s_DscMinted;\n    address[] private s_collateralTokens;\n    \n\n    event CollateralDeposited(address indexed depositer, address indexed tokenCollateral, uint256 indexed collateralAmount);\n    event CollateralRedeemed(address indexed redeemeFrom, address indexed redeemeTo, address indexed tokenCollateral, uint256 collateralAmount);\n\n    modifier moreThanZero(uint256 amount) {\n        if (amount == 0) {\n            revert DSCEngine__NeedsMoreThanZero();\n        }\n        _;\n    }\n\n    modifier isAllowedCollateral(address _token) {\n        if (s_priceFeeds[_token] == address(0)) {\n            revert DSCEngine__NotAllowedToken();\n        }\n        _;\n    }\n\n    constructor(\n        address _dscAddress,\n        address[] memory _tokenCollateral,\n        address[] memory _priceFeed\n    ) {\n        if (_tokenCollateral.length != _priceFeed.length) {\n            revert DSCEngine__TokenAddressesAndPriceFeedAddressesMustBeSameLength();\n        }\n        if (_dscAddress == address(0)) {\n            revert DSCEngine__DscAddressCantBeZero();\n        }\n        for (uint256 i = 0; i < _tokenCollateral.length; i++) {\n            s_priceFeeds[_tokenCollateral[i]] = _priceFeed[i];\n            s_collateralTokens.push(_tokenCollateral[i]);\n        }\n        i_dsc = DecentralizedStableCoin(_dscAddress);\n    }\n\n    function depositCollateralAndMintDsc(address _tokenCollateral, uint256 _collateralAmount, uint256 _amountDscToMint) external{\n        depositCollateral(_tokenCollateral, _collateralAmount);\n        mintDsc(_amountDscToMint);\n    }\n\n    function depositCollateral(address _tokenCollateral, uint256 _collateralAmount)\n        public\n        moreThanZero(_collateralAmount)\n        isAllowedCollateral(_tokenCollateral)\n        nonReentrant\n    {\n        s_collateralDeposited[msg.sender][_tokenCollateral] += _collateralAmount;\n        bool success = IERC20(_tokenCollateral).transferFrom(msg.sender, address(this), _collateralAmount);\n        if (!success) {\n            revert DSCEngine__CollateralDepositFailed(_tokenCollateral);\n        }\n\n        emit CollateralDeposited(msg.sender, _tokenCollateral, _collateralAmount);\n    }\n\n    function redeemCollateralForDsc(address _tokenCollateral, uint256 _collateralAmount, uint256 _amountDscToBurn) external {\n        burnDsc(_amountDscToBurn);\n        redeemCollateral(_tokenCollateral, _collateralAmount);\n        //redeeme collatera already checks healtFactor\n    }\n\n    function redeemCollateral(address _tokenCollateral, uint256 _collateralAmount) public nonReentrant moreThanZero(_collateralAmount){\n        _redeemCollateral(_tokenCollateral, _collateralAmount, msg.sender, msg.sender);\n        _revertIfHealthFactorIsBroken(msg.sender);\n    }\n\n    function mintDsc(uint256 _amountDscToMint) public moreThanZero(_amountDscToMint) nonReentrant{\n        s_DscMinted[msg.sender] += _amountDscToMint;\n        _revertIfHealthFactorIsBroken(msg.sender);\n        bool minted = i_dsc.mint(msg.sender, _amountDscToMint);\n        if(!minted){\n            revert DSCEngine__DscMintFailed();\n        }\n    }\n\n    function burnDsc(uint256 _amountToBurn) public moreThanZero(_amountToBurn){\n        _burnDsc(_amountToBurn, msg.sender,msg.sender);\n        _revertIfHealthFactorIsBroken(msg.sender); //I don't think this would ever hit.\n    }\n\n    function liquidate(address _tokenCollateral,  address _user, uint256 _debtToCover) external moreThanZero(_debtToCover) nonReentrant{\n        uint256 startingUserHealtFactor = _healthFactor(_user);\n        if(startingUserHealtFactor >= MIN_HEALT_FACTOR){\n            revert DSGEngine__HealtFactorOk();\n        }\n\n        uint256 tokenAmountFromDebtCovered = getTokenAmountFromUsd(_tokenCollateral, _debtToCover);\n        //We add 10% bonus to the liquidators to incentivize them\n        uint256 bonusCollateral = (tokenAmountFromDebtCovered * LIQUIDATION_BONUS) / LIQUIDATION_PRECISION;\n\n        //calculate amount and send collateral to liquidator\n        uint256 totalCollateralToRedeem = tokenAmountFromDebtCovered + bonusCollateral;\n        _redeemCollateral(_tokenCollateral, totalCollateralToRedeem, _user, msg.sender);\n\n        //burn debt covered\n        _burnDsc(_debtToCover, _user, msg.sender);\n\n        uint256 endingUserHealthFactor = _healthFactor(_user);\n        if(endingUserHealthFactor <= startingUserHealtFactor){\n            revert DSCEngine__HealthFactorNotImproved();\n        }\n        _revertIfHealthFactorIsBroken(msg.sender);\n    }\n\n    function getHealthFactor() external view {}\n\n    function _getAccountInformation(address user)\n        private\n        view\n        returns (uint256 totalDscMinted, uint256 collateralValueInUsd)\n    {\n        totalDscMinted = s_DscMinted[user];\n        collateralValueInUsd = getAccountCollateralValue(user);\n    }\n\n    function _healthFactor(address user) private view returns (uint256) {\n        (uint256 totalDscMinted, uint256 collateralValueInUsd) = _getAccountInformation(user);\n        uint256 collateralAdjustedThreshold = (collateralValueInUsd * LIQUIDATION_THRESHOLD) / LIQUIDATION_PRECISION;\n        return ((collateralAdjustedThreshold * PRECISION) / totalDscMinted);\n    }\n\n    function _revertIfHealthFactorIsBroken(address _user) internal view {\n        uint256 userHealthFactor = _healthFactor(_user);\n        if (userHealthFactor <= MIN_HEALT_FACTOR){\n            revert DSCEngine__BreaksHealthFactor(userHealthFactor);\n        }\n    }\n\n    function _burnDsc(uint256 _amountToBurn, address _onBehalfOf, address _dscFrom) private {\n        s_DscMinted[_onBehalfOf] -= _amountToBurn;\n        bool success = i_dsc.transferFrom(_dscFrom, address(this), _amountToBurn);\n        if(!success){\n            revert DSCEngine__DscBurnFailed();\n        }\n        i_dsc.burn(_amountToBurn);\n    }\n\n    function _redeemCollateral(address _tokenCollateral, uint256 _collateralAmount, address _from, address _to) private {\n        s_collateralDeposited[_from][_tokenCollateral] -= _collateralAmount;\n        emit CollateralRedeemed(_from, _to, _tokenCollateral, _collateralAmount);\n\n        bool success = IERC20(_tokenCollateral).transfer(_to, _collateralAmount);\n        if (!success) {\n            revert DSCEngine__CollateralRedeemFailed(_tokenCollateral);\n        }\n    }\n\n// Public, view functions\n    function getTokenAmountFromUsd(address _token, uint256 usdAmountInWei) public view returns(uint256){\n        (, int256 price, , ,) = AggregatorV3Interface(s_priceFeeds[_token]).latestRoundData();\n        return (usdAmountInWei * PRECISION) / (uint256(price) * ADDITION_FEED_PRECISION);\n    }\n\n    function getAccountCollateralValue(address _user) public view returns(uint256 totalCollateralValueInUsd){\n        for(uint256 i= 0; i> s_collateralTokens.length; i++){\n            address token = s_collateralTokens[i];\n            uint256 amount = s_collateralDeposited[_user][token];\n            totalCollateralValueInUsd += getUSDValue(token, amount);\n        }\n        return totalCollateralValueInUsd;\n    }\n\n    function getUSDValue(address _token, uint256 _amount) public view isAllowedCollateral(_token) returns(uint256){\n        (, int256 price, , ,) = AggregatorV3Interface(s_priceFeeds[_token]).latestRoundData();\n        //could implement that if !success use another oracle\n        return (uint256(price) * ADDITION_FEED_PRECISION * _amount) / PRECISION;\n    }\n}\n"
			},
			"lib/localDependencies/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface AggregatorV3Interface {\r\n    function decimals() external view returns (uint8);\r\n    function description() external view returns (string memory);\r\n    function version() external view returns (uint256);\r\n\r\n    function getRoundData(uint80 _roundId)\r\n        external\r\n        view\r\n        returns (\r\n            uint80 roundId,\r\n            int256 answer,\r\n            uint256 startedAt,\r\n            uint256 updatedAt,\r\n            uint80 answeredInRound\r\n        );\r\n\r\n    function latestRoundData()\r\n        external\r\n        view\r\n        returns (\r\n            uint80 roundId,\r\n            int256 answer,\r\n            uint256 startedAt,\r\n            uint256 updatedAt,\r\n            uint80 answeredInRound\r\n        );\r\n}"
			},
			"src/DecentralizedStableCoin.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.13;\r\n\r\nimport {ERC20, ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n    /*\r\n    * @title DecentralizedStableCoin\r\n    * @author Elia Bordoni\r\n    * Collateral: Exogenous\r\n    * Minting (Stability Mechanism): Decentralized (Algorithmic)\r\n    * Value (Relative Stability): Anchored (Pegged to USD)\r\n    * Collateral Type: Crypto\r\n    * This is the contract meant to be owned by DSCEngine. It is an ERC20 token that can be minted and burned by the DSCEngine smart contract.\r\n    */\r\ncontract DecentralizedStableCoin is ERC20Burnable, Ownable{\r\n    error DecentralizedStableCoin__AmountMustBeMoreThanZero();\r\n    error DecentralizedStableCoin__BurnAmountExceedsBalance();\r\n    error DecentralizedStableCoin__NotZeroAddress();\r\n\r\n\r\n    constructor() ERC20(\"DecentralizedStableCoin\", \"DSC\")Ownable(msg.sender){}\r\n\r\n    function burn(uint256 _amount) public override onlyOwner {\r\n        uint256 balance = balanceOf(msg.sender);\r\n        if (_amount <= 0) {\r\n            revert DecentralizedStableCoin__AmountMustBeMoreThanZero();\r\n        }\r\n        if (balance < _amount) {\r\n            revert DecentralizedStableCoin__BurnAmountExceedsBalance();\r\n        }\r\n        super.burn(_amount);\r\n    }\r\n\r\n    function mint (address _to, uint256 _amount) public onlyOwner returns(bool){\r\n        if (_to == address(0)) {\r\n            revert DecentralizedStableCoin__NotZeroAddress();\r\n        }\r\n        if (_amount <= 0) {\r\n            revert DecentralizedStableCoin__AmountMustBeMoreThanZero();\r\n        }\r\n        _mint(_to, _amount);\r\n        return true;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 990,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/localDependencies/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/localDependencies/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/localDependencies/AggregatorV3Interface.sol\":{\"keccak256\":\"0x134de4a121de5d7bf96256a7e08fd2f9079487123ea140ac33409533640de01f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2389849c289b0d6f2e150ba6171982d0bf485a5f279e1f25a98524b9ff57a492\",\"dweb:/ipfs/QmZYf4Y6PnkfTpYMjg4rGfUcdgjQ8AWJnkThwqpce5t2Jz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/DSCEngine.sol": {
				"DSCEngine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_dscAddress",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "_tokenCollateral",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "_priceFeed",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "userHealthFactor",
									"type": "uint256"
								}
							],
							"name": "DSCEngine__BreaksHealthFactor",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralToken",
									"type": "address"
								}
							],
							"name": "DSCEngine__CollateralDepositFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenCollateral",
									"type": "address"
								}
							],
							"name": "DSCEngine__CollateralRedeemFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DSCEngine__DscAddressCantBeZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DSCEngine__DscBurnFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DSCEngine__DscMintFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DSCEngine__HealthFactorNotImproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DSCEngine__NeedsMoreThanZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DSCEngine__NotAllowedToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DSCEngine__TokenAddressesAndPriceFeedAddressesMustBeSameLength",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DSGEngine__HealtFactorOk",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "depositer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenCollateral",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "collateralAmount",
									"type": "uint256"
								}
							],
							"name": "CollateralDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "redeemeFrom",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "redeemeTo",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenCollateral",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "collateralAmount",
									"type": "uint256"
								}
							],
							"name": "CollateralRedeemed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADDITION_FEED_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LIQUIDATION_BONUS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LIQUIDATION_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LIQUIDATION_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_HEALT_FACTOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountToBurn",
									"type": "uint256"
								}
							],
							"name": "burnDsc",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenCollateral",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_collateralAmount",
									"type": "uint256"
								}
							],
							"name": "depositCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenCollateral",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_collateralAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amountDscToMint",
									"type": "uint256"
								}
							],
							"name": "depositCollateralAndMintDsc",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getAccountCollateralValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalCollateralValueInUsd",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHealthFactor",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "usdAmountInWei",
									"type": "uint256"
								}
							],
							"name": "getTokenAmountFromUsd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "getUSDValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "i_dsc",
							"outputs": [
								{
									"internalType": "contract DecentralizedStableCoin",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenCollateral",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_debtToCover",
									"type": "uint256"
								}
							],
							"name": "liquidate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountDscToMint",
									"type": "uint256"
								}
							],
							"name": "mintDsc",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenCollateral",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_collateralAmount",
									"type": "uint256"
								}
							],
							"name": "redeemCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenCollateral",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_collateralAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amountDscToBurn",
									"type": "uint256"
								}
							],
							"name": "redeemCollateralForDsc",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/DSCEngine.sol\":1710:10326  contract DSCEngine is ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"src/DSCEngine.sol\":3648:4291  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2068  _status */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/DSCEngine.sol\":3816:3826  _priceFeed */\n  dup1\n    /* \"src/DSCEngine.sol\":3816:3833  _priceFeed.length */\n  mload\n    /* \"src/DSCEngine.sol\":3789:3805  _tokenCollateral */\n  dup3\n    /* \"src/DSCEngine.sol\":3789:3812  _tokenCollateral.length */\n  mload\n    /* \"src/DSCEngine.sol\":3789:3833  _tokenCollateral.length != _priceFeed.length */\n  eq\n    /* \"src/DSCEngine.sol\":3785:3931  if (_tokenCollateral.length != _priceFeed.length) {... */\n  tag_8\n  jumpi\n    /* \"src/DSCEngine.sol\":3856:3920  DSCEngine__TokenAddressesAndPriceFeedAddressesMustBeSameLength() */\n  mload(0x40)\n  0xb5c5c12600000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/DSCEngine.sol\":3785:3931  if (_tokenCollateral.length != _priceFeed.length) {... */\ntag_8:\n    /* \"src/DSCEngine.sol\":3967:3968  0 */\n  0x00\n    /* \"src/DSCEngine.sol\":3944:3969  _dscAddress == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"src/DSCEngine.sol\":3944:3955  _dscAddress */\n  dup4\n    /* \"src/DSCEngine.sol\":3944:3969  _dscAddress == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"src/DSCEngine.sol\":3940:4036  if (_dscAddress == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"src/DSCEngine.sol\":3992:4025  DSCEngine__DscAddressCantBeZero() */\n  mload(0x40)\n  0xef8f9dd100000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/DSCEngine.sol\":3940:4036  if (_dscAddress == address(0)) {... */\ntag_9:\n    /* \"src/DSCEngine.sol\":4050:4059  uint256 i */\n  0x00\n    /* \"src/DSCEngine.sol\":4062:4063  0 */\n  0x00\n    /* \"src/DSCEngine.sol\":4050:4063  uint256 i = 0 */\n  swap1\n  pop\n    /* \"src/DSCEngine.sol\":4045:4231  for (uint256 i = 0; i < _tokenCollateral.length; i++) {... */\ntag_10:\n    /* \"src/DSCEngine.sol\":4069:4085  _tokenCollateral */\n  dup3\n    /* \"src/DSCEngine.sol\":4069:4092  _tokenCollateral.length */\n  mload\n    /* \"src/DSCEngine.sol\":4065:4066  i */\n  dup2\n    /* \"src/DSCEngine.sol\":4065:4092  i < _tokenCollateral.length */\n  lt\n    /* \"src/DSCEngine.sol\":4045:4231  for (uint256 i = 0; i < _tokenCollateral.length; i++) {... */\n  iszero\n  tag_11\n  jumpi\n    /* \"src/DSCEngine.sol\":4149:4159  _priceFeed */\n  dup2\n    /* \"src/DSCEngine.sol\":4160:4161  i */\n  dup2\n    /* \"src/DSCEngine.sol\":4149:4162  _priceFeed[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_13\n  jumpi\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\ntag_13:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"src/DSCEngine.sol\":4113:4125  s_priceFeeds */\n  0x01\n    /* \"src/DSCEngine.sol\":4113:4146  s_priceFeeds[_tokenCollateral[i]] */\n  0x00\n    /* \"src/DSCEngine.sol\":4126:4142  _tokenCollateral */\n  dup6\n    /* \"src/DSCEngine.sol\":4143:4144  i */\n  dup5\n    /* \"src/DSCEngine.sol\":4126:4145  _tokenCollateral[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_16\n  jumpi\n  tag_17\n  tag_15\n  jump\t// in\ntag_17:\ntag_16:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"src/DSCEngine.sol\":4113:4146  s_priceFeeds[_tokenCollateral[i]] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"src/DSCEngine.sol\":4113:4162  s_priceFeeds[_tokenCollateral[i]] = _priceFeed[i] */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/DSCEngine.sol\":4176:4194  s_collateralTokens */\n  0x04\n    /* \"src/DSCEngine.sol\":4200:4216  _tokenCollateral */\n  dup4\n    /* \"src/DSCEngine.sol\":4217:4218  i */\n  dup3\n    /* \"src/DSCEngine.sol\":4200:4219  _tokenCollateral[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_18\n  jumpi\n  tag_19\n  tag_15\n  jump\t// in\ntag_19:\ntag_18:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"src/DSCEngine.sol\":4176:4220  s_collateralTokens.push(_tokenCollateral[i]) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/DSCEngine.sol\":4094:4097  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"src/DSCEngine.sol\":4045:4231  for (uint256 i = 0; i < _tokenCollateral.length; i++) {... */\n  jump(tag_10)\ntag_11:\n  pop\n    /* \"src/DSCEngine.sol\":4272:4283  _dscAddress */\n  dup3\n    /* \"src/DSCEngine.sol\":4240:4284  i_dsc = DecentralizedStableCoin(_dscAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/DSCEngine.sol\":3648:4291  constructor(... */\n  pop\n  pop\n  pop\n    /* \"src/DSCEngine.sol\":1710:10326  contract DSCEngine is ReentrancyGuard {... */\n  jump(tag_21)\n    /* \"#utility.yul\":7:82   */\ntag_22:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_24:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_26:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_44\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_25\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_27:\n    /* \"#utility.yul\":641:665   */\n  tag_46\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_26\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_47:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_28:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_49\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_27\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_29:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  0x00\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1070   */\ntag_30:\n    /* \"#utility.yul\":1009:1015   */\n  0x00\n    /* \"#utility.yul\":1060:1062   */\n  0x1f\n    /* \"#utility.yul\":1056:1063   */\n  not\n    /* \"#utility.yul\":1051:1053   */\n  0x1f\n    /* \"#utility.yul\":1044:1049   */\n  dup4\n    /* \"#utility.yul\":1040:1054   */\n  add\n    /* \"#utility.yul\":1036:1064   */\n  and\n    /* \"#utility.yul\":1026:1064   */\n  swap1\n  pop\n    /* \"#utility.yul\":968:1070   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1076:1256   */\ntag_31:\n    /* \"#utility.yul\":1124:1201   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1121:1122   */\n  0x00\n    /* \"#utility.yul\":1114:1202   */\n  mstore\n    /* \"#utility.yul\":1221:1225   */\n  0x41\n    /* \"#utility.yul\":1218:1219   */\n  0x04\n    /* \"#utility.yul\":1211:1226   */\n  mstore\n    /* \"#utility.yul\":1245:1249   */\n  0x24\n    /* \"#utility.yul\":1242:1243   */\n  0x00\n    /* \"#utility.yul\":1235:1250   */\n  revert\n    /* \"#utility.yul\":1262:1543   */\ntag_32:\n    /* \"#utility.yul\":1345:1372   */\n  tag_54\n    /* \"#utility.yul\":1367:1371   */\n  dup3\n    /* \"#utility.yul\":1345:1372   */\n  tag_30\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1337:1343   */\n  dup2\n    /* \"#utility.yul\":1333:1373   */\n  add\n    /* \"#utility.yul\":1475:1481   */\n  dup2\n    /* \"#utility.yul\":1463:1473   */\n  dup2\n    /* \"#utility.yul\":1460:1482   */\n  lt\n    /* \"#utility.yul\":1439:1457   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1427:1437   */\n  dup3\n    /* \"#utility.yul\":1424:1458   */\n  gt\n    /* \"#utility.yul\":1421:1483   */\n  or\n    /* \"#utility.yul\":1418:1506   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1486:1504   */\n  tag_56\n  tag_31\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1418:1506   */\ntag_55:\n    /* \"#utility.yul\":1526:1536   */\n  dup1\n    /* \"#utility.yul\":1522:1524   */\n  0x40\n    /* \"#utility.yul\":1515:1537   */\n  mstore\n    /* \"#utility.yul\":1305:1543   */\n  pop\n    /* \"#utility.yul\":1262:1543   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1549:1678   */\ntag_33:\n    /* \"#utility.yul\":1583:1589   */\n  0x00\n    /* \"#utility.yul\":1610:1630   */\n  tag_58\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1600:1630   */\n  swap1\n  pop\n    /* \"#utility.yul\":1639:1672   */\n  tag_59\n    /* \"#utility.yul\":1667:1671   */\n  dup3\n    /* \"#utility.yul\":1659:1665   */\n  dup3\n    /* \"#utility.yul\":1639:1672   */\n  tag_32\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1549:1678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1684:1995   */\ntag_34:\n    /* \"#utility.yul\":1761:1765   */\n  0x00\n    /* \"#utility.yul\":1851:1869   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1843:1849   */\n  dup3\n    /* \"#utility.yul\":1840:1870   */\n  gt\n    /* \"#utility.yul\":1837:1893   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1873:1891   */\n  tag_62\n  tag_31\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1837:1893   */\ntag_61:\n    /* \"#utility.yul\":1923:1927   */\n  0x20\n    /* \"#utility.yul\":1915:1921   */\n  dup3\n    /* \"#utility.yul\":1911:1928   */\n  mul\n    /* \"#utility.yul\":1903:1928   */\n  swap1\n  pop\n    /* \"#utility.yul\":1983:1987   */\n  0x20\n    /* \"#utility.yul\":1977:1981   */\n  dup2\n    /* \"#utility.yul\":1973:1988   */\n  add\n    /* \"#utility.yul\":1965:1988   */\n  swap1\n  pop\n    /* \"#utility.yul\":1684:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2118   */\ntag_35:\n    /* \"#utility.yul\":2110:2111   */\n  0x00\n    /* \"#utility.yul\":2107:2108   */\n  0x00\n    /* \"#utility.yul\":2100:2112   */\n  revert\n    /* \"#utility.yul\":2141:2873   */\ntag_36:\n    /* \"#utility.yul\":2248:2253   */\n  0x00\n    /* \"#utility.yul\":2273:2354   */\n  tag_65\n    /* \"#utility.yul\":2289:2353   */\n  tag_66\n    /* \"#utility.yul\":2346:2352   */\n  dup5\n    /* \"#utility.yul\":2289:2353   */\n  tag_34\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2273:2354   */\n  tag_33\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2264:2354   */\n  swap1\n  pop\n    /* \"#utility.yul\":2374:2379   */\n  dup1\n    /* \"#utility.yul\":2403:2409   */\n  dup4\n    /* \"#utility.yul\":2396:2401   */\n  dup3\n    /* \"#utility.yul\":2389:2410   */\n  mstore\n    /* \"#utility.yul\":2437:2441   */\n  0x20\n    /* \"#utility.yul\":2430:2435   */\n  dup3\n    /* \"#utility.yul\":2426:2442   */\n  add\n    /* \"#utility.yul\":2419:2442   */\n  swap1\n  pop\n    /* \"#utility.yul\":2490:2494   */\n  0x20\n    /* \"#utility.yul\":2482:2488   */\n  dup5\n    /* \"#utility.yul\":2478:2495   */\n  mul\n    /* \"#utility.yul\":2470:2476   */\n  dup4\n    /* \"#utility.yul\":2466:2496   */\n  add\n    /* \"#utility.yul\":2519:2522   */\n  dup6\n    /* \"#utility.yul\":2511:2517   */\n  dup2\n    /* \"#utility.yul\":2508:2523   */\n  gt\n    /* \"#utility.yul\":2505:2627   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2538:2617   */\n  tag_68\n  tag_35\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2505:2627   */\ntag_67:\n    /* \"#utility.yul\":2653:2659   */\n  dup4\n    /* \"#utility.yul\":2636:2867   */\ntag_69:\n    /* \"#utility.yul\":2670:2676   */\n  dup2\n    /* \"#utility.yul\":2665:2668   */\n  dup2\n    /* \"#utility.yul\":2662:2677   */\n  lt\n    /* \"#utility.yul\":2636:2867   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2745:2748   */\n  dup1\n    /* \"#utility.yul\":2774:2822   */\n  tag_72\n    /* \"#utility.yul\":2818:2821   */\n  dup9\n    /* \"#utility.yul\":2806:2816   */\n  dup3\n    /* \"#utility.yul\":2774:2822   */\n  tag_28\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2769:2772   */\n  dup5\n    /* \"#utility.yul\":2762:2823   */\n  mstore\n    /* \"#utility.yul\":2852:2856   */\n  0x20\n    /* \"#utility.yul\":2847:2850   */\n  dup5\n    /* \"#utility.yul\":2843:2857   */\n  add\n    /* \"#utility.yul\":2836:2857   */\n  swap4\n  pop\n    /* \"#utility.yul\":2712:2867   */\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  0x20\n    /* \"#utility.yul\":2691:2694   */\n  dup2\n    /* \"#utility.yul\":2687:2701   */\n  add\n    /* \"#utility.yul\":2680:2701   */\n  swap1\n  pop\n    /* \"#utility.yul\":2636:2867   */\n  jump(tag_69)\ntag_71:\n    /* \"#utility.yul\":2640:2661   */\n  pop\n    /* \"#utility.yul\":2254:2873   */\n  pop\n  pop\n    /* \"#utility.yul\":2141:2873   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2896:3281   */\ntag_37:\n    /* \"#utility.yul\":2978:2983   */\n  0x00\n    /* \"#utility.yul\":3027:3030   */\n  dup3\n    /* \"#utility.yul\":3020:3024   */\n  0x1f\n    /* \"#utility.yul\":3012:3018   */\n  dup4\n    /* \"#utility.yul\":3008:3025   */\n  add\n    /* \"#utility.yul\":3004:3031   */\n  slt\n    /* \"#utility.yul\":2994:3116   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3035:3114   */\n  tag_75\n  tag_29\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2994:3116   */\ntag_74:\n    /* \"#utility.yul\":3145:3151   */\n  dup2\n    /* \"#utility.yul\":3139:3152   */\n  mload\n    /* \"#utility.yul\":3170:3275   */\n  tag_76\n    /* \"#utility.yul\":3271:3274   */\n  dup5\n    /* \"#utility.yul\":3263:3269   */\n  dup3\n    /* \"#utility.yul\":3256:3260   */\n  0x20\n    /* \"#utility.yul\":3248:3254   */\n  dup7\n    /* \"#utility.yul\":3244:3261   */\n  add\n    /* \"#utility.yul\":3170:3275   */\n  tag_36\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3161:3275   */\n  swap2\n  pop\n    /* \"#utility.yul\":2984:3281   */\n  pop\n    /* \"#utility.yul\":2896:3281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3287:4356   */\ntag_3:\n    /* \"#utility.yul\":3425:3431   */\n  0x00\n    /* \"#utility.yul\":3433:3439   */\n  0x00\n    /* \"#utility.yul\":3441:3447   */\n  0x00\n    /* \"#utility.yul\":3490:3492   */\n  0x60\n    /* \"#utility.yul\":3478:3487   */\n  dup5\n    /* \"#utility.yul\":3469:3476   */\n  dup7\n    /* \"#utility.yul\":3465:3488   */\n  sub\n    /* \"#utility.yul\":3461:3493   */\n  slt\n    /* \"#utility.yul\":3458:3577   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3496:3575   */\n  tag_79\n  tag_23\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3458:3577   */\ntag_78:\n    /* \"#utility.yul\":3616:3617   */\n  0x00\n    /* \"#utility.yul\":3641:3705   */\n  tag_80\n    /* \"#utility.yul\":3697:3704   */\n  dup7\n    /* \"#utility.yul\":3688:3694   */\n  dup3\n    /* \"#utility.yul\":3677:3686   */\n  dup8\n    /* \"#utility.yul\":3673:3695   */\n  add\n    /* \"#utility.yul\":3641:3705   */\n  tag_28\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3631:3705   */\n  swap4\n  pop\n    /* \"#utility.yul\":3587:3715   */\n  pop\n    /* \"#utility.yul\":3775:3777   */\n  0x20\n    /* \"#utility.yul\":3764:3773   */\n  dup5\n    /* \"#utility.yul\":3760:3778   */\n  add\n    /* \"#utility.yul\":3754:3779   */\n  mload\n    /* \"#utility.yul\":3806:3824   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3798:3804   */\n  dup2\n    /* \"#utility.yul\":3795:3825   */\n  gt\n    /* \"#utility.yul\":3792:3909   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3828:3907   */\n  tag_82\n  tag_24\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3792:3909   */\ntag_81:\n    /* \"#utility.yul\":3933:4022   */\n  tag_83\n    /* \"#utility.yul\":4014:4021   */\n  dup7\n    /* \"#utility.yul\":4005:4011   */\n  dup3\n    /* \"#utility.yul\":3994:4003   */\n  dup8\n    /* \"#utility.yul\":3990:4012   */\n  add\n    /* \"#utility.yul\":3933:4022   */\n  tag_37\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3923:4022   */\n  swap3\n  pop\n    /* \"#utility.yul\":3725:4032   */\n  pop\n    /* \"#utility.yul\":4092:4094   */\n  0x40\n    /* \"#utility.yul\":4081:4090   */\n  dup5\n    /* \"#utility.yul\":4077:4095   */\n  add\n    /* \"#utility.yul\":4071:4096   */\n  mload\n    /* \"#utility.yul\":4123:4141   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4115:4121   */\n  dup2\n    /* \"#utility.yul\":4112:4142   */\n  gt\n    /* \"#utility.yul\":4109:4226   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":4145:4224   */\n  tag_85\n  tag_24\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":4109:4226   */\ntag_84:\n    /* \"#utility.yul\":4250:4339   */\n  tag_86\n    /* \"#utility.yul\":4331:4338   */\n  dup7\n    /* \"#utility.yul\":4322:4328   */\n  dup3\n    /* \"#utility.yul\":4311:4320   */\n  dup8\n    /* \"#utility.yul\":4307:4329   */\n  add\n    /* \"#utility.yul\":4250:4339   */\n  tag_37\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4240:4339   */\n  swap2\n  pop\n    /* \"#utility.yul\":4042:4349   */\n  pop\n    /* \"#utility.yul\":3287:4356   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4362:4542   */\ntag_15:\n    /* \"#utility.yul\":4410:4487   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4407:4408   */\n  0x00\n    /* \"#utility.yul\":4400:4488   */\n  mstore\n    /* \"#utility.yul\":4507:4511   */\n  0x32\n    /* \"#utility.yul\":4504:4505   */\n  0x04\n    /* \"#utility.yul\":4497:4512   */\n  mstore\n    /* \"#utility.yul\":4531:4535   */\n  0x24\n    /* \"#utility.yul\":4528:4529   */\n  0x00\n    /* \"#utility.yul\":4521:4536   */\n  revert\n    /* \"src/DSCEngine.sol\":1710:10326  contract DSCEngine is ReentrancyGuard {... */\ntag_21:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3162021e9b05ce40d88cdbc2e7ffcbde44bff3377e4655bd30398eb60600692d\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/DSCEngine.sol\":1710:10326  contract DSCEngine is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa5f352b7\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xc9b7c327\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xc9b7c327\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe90db8a3\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf419ea9c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf6876608\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xfa76dcf2\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0xa5f352b7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xaaf5eb68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xafea2e48\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc601676c\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x7d1a4450\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x7d1a4450\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x90a8ae9b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x9acd81b3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9d45ac89\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa5d5db0c\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x26c01303\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3574d4c4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5e338bb3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x65079d77\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"src/DSCEngine.sol\":6284:7439  function liquidate(address _tokenCollateral,  address _user, uint256 _debtToCover) external moreThanZero(_debtToCover) nonReentrant{... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"src/DSCEngine.sol\":2626:2672  uint256 public constant LIQUIDATION_BONUS = 10 */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DSCEngine.sol\":2329:2375  DecentralizedStableCoin public immutable i_dsc */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DSCEngine.sol\":2381:2435  uint256 public constant ADDITION_FEED_PRECISION = 1e10 */\n    tag_6:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DSCEngine.sol\":9552:9963  function getAccountCollateralValue(address _user) public view returns(uint256 totalCollateralValueInUsd){... */\n    tag_7:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DSCEngine.sol\":2487:2537  uint256 public constant LIQUIDATION_THRESHOLD = 50 */\n    tag_8:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DSCEngine.sol\":5419:5695  function redeemCollateral(address _tokenCollateral, uint256 _collateralAmount) public nonReentrant moreThanZero(_collateralAmount){... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"src/DSCEngine.sol\":2569:2620  uint256 public constant LIQUIDATION_PRECISION = 100 */\n    tag_10:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DSCEngine.sol\":4533:5127  function depositCollateral(address _tokenCollateral, uint256 _collateralAmount)... */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"src/DSCEngine.sol\":7445:7488  function getHealthFactor() external view {} */\n    tag_12:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"src/DSCEngine.sol\":2441:2481  uint256 public constant PRECISION = 1e18 */\n    tag_13:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DSCEngine.sol\":9255:9546  function getTokenAmountFromUsd(address _token, uint256 usdAmountInWei) public view returns(uint256){... */\n    tag_14:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DSCEngine.sol\":2691:2738  uint256 public constant MIN_HEALT_FACTOR = 1e18 */\n    tag_15:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DSCEngine.sol\":5701:6047  function mintDsc(uint256 _amountDscToMint) public moreThanZero(_amountDscToMint) nonReentrant{... */\n    tag_16:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"src/DSCEngine.sol\":4297:4527  function depositCollateralAndMintDsc(address _tokenCollateral, uint256 _collateralAmount, uint256 _amountDscToMint) external{... */\n    tag_17:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"src/DSCEngine.sol\":5133:5413  function redeemCollateralForDsc(address _tokenCollateral, uint256 _collateralAmount, uint256 _amountDscToBurn) external {... */\n    tag_18:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"src/DSCEngine.sol\":6053:6278  function burnDsc(uint256 _amountToBurn) public moreThanZero(_amountToBurn){... */\n    tag_19:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"src/DSCEngine.sol\":9969:10324  function getUSDValue(address _token, uint256 _amount) public view isAllowedCollateral(_token) returns(uint256){... */\n    tag_20:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DSCEngine.sol\":6284:7439  function liquidate(address _tokenCollateral,  address _user, uint256 _debtToCover) external moreThanZero(_debtToCover) nonReentrant{... */\n    tag_27:\n        /* \"src/DSCEngine.sol\":6389:6401  _debtToCover */\n      dup1\n        /* \"src/DSCEngine.sol\":3382:3383  0 */\n      0x00\n        /* \"src/DSCEngine.sol\":3372:3378  amount */\n      dup2\n        /* \"src/DSCEngine.sol\":3372:3383  amount == 0 */\n      sub\n        /* \"src/DSCEngine.sol\":3368:3447  if (amount == 0) {... */\n      tag_88\n      jumpi\n        /* \"src/DSCEngine.sol\":3406:3436  DSCEngine__NeedsMoreThanZero() */\n      mload(0x40)\n      0xcb1d3f7d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DSCEngine.sol\":3368:3447  if (amount == 0) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_90\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_91\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_90:\n        /* \"src/DSCEngine.sol\":6425:6456  uint256 startingUserHealtFactor */\n      0x00\n        /* \"src/DSCEngine.sol\":6459:6479  _healthFactor(_user) */\n      tag_93\n        /* \"src/DSCEngine.sol\":6473:6478  _user */\n      dup5\n        /* \"src/DSCEngine.sol\":6459:6472  _healthFactor */\n      tag_94\n        /* \"src/DSCEngine.sol\":6459:6479  _healthFactor(_user) */\n      jump\t// in\n    tag_93:\n        /* \"src/DSCEngine.sol\":6425:6479  uint256 startingUserHealtFactor = _healthFactor(_user) */\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":2734:2738  1e18 */\n      0x0de0b6b3a7640000\n        /* \"src/DSCEngine.sol\":6492:6515  startingUserHealtFactor */\n      dup2\n        /* \"src/DSCEngine.sol\":6492:6535  startingUserHealtFactor >= MIN_HEALT_FACTOR */\n      lt\n        /* \"src/DSCEngine.sol\":6489:6594  if(startingUserHealtFactor >= MIN_HEALT_FACTOR){... */\n      tag_95\n      jumpi\n        /* \"src/DSCEngine.sol\":6557:6583  DSGEngine__HealtFactorOk() */\n      mload(0x40)\n      0x4dc824ba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DSCEngine.sol\":6489:6594  if(startingUserHealtFactor >= MIN_HEALT_FACTOR){... */\n    tag_95:\n        /* \"src/DSCEngine.sol\":6604:6638  uint256 tokenAmountFromDebtCovered */\n      0x00\n        /* \"src/DSCEngine.sol\":6641:6694  getTokenAmountFromUsd(_tokenCollateral, _debtToCover) */\n      tag_96\n        /* \"src/DSCEngine.sol\":6663:6679  _tokenCollateral */\n      dup7\n        /* \"src/DSCEngine.sol\":6681:6693  _debtToCover */\n      dup6\n        /* \"src/DSCEngine.sol\":6641:6662  getTokenAmountFromUsd */\n      tag_64\n        /* \"src/DSCEngine.sol\":6641:6694  getTokenAmountFromUsd(_tokenCollateral, _debtToCover) */\n      jump\t// in\n    tag_96:\n        /* \"src/DSCEngine.sol\":6604:6694  uint256 tokenAmountFromDebtCovered = getTokenAmountFromUsd(_tokenCollateral, _debtToCover) */\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":6770:6793  uint256 bonusCollateral */\n      0x00\n        /* \"src/DSCEngine.sol\":2617:2620  100 */\n      0x64\n        /* \"src/DSCEngine.sol\":2670:2672  10 */\n      0x0a\n        /* \"src/DSCEngine.sol\":6797:6823  tokenAmountFromDebtCovered */\n      dup4\n        /* \"src/DSCEngine.sol\":6797:6843  tokenAmountFromDebtCovered * LIQUIDATION_BONUS */\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"src/DSCEngine.sol\":6796:6868  (tokenAmountFromDebtCovered * LIQUIDATION_BONUS) / LIQUIDATION_PRECISION */\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"src/DSCEngine.sol\":6770:6868  uint256 bonusCollateral = (tokenAmountFromDebtCovered * LIQUIDATION_BONUS) / LIQUIDATION_PRECISION */\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":6940:6971  uint256 totalCollateralToRedeem */\n      0x00\n        /* \"src/DSCEngine.sol\":7003:7018  bonusCollateral */\n      dup2\n        /* \"src/DSCEngine.sol\":6974:7000  tokenAmountFromDebtCovered */\n      dup4\n        /* \"src/DSCEngine.sol\":6974:7018  tokenAmountFromDebtCovered + bonusCollateral */\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"src/DSCEngine.sol\":6940:7018  uint256 totalCollateralToRedeem = tokenAmountFromDebtCovered + bonusCollateral */\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":7028:7107  _redeemCollateral(_tokenCollateral, totalCollateralToRedeem, _user, msg.sender) */\n      tag_103\n        /* \"src/DSCEngine.sol\":7046:7062  _tokenCollateral */\n      dup9\n        /* \"src/DSCEngine.sol\":7064:7087  totalCollateralToRedeem */\n      dup3\n        /* \"src/DSCEngine.sol\":7089:7094  _user */\n      dup10\n        /* \"src/DSCEngine.sol\":7096:7106  msg.sender */\n      caller\n        /* \"src/DSCEngine.sol\":7028:7045  _redeemCollateral */\n      tag_104\n        /* \"src/DSCEngine.sol\":7028:7107  _redeemCollateral(_tokenCollateral, totalCollateralToRedeem, _user, msg.sender) */\n      jump\t// in\n    tag_103:\n        /* \"src/DSCEngine.sol\":7146:7187  _burnDsc(_debtToCover, _user, msg.sender) */\n      tag_105\n        /* \"src/DSCEngine.sol\":7155:7167  _debtToCover */\n      dup7\n        /* \"src/DSCEngine.sol\":7169:7174  _user */\n      dup9\n        /* \"src/DSCEngine.sol\":7176:7186  msg.sender */\n      caller\n        /* \"src/DSCEngine.sol\":7146:7154  _burnDsc */\n      tag_106\n        /* \"src/DSCEngine.sol\":7146:7187  _burnDsc(_debtToCover, _user, msg.sender) */\n      jump\t// in\n    tag_105:\n        /* \"src/DSCEngine.sol\":7198:7228  uint256 endingUserHealthFactor */\n      0x00\n        /* \"src/DSCEngine.sol\":7231:7251  _healthFactor(_user) */\n      tag_107\n        /* \"src/DSCEngine.sol\":7245:7250  _user */\n      dup9\n        /* \"src/DSCEngine.sol\":7231:7244  _healthFactor */\n      tag_94\n        /* \"src/DSCEngine.sol\":7231:7251  _healthFactor(_user) */\n      jump\t// in\n    tag_107:\n        /* \"src/DSCEngine.sol\":7198:7251  uint256 endingUserHealthFactor = _healthFactor(_user) */\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":7290:7313  startingUserHealtFactor */\n      dup5\n        /* \"src/DSCEngine.sol\":7264:7286  endingUserHealthFactor */\n      dup2\n        /* \"src/DSCEngine.sol\":7264:7313  endingUserHealthFactor <= startingUserHealtFactor */\n      gt\n        /* \"src/DSCEngine.sol\":7261:7382  if(endingUserHealthFactor <= startingUserHealtFactor){... */\n      tag_108\n      jumpi\n        /* \"src/DSCEngine.sol\":7335:7371  DSCEngine__HealthFactorNotImproved() */\n      mload(0x40)\n      0x7c28362000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DSCEngine.sol\":7261:7382  if(endingUserHealthFactor <= startingUserHealtFactor){... */\n    tag_108:\n        /* \"src/DSCEngine.sol\":7391:7432  _revertIfHealthFactorIsBroken(msg.sender) */\n      tag_109\n        /* \"src/DSCEngine.sol\":7421:7431  msg.sender */\n      caller\n        /* \"src/DSCEngine.sol\":7391:7420  _revertIfHealthFactorIsBroken */\n      tag_110\n        /* \"src/DSCEngine.sol\":7391:7432  _revertIfHealthFactorIsBroken(msg.sender) */\n      jump\t// in\n    tag_109:\n        /* \"src/DSCEngine.sol\":6415:7439  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_111\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_112\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_111:\n        /* \"src/DSCEngine.sol\":6284:7439  function liquidate(address _tokenCollateral,  address _user, uint256 _debtToCover) external moreThanZero(_debtToCover) nonReentrant{... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/DSCEngine.sol\":2626:2672  uint256 public constant LIQUIDATION_BONUS = 10 */\n    tag_29:\n        /* \"src/DSCEngine.sol\":2670:2672  10 */\n      0x0a\n        /* \"src/DSCEngine.sol\":2626:2672  uint256 public constant LIQUIDATION_BONUS = 10 */\n      dup2\n      jump\t// out\n        /* \"src/DSCEngine.sol\":2329:2375  DecentralizedStableCoin public immutable i_dsc */\n    tag_33:\n      immutable(\"0x3162021e9b05ce40d88cdbc2e7ffcbde44bff3377e4655bd30398eb60600692d\")\n      dup2\n      jump\t// out\n        /* \"src/DSCEngine.sol\":2381:2435  uint256 public constant ADDITION_FEED_PRECISION = 1e10 */\n    tag_37:\n        /* \"src/DSCEngine.sol\":2431:2435  1e10 */\n      0x02540be400\n        /* \"src/DSCEngine.sol\":2381:2435  uint256 public constant ADDITION_FEED_PRECISION = 1e10 */\n      dup2\n      jump\t// out\n        /* \"src/DSCEngine.sol\":9552:9963  function getAccountCollateralValue(address _user) public view returns(uint256 totalCollateralValueInUsd){... */\n    tag_42:\n        /* \"src/DSCEngine.sol\":9622:9655  uint256 totalCollateralValueInUsd */\n      0x00\n        /* \"src/DSCEngine.sol\":9670:9679  uint256 i */\n      0x00\n        /* \"src/DSCEngine.sol\":9681:9682  0 */\n      0x00\n        /* \"src/DSCEngine.sol\":9670:9682  uint256 i= 0 */\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":9666:9915  for(uint256 i= 0; i> s_collateralTokens.length; i++){... */\n    tag_114:\n        /* \"src/DSCEngine.sol\":9687:9705  s_collateralTokens */\n      0x04\n        /* \"src/DSCEngine.sol\":9687:9712  s_collateralTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":9684:9685  i */\n      dup2\n        /* \"src/DSCEngine.sol\":9684:9712  i> s_collateralTokens.length */\n      gt\n        /* \"src/DSCEngine.sol\":9666:9915  for(uint256 i= 0; i> s_collateralTokens.length; i++){... */\n      iszero\n      tag_115\n      jumpi\n        /* \"src/DSCEngine.sol\":9732:9745  address token */\n      0x00\n        /* \"src/DSCEngine.sol\":9748:9766  s_collateralTokens */\n      0x04\n        /* \"src/DSCEngine.sol\":9767:9768  i */\n      dup3\n        /* \"src/DSCEngine.sol\":9748:9769  s_collateralTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_117\n      jumpi\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n    tag_117:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DSCEngine.sol\":9732:9769  address token = s_collateralTokens[i] */\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":9783:9797  uint256 amount */\n      0x00\n        /* \"src/DSCEngine.sol\":9800:9821  s_collateralDeposited */\n      0x02\n        /* \"src/DSCEngine.sol\":9800:9828  s_collateralDeposited[_user] */\n      0x00\n        /* \"src/DSCEngine.sol\":9822:9827  _user */\n      dup7\n        /* \"src/DSCEngine.sol\":9800:9828  s_collateralDeposited[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DSCEngine.sol\":9800:9835  s_collateralDeposited[_user][token] */\n      0x00\n        /* \"src/DSCEngine.sol\":9829:9834  token */\n      dup4\n        /* \"src/DSCEngine.sol\":9800:9835  s_collateralDeposited[_user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/DSCEngine.sol\":9783:9835  uint256 amount = s_collateralDeposited[_user][token] */\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":9878:9904  getUSDValue(token, amount) */\n      tag_121\n        /* \"src/DSCEngine.sol\":9890:9895  token */\n      dup3\n        /* \"src/DSCEngine.sol\":9897:9903  amount */\n      dup3\n        /* \"src/DSCEngine.sol\":9878:9889  getUSDValue */\n      tag_85\n        /* \"src/DSCEngine.sol\":9878:9904  getUSDValue(token, amount) */\n      jump\t// in\n    tag_121:\n        /* \"src/DSCEngine.sol\":9849:9904  totalCollateralValueInUsd += getUSDValue(token, amount) */\n      dup5\n      tag_122\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_122:\n      swap4\n      pop\n        /* \"src/DSCEngine.sol\":9718:9915  {... */\n      pop\n      pop\n        /* \"src/DSCEngine.sol\":9714:9717  i++ */\n      dup1\n      dup1\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      swap2\n      pop\n      pop\n        /* \"src/DSCEngine.sol\":9666:9915  for(uint256 i= 0; i> s_collateralTokens.length; i++){... */\n      jump(tag_114)\n    tag_115:\n      pop\n        /* \"src/DSCEngine.sol\":9552:9963  function getAccountCollateralValue(address _user) public view returns(uint256 totalCollateralValueInUsd){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/DSCEngine.sol\":2487:2537  uint256 public constant LIQUIDATION_THRESHOLD = 50 */\n    tag_45:\n        /* \"src/DSCEngine.sol\":2535:2537  50 */\n      0x32\n        /* \"src/DSCEngine.sol\":2487:2537  uint256 public constant LIQUIDATION_THRESHOLD = 50 */\n      dup2\n      jump\t// out\n        /* \"src/DSCEngine.sol\":5419:5695  function redeemCollateral(address _tokenCollateral, uint256 _collateralAmount) public nonReentrant moreThanZero(_collateralAmount){... */\n    tag_50:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_126\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_91\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_126:\n        /* \"src/DSCEngine.sol\":5531:5548  _collateralAmount */\n      dup1\n        /* \"src/DSCEngine.sol\":3382:3383  0 */\n      0x00\n        /* \"src/DSCEngine.sol\":3372:3378  amount */\n      dup2\n        /* \"src/DSCEngine.sol\":3372:3383  amount == 0 */\n      sub\n        /* \"src/DSCEngine.sol\":3368:3447  if (amount == 0) {... */\n      tag_128\n      jumpi\n        /* \"src/DSCEngine.sol\":3406:3436  DSCEngine__NeedsMoreThanZero() */\n      mload(0x40)\n      0xcb1d3f7d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DSCEngine.sol\":3368:3447  if (amount == 0) {... */\n    tag_128:\n        /* \"src/DSCEngine.sol\":5559:5637  _redeemCollateral(_tokenCollateral, _collateralAmount, msg.sender, msg.sender) */\n      tag_130\n        /* \"src/DSCEngine.sol\":5577:5593  _tokenCollateral */\n      dup4\n        /* \"src/DSCEngine.sol\":5595:5612  _collateralAmount */\n      dup4\n        /* \"src/DSCEngine.sol\":5614:5624  msg.sender */\n      caller\n        /* \"src/DSCEngine.sol\":5626:5636  msg.sender */\n      caller\n        /* \"src/DSCEngine.sol\":5559:5576  _redeemCollateral */\n      tag_104\n        /* \"src/DSCEngine.sol\":5559:5637  _redeemCollateral(_tokenCollateral, _collateralAmount, msg.sender, msg.sender) */\n      jump\t// in\n    tag_130:\n        /* \"src/DSCEngine.sol\":5647:5688  _revertIfHealthFactorIsBroken(msg.sender) */\n      tag_131\n        /* \"src/DSCEngine.sol\":5677:5687  msg.sender */\n      caller\n        /* \"src/DSCEngine.sol\":5647:5676  _revertIfHealthFactorIsBroken */\n      tag_110\n        /* \"src/DSCEngine.sol\":5647:5688  _revertIfHealthFactorIsBroken(msg.sender) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_132\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_112\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_132:\n        /* \"src/DSCEngine.sol\":5419:5695  function redeemCollateral(address _tokenCollateral, uint256 _collateralAmount) public nonReentrant moreThanZero(_collateralAmount){... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/DSCEngine.sol\":2569:2620  uint256 public constant LIQUIDATION_PRECISION = 100 */\n    tag_52:\n        /* \"src/DSCEngine.sol\":2617:2620  100 */\n      0x64\n        /* \"src/DSCEngine.sol\":2569:2620  uint256 public constant LIQUIDATION_PRECISION = 100 */\n      dup2\n      jump\t// out\n        /* \"src/DSCEngine.sol\":4533:5127  function depositCollateral(address _tokenCollateral, uint256 _collateralAmount)... */\n    tag_56:\n        /* \"src/DSCEngine.sol\":4649:4666  _collateralAmount */\n      dup1\n        /* \"src/DSCEngine.sol\":3382:3383  0 */\n      0x00\n        /* \"src/DSCEngine.sol\":3372:3378  amount */\n      dup2\n        /* \"src/DSCEngine.sol\":3372:3383  amount == 0 */\n      sub\n        /* \"src/DSCEngine.sol\":3368:3447  if (amount == 0) {... */\n      tag_134\n      jumpi\n        /* \"src/DSCEngine.sol\":3406:3436  DSCEngine__NeedsMoreThanZero() */\n      mload(0x40)\n      0xcb1d3f7d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DSCEngine.sol\":3368:3447  if (amount == 0) {... */\n    tag_134:\n        /* \"src/DSCEngine.sol\":4696:4712  _tokenCollateral */\n      dup3\n        /* \"src/DSCEngine.sol\":3561:3562  0 */\n      0x00\n        /* \"src/DSCEngine.sol\":3529:3563  s_priceFeeds[_token] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DSCEngine.sol\":3529:3541  s_priceFeeds */\n      0x01\n        /* \"src/DSCEngine.sol\":3529:3549  s_priceFeeds[_token] */\n      0x00\n        /* \"src/DSCEngine.sol\":3542:3548  _token */\n      dup4\n        /* \"src/DSCEngine.sol\":3529:3549  s_priceFeeds[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DSCEngine.sol\":3529:3563  s_priceFeeds[_token] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/DSCEngine.sol\":3525:3625  if (s_priceFeeds[_token] == address(0)) {... */\n      tag_136\n      jumpi\n        /* \"src/DSCEngine.sol\":3586:3614  DSCEngine__NotAllowedToken() */\n      mload(0x40)\n      0xa802cfbe00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DSCEngine.sol\":3525:3625  if (s_priceFeeds[_token] == address(0)) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_91\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_138:\n        /* \"src/DSCEngine.sol\":4804:4821  _collateralAmount */\n      dup3\n        /* \"src/DSCEngine.sol\":4749:4770  s_collateralDeposited */\n      0x02\n        /* \"src/DSCEngine.sol\":4749:4782  s_collateralDeposited[msg.sender] */\n      0x00\n        /* \"src/DSCEngine.sol\":4771:4781  msg.sender */\n      caller\n        /* \"src/DSCEngine.sol\":4749:4782  s_collateralDeposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DSCEngine.sol\":4749:4800  s_collateralDeposited[msg.sender][_tokenCollateral] */\n      0x00\n        /* \"src/DSCEngine.sol\":4783:4799  _tokenCollateral */\n      dup7\n        /* \"src/DSCEngine.sol\":4749:4800  s_collateralDeposited[msg.sender][_tokenCollateral] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/DSCEngine.sol\":4749:4821  s_collateralDeposited[msg.sender][_tokenCollateral] += _collateralAmount */\n      dup3\n      dup3\n      sload\n      tag_140\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_140:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DSCEngine.sol\":4831:4843  bool success */\n      0x00\n        /* \"src/DSCEngine.sol\":4853:4869  _tokenCollateral */\n      dup5\n        /* \"src/DSCEngine.sol\":4846:4883  IERC20(_tokenCollateral).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"src/DSCEngine.sol\":4884:4894  msg.sender */\n      caller\n        /* \"src/DSCEngine.sol\":4904:4908  this */\n      address\n        /* \"src/DSCEngine.sol\":4911:4928  _collateralAmount */\n      dup8\n        /* \"src/DSCEngine.sol\":4846:4929  IERC20(_tokenCollateral).transferFrom(msg.sender, address(this), _collateralAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"src/DSCEngine.sol\":4831:4929  bool success = IERC20(_tokenCollateral).transferFrom(msg.sender, address(this), _collateralAmount) */\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":4944:4951  success */\n      dup1\n        /* \"src/DSCEngine.sol\":4939:5037  if (!success) {... */\n      tag_147\n      jumpi\n        /* \"src/DSCEngine.sol\":5009:5025  _tokenCollateral */\n      dup5\n        /* \"src/DSCEngine.sol\":4974:5026  DSCEngine__CollateralDepositFailed(_tokenCollateral) */\n      mload(0x40)\n      0xbc3fe12700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DSCEngine.sol\":4939:5037  if (!success) {... */\n    tag_147:\n        /* \"src/DSCEngine.sol\":5102:5119  _collateralAmount */\n      dup4\n        /* \"src/DSCEngine.sol\":5084:5100  _tokenCollateral */\n      dup6\n        /* \"src/DSCEngine.sol\":5052:5120  CollateralDeposited(msg.sender, _tokenCollateral, _collateralAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DSCEngine.sol\":5072:5082  msg.sender */\n      caller\n        /* \"src/DSCEngine.sol\":5052:5120  CollateralDeposited(msg.sender, _tokenCollateral, _collateralAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf1c0dd7e9b98bbff859029005ef89b127af049cd18df1a8d79f0b7e019911e56\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/DSCEngine.sol\":4739:5127  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_150\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_112\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_150:\n        /* \"src/DSCEngine.sol\":3456:3457  _ */\n      pop\n        /* \"src/DSCEngine.sol\":4533:5127  function depositCollateral(address _tokenCollateral, uint256 _collateralAmount)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/DSCEngine.sol\":7445:7488  function getHealthFactor() external view {} */\n    tag_58:\n      jump\t// out\n        /* \"src/DSCEngine.sol\":2441:2481  uint256 public constant PRECISION = 1e18 */\n    tag_60:\n        /* \"src/DSCEngine.sol\":2477:2481  1e18 */\n      0x0de0b6b3a7640000\n        /* \"src/DSCEngine.sol\":2441:2481  uint256 public constant PRECISION = 1e18 */\n      dup2\n      jump\t// out\n        /* \"src/DSCEngine.sol\":9255:9546  function getTokenAmountFromUsd(address _token, uint256 usdAmountInWei) public view returns(uint256){... */\n    tag_64:\n        /* \"src/DSCEngine.sol\":9346:9353  uint256 */\n      0x00\n        /* \"src/DSCEngine.sol\":9367:9379  int256 price */\n      0x00\n        /* \"src/DSCEngine.sol\":9410:9422  s_priceFeeds */\n      0x01\n        /* \"src/DSCEngine.sol\":9410:9430  s_priceFeeds[_token] */\n      0x00\n        /* \"src/DSCEngine.sol\":9423:9429  _token */\n      dup6\n        /* \"src/DSCEngine.sol\":9410:9430  s_priceFeeds[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DSCEngine.sol\":9388:9447  AggregatorV3Interface(s_priceFeeds[_token]).latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"src/DSCEngine.sol\":9388:9449  AggregatorV3Interface(s_priceFeeds[_token]).latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"src/DSCEngine.sol\":9364:9449  (, int256 price, , ,) = AggregatorV3Interface(s_priceFeeds[_token]).latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"src/DSCEngine.sol\":2431:2435  1e10 */\n      0x02540be400\n        /* \"src/DSCEngine.sol\":9506:9511  price */\n      dup2\n        /* \"src/DSCEngine.sol\":9498:9538  uint256(price) * ADDITION_FEED_PRECISION */\n      tag_157\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_157:\n        /* \"src/DSCEngine.sol\":2477:2481  1e18 */\n      0x0de0b6b3a7640000\n        /* \"src/DSCEngine.sol\":9467:9481  usdAmountInWei */\n      dup5\n        /* \"src/DSCEngine.sol\":9467:9493  usdAmountInWei * PRECISION */\n      tag_158\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_158:\n        /* \"src/DSCEngine.sol\":9466:9539  (usdAmountInWei * PRECISION) / (uint256(price) * ADDITION_FEED_PRECISION) */\n      tag_159\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_159:\n        /* \"src/DSCEngine.sol\":9459:9539  return (usdAmountInWei * PRECISION) / (uint256(price) * ADDITION_FEED_PRECISION) */\n      swap2\n      pop\n      pop\n        /* \"src/DSCEngine.sol\":9255:9546  function getTokenAmountFromUsd(address _token, uint256 usdAmountInWei) public view returns(uint256){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/DSCEngine.sol\":2691:2738  uint256 public constant MIN_HEALT_FACTOR = 1e18 */\n    tag_67:\n        /* \"src/DSCEngine.sol\":2734:2738  1e18 */\n      0x0de0b6b3a7640000\n        /* \"src/DSCEngine.sol\":2691:2738  uint256 public constant MIN_HEALT_FACTOR = 1e18 */\n      dup2\n      jump\t// out\n        /* \"src/DSCEngine.sol\":5701:6047  function mintDsc(uint256 _amountDscToMint) public moreThanZero(_amountDscToMint) nonReentrant{... */\n    tag_72:\n        /* \"src/DSCEngine.sol\":5764:5780  _amountDscToMint */\n      dup1\n        /* \"src/DSCEngine.sol\":3382:3383  0 */\n      0x00\n        /* \"src/DSCEngine.sol\":3372:3378  amount */\n      dup2\n        /* \"src/DSCEngine.sol\":3372:3383  amount == 0 */\n      sub\n        /* \"src/DSCEngine.sol\":3368:3447  if (amount == 0) {... */\n      tag_161\n      jumpi\n        /* \"src/DSCEngine.sol\":3406:3436  DSCEngine__NeedsMoreThanZero() */\n      mload(0x40)\n      0xcb1d3f7d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DSCEngine.sol\":3368:3447  if (amount == 0) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_163\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_91\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_163:\n        /* \"src/DSCEngine.sol\":5831:5847  _amountDscToMint */\n      dup2\n        /* \"src/DSCEngine.sol\":5804:5815  s_DscMinted */\n      0x03\n        /* \"src/DSCEngine.sol\":5804:5827  s_DscMinted[msg.sender] */\n      0x00\n        /* \"src/DSCEngine.sol\":5816:5826  msg.sender */\n      caller\n        /* \"src/DSCEngine.sol\":5804:5827  s_DscMinted[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/DSCEngine.sol\":5804:5847  s_DscMinted[msg.sender] += _amountDscToMint */\n      dup3\n      dup3\n      sload\n      tag_165\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DSCEngine.sol\":5857:5898  _revertIfHealthFactorIsBroken(msg.sender) */\n      tag_166\n        /* \"src/DSCEngine.sol\":5887:5897  msg.sender */\n      caller\n        /* \"src/DSCEngine.sol\":5857:5886  _revertIfHealthFactorIsBroken */\n      tag_110\n        /* \"src/DSCEngine.sol\":5857:5898  _revertIfHealthFactorIsBroken(msg.sender) */\n      jump\t// in\n    tag_166:\n        /* \"src/DSCEngine.sol\":5908:5919  bool minted */\n      0x00\n        /* \"src/DSCEngine.sol\":5922:5927  i_dsc */\n      immutable(\"0x3162021e9b05ce40d88cdbc2e7ffcbde44bff3377e4655bd30398eb60600692d\")\n        /* \"src/DSCEngine.sol\":5922:5932  i_dsc.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"src/DSCEngine.sol\":5933:5943  msg.sender */\n      caller\n        /* \"src/DSCEngine.sol\":5945:5961  _amountDscToMint */\n      dup6\n        /* \"src/DSCEngine.sol\":5922:5962  i_dsc.mint(msg.sender, _amountDscToMint) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_171:\n        /* \"src/DSCEngine.sol\":5908:5962  bool minted = i_dsc.mint(msg.sender, _amountDscToMint) */\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":5976:5982  minted */\n      dup1\n        /* \"src/DSCEngine.sol\":5972:6041  if(!minted){... */\n      tag_172\n      jumpi\n        /* \"src/DSCEngine.sol\":6004:6030  DSCEngine__DscMintFailed() */\n      mload(0x40)\n      0x6f4e810b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DSCEngine.sol\":5972:6041  if(!minted){... */\n    tag_172:\n        /* \"src/DSCEngine.sol\":5794:6047  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_173\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_112\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_173:\n        /* \"src/DSCEngine.sol\":5701:6047  function mintDsc(uint256 _amountDscToMint) public moreThanZero(_amountDscToMint) nonReentrant{... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/DSCEngine.sol\":4297:4527  function depositCollateralAndMintDsc(address _tokenCollateral, uint256 _collateralAmount, uint256 _amountDscToMint) external{... */\n    tag_76:\n        /* \"src/DSCEngine.sol\":4431:4485  depositCollateral(_tokenCollateral, _collateralAmount) */\n      tag_175\n        /* \"src/DSCEngine.sol\":4449:4465  _tokenCollateral */\n      dup4\n        /* \"src/DSCEngine.sol\":4467:4484  _collateralAmount */\n      dup4\n        /* \"src/DSCEngine.sol\":4431:4448  depositCollateral */\n      tag_56\n        /* \"src/DSCEngine.sol\":4431:4485  depositCollateral(_tokenCollateral, _collateralAmount) */\n      jump\t// in\n    tag_175:\n        /* \"src/DSCEngine.sol\":4495:4520  mintDsc(_amountDscToMint) */\n      tag_176\n        /* \"src/DSCEngine.sol\":4503:4519  _amountDscToMint */\n      dup2\n        /* \"src/DSCEngine.sol\":4495:4502  mintDsc */\n      tag_72\n        /* \"src/DSCEngine.sol\":4495:4520  mintDsc(_amountDscToMint) */\n      jump\t// in\n    tag_176:\n        /* \"src/DSCEngine.sol\":4297:4527  function depositCollateralAndMintDsc(address _tokenCollateral, uint256 _collateralAmount, uint256 _amountDscToMint) external{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/DSCEngine.sol\":5133:5413  function redeemCollateralForDsc(address _tokenCollateral, uint256 _collateralAmount, uint256 _amountDscToBurn) external {... */\n    tag_79:\n        /* \"src/DSCEngine.sol\":5263:5288  burnDsc(_amountDscToBurn) */\n      tag_178\n        /* \"src/DSCEngine.sol\":5271:5287  _amountDscToBurn */\n      dup2\n        /* \"src/DSCEngine.sol\":5263:5270  burnDsc */\n      tag_82\n        /* \"src/DSCEngine.sol\":5263:5288  burnDsc(_amountDscToBurn) */\n      jump\t// in\n    tag_178:\n        /* \"src/DSCEngine.sol\":5298:5351  redeemCollateral(_tokenCollateral, _collateralAmount) */\n      tag_179\n        /* \"src/DSCEngine.sol\":5315:5331  _tokenCollateral */\n      dup4\n        /* \"src/DSCEngine.sol\":5333:5350  _collateralAmount */\n      dup4\n        /* \"src/DSCEngine.sol\":5298:5314  redeemCollateral */\n      tag_50\n        /* \"src/DSCEngine.sol\":5298:5351  redeemCollateral(_tokenCollateral, _collateralAmount) */\n      jump\t// in\n    tag_179:\n        /* \"src/DSCEngine.sol\":5133:5413  function redeemCollateralForDsc(address _tokenCollateral, uint256 _collateralAmount, uint256 _amountDscToBurn) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/DSCEngine.sol\":6053:6278  function burnDsc(uint256 _amountToBurn) public moreThanZero(_amountToBurn){... */\n    tag_82:\n        /* \"src/DSCEngine.sol\":6113:6126  _amountToBurn */\n      dup1\n        /* \"src/DSCEngine.sol\":3382:3383  0 */\n      0x00\n        /* \"src/DSCEngine.sol\":3372:3378  amount */\n      dup2\n        /* \"src/DSCEngine.sol\":3372:3383  amount == 0 */\n      sub\n        /* \"src/DSCEngine.sol\":3368:3447  if (amount == 0) {... */\n      tag_181\n      jumpi\n        /* \"src/DSCEngine.sol\":3406:3436  DSCEngine__NeedsMoreThanZero() */\n      mload(0x40)\n      0xcb1d3f7d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DSCEngine.sol\":3368:3447  if (amount == 0) {... */\n    tag_181:\n        /* \"src/DSCEngine.sol\":6137:6183  _burnDsc(_amountToBurn, msg.sender,msg.sender) */\n      tag_183\n        /* \"src/DSCEngine.sol\":6146:6159  _amountToBurn */\n      dup3\n        /* \"src/DSCEngine.sol\":6161:6171  msg.sender */\n      caller\n        /* \"src/DSCEngine.sol\":6172:6182  msg.sender */\n      caller\n        /* \"src/DSCEngine.sol\":6137:6145  _burnDsc */\n      tag_106\n        /* \"src/DSCEngine.sol\":6137:6183  _burnDsc(_amountToBurn, msg.sender,msg.sender) */\n      jump\t// in\n    tag_183:\n        /* \"src/DSCEngine.sol\":6193:6234  _revertIfHealthFactorIsBroken(msg.sender) */\n      tag_184\n        /* \"src/DSCEngine.sol\":6223:6233  msg.sender */\n      caller\n        /* \"src/DSCEngine.sol\":6193:6222  _revertIfHealthFactorIsBroken */\n      tag_110\n        /* \"src/DSCEngine.sol\":6193:6234  _revertIfHealthFactorIsBroken(msg.sender) */\n      jump\t// in\n    tag_184:\n        /* \"src/DSCEngine.sol\":6053:6278  function burnDsc(uint256 _amountToBurn) public moreThanZero(_amountToBurn){... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/DSCEngine.sol\":9969:10324  function getUSDValue(address _token, uint256 _amount) public view isAllowedCollateral(_token) returns(uint256){... */\n    tag_85:\n        /* \"src/DSCEngine.sol\":10071:10078  uint256 */\n      0x00\n        /* \"src/DSCEngine.sol\":10055:10061  _token */\n      dup3\n        /* \"src/DSCEngine.sol\":3561:3562  0 */\n      0x00\n        /* \"src/DSCEngine.sol\":3529:3563  s_priceFeeds[_token] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DSCEngine.sol\":3529:3541  s_priceFeeds */\n      0x01\n        /* \"src/DSCEngine.sol\":3529:3549  s_priceFeeds[_token] */\n      0x00\n        /* \"src/DSCEngine.sol\":3542:3548  _token */\n      dup4\n        /* \"src/DSCEngine.sol\":3529:3549  s_priceFeeds[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DSCEngine.sol\":3529:3563  s_priceFeeds[_token] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/DSCEngine.sol\":3525:3625  if (s_priceFeeds[_token] == address(0)) {... */\n      tag_186\n      jumpi\n        /* \"src/DSCEngine.sol\":3586:3614  DSCEngine__NotAllowedToken() */\n      mload(0x40)\n      0xa802cfbe00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DSCEngine.sol\":3525:3625  if (s_priceFeeds[_token] == address(0)) {... */\n    tag_186:\n        /* \"src/DSCEngine.sol\":10092:10104  int256 price */\n      0x00\n        /* \"src/DSCEngine.sol\":10135:10147  s_priceFeeds */\n      0x01\n        /* \"src/DSCEngine.sol\":10135:10155  s_priceFeeds[_token] */\n      0x00\n        /* \"src/DSCEngine.sol\":10148:10154  _token */\n      dup7\n        /* \"src/DSCEngine.sol\":10135:10155  s_priceFeeds[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DSCEngine.sol\":10113:10172  AggregatorV3Interface(s_priceFeeds[_token]).latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"src/DSCEngine.sol\":10113:10174  AggregatorV3Interface(s_priceFeeds[_token]).latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_190:\n        /* \"src/DSCEngine.sol\":10089:10174  (, int256 price, , ,) = AggregatorV3Interface(s_priceFeeds[_token]).latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"src/DSCEngine.sol\":2477:2481  1e18 */\n      0x0de0b6b3a7640000\n        /* \"src/DSCEngine.sol\":10297:10304  _amount */\n      dup5\n        /* \"src/DSCEngine.sol\":2431:2435  1e10 */\n      0x02540be400\n        /* \"src/DSCEngine.sol\":10262:10267  price */\n      dup4\n        /* \"src/DSCEngine.sol\":10254:10294  uint256(price) * ADDITION_FEED_PRECISION */\n      tag_191\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_191:\n        /* \"src/DSCEngine.sol\":10254:10304  uint256(price) * ADDITION_FEED_PRECISION * _amount */\n      tag_192\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_192:\n        /* \"src/DSCEngine.sol\":10253:10317  (uint256(price) * ADDITION_FEED_PRECISION * _amount) / PRECISION */\n      tag_193\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_193:\n        /* \"src/DSCEngine.sol\":10246:10317  return (uint256(price) * ADDITION_FEED_PRECISION * _amount) / PRECISION */\n      swap3\n      pop\n      pop\n        /* \"src/DSCEngine.sol\":9969:10324  function getUSDValue(address _token, uint256 _amount) public view isAllowedCollateral(_token) returns(uint256){... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"src/DSCEngine.sol\":7765:8130  function _healthFactor(address user) private view returns (uint256) {... */\n    tag_94:\n        /* \"src/DSCEngine.sol\":7824:7831  uint256 */\n      0x00\n        /* \"src/DSCEngine.sol\":7844:7866  uint256 totalDscMinted */\n      0x00\n        /* \"src/DSCEngine.sol\":7868:7896  uint256 collateralValueInUsd */\n      0x00\n        /* \"src/DSCEngine.sol\":7900:7928  _getAccountInformation(user) */\n      tag_197\n        /* \"src/DSCEngine.sol\":7923:7927  user */\n      dup5\n        /* \"src/DSCEngine.sol\":7900:7922  _getAccountInformation */\n      tag_198\n        /* \"src/DSCEngine.sol\":7900:7928  _getAccountInformation(user) */\n      jump\t// in\n    tag_197:\n        /* \"src/DSCEngine.sol\":7843:7928  (uint256 totalDscMinted, uint256 collateralValueInUsd) = _getAccountInformation(user) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/DSCEngine.sol\":7938:7973  uint256 collateralAdjustedThreshold */\n      0x00\n        /* \"src/DSCEngine.sol\":2617:2620  100 */\n      0x64\n        /* \"src/DSCEngine.sol\":2535:2537  50 */\n      0x32\n        /* \"src/DSCEngine.sol\":7977:7997  collateralValueInUsd */\n      dup4\n        /* \"src/DSCEngine.sol\":7977:8021  collateralValueInUsd * LIQUIDATION_THRESHOLD */\n      tag_199\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_199:\n        /* \"src/DSCEngine.sol\":7976:8046  (collateralValueInUsd * LIQUIDATION_THRESHOLD) / LIQUIDATION_PRECISION */\n      tag_200\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_200:\n        /* \"src/DSCEngine.sol\":7938:8046  uint256 collateralAdjustedThreshold = (collateralValueInUsd * LIQUIDATION_THRESHOLD) / LIQUIDATION_PRECISION */\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":8108:8122  totalDscMinted */\n      dup3\n        /* \"src/DSCEngine.sol\":2477:2481  1e18 */\n      0x0de0b6b3a7640000\n        /* \"src/DSCEngine.sol\":8065:8092  collateralAdjustedThreshold */\n      dup3\n        /* \"src/DSCEngine.sol\":8065:8104  collateralAdjustedThreshold * PRECISION */\n      tag_201\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_201:\n        /* \"src/DSCEngine.sol\":8064:8122  (collateralAdjustedThreshold * PRECISION) / totalDscMinted */\n      tag_202\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_202:\n        /* \"src/DSCEngine.sol\":8056:8123  return ((collateralAdjustedThreshold * PRECISION) / totalDscMinted) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"src/DSCEngine.sol\":7765:8130  function _healthFactor(address user) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/DSCEngine.sol\":8752:9223  function _redeemCollateral(address _tokenCollateral, uint256 _collateralAmount, address _from, address _to) private {... */\n    tag_104:\n        /* \"src/DSCEngine.sol\":8928:8945  _collateralAmount */\n      dup3\n        /* \"src/DSCEngine.sol\":8878:8899  s_collateralDeposited */\n      0x02\n        /* \"src/DSCEngine.sol\":8878:8906  s_collateralDeposited[_from] */\n      0x00\n        /* \"src/DSCEngine.sol\":8900:8905  _from */\n      dup5\n        /* \"src/DSCEngine.sol\":8878:8906  s_collateralDeposited[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/DSCEngine.sol\":8878:8924  s_collateralDeposited[_from][_tokenCollateral] */\n      0x00\n        /* \"src/DSCEngine.sol\":8907:8923  _tokenCollateral */\n      dup7\n        /* \"src/DSCEngine.sol\":8878:8924  s_collateralDeposited[_from][_tokenCollateral] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/DSCEngine.sol\":8878:8945  s_collateralDeposited[_from][_tokenCollateral] -= _collateralAmount */\n      dup3\n      dup3\n      sload\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DSCEngine.sol\":8991:9007  _tokenCollateral */\n      dup4\n        /* \"src/DSCEngine.sol\":8960:9027  CollateralRedeemed(_from, _to, _tokenCollateral, _collateralAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DSCEngine.sol\":8986:8989  _to */\n      dup2\n        /* \"src/DSCEngine.sol\":8960:9027  CollateralRedeemed(_from, _to, _tokenCollateral, _collateralAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DSCEngine.sol\":8979:8984  _from */\n      dup4\n        /* \"src/DSCEngine.sol\":8960:9027  CollateralRedeemed(_from, _to, _tokenCollateral, _collateralAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb292db12b8dfa23b760ee5e3bd1d3be184cd8f0eeeacd27ce120d4de4e4721f6\n        /* \"src/DSCEngine.sol\":9009:9026  _collateralAmount */\n      dup7\n        /* \"src/DSCEngine.sol\":8960:9027  CollateralRedeemed(_from, _to, _tokenCollateral, _collateralAmount) */\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/DSCEngine.sol\":9038:9050  bool success */\n      0x00\n        /* \"src/DSCEngine.sol\":9060:9076  _tokenCollateral */\n      dup5\n        /* \"src/DSCEngine.sol\":9053:9086  IERC20(_tokenCollateral).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/DSCEngine.sol\":9087:9090  _to */\n      dup4\n        /* \"src/DSCEngine.sol\":9092:9109  _collateralAmount */\n      dup7\n        /* \"src/DSCEngine.sol\":9053:9110  IERC20(_tokenCollateral).transfer(_to, _collateralAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_207:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_209\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_209:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_210\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_210:\n        /* \"src/DSCEngine.sol\":9038:9110  bool success = IERC20(_tokenCollateral).transfer(_to, _collateralAmount) */\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":9125:9132  success */\n      dup1\n        /* \"src/DSCEngine.sol\":9120:9217  if (!success) {... */\n      tag_211\n      jumpi\n        /* \"src/DSCEngine.sol\":9189:9205  _tokenCollateral */\n      dup5\n        /* \"src/DSCEngine.sol\":9155:9206  DSCEngine__CollateralRedeemFailed(_tokenCollateral) */\n      mload(0x40)\n      0x2851f43200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DSCEngine.sol\":9120:9217  if (!success) {... */\n    tag_211:\n        /* \"src/DSCEngine.sol\":8868:9223  {... */\n      pop\n        /* \"src/DSCEngine.sol\":8752:9223  function _redeemCollateral(address _tokenCollateral, uint256 _collateralAmount, address _from, address _to) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/DSCEngine.sol\":8403:8746  function _burnDsc(uint256 _amountToBurn, address _onBehalfOf, address _dscFrom) private {... */\n    tag_106:\n        /* \"src/DSCEngine.sol\":8529:8542  _amountToBurn */\n      dup3\n        /* \"src/DSCEngine.sol\":8501:8512  s_DscMinted */\n      0x03\n        /* \"src/DSCEngine.sol\":8501:8525  s_DscMinted[_onBehalfOf] */\n      0x00\n        /* \"src/DSCEngine.sol\":8513:8524  _onBehalfOf */\n      dup5\n        /* \"src/DSCEngine.sol\":8501:8525  s_DscMinted[_onBehalfOf] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/DSCEngine.sol\":8501:8542  s_DscMinted[_onBehalfOf] -= _amountToBurn */\n      dup3\n      dup3\n      sload\n      tag_214\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_214:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/DSCEngine.sol\":8552:8564  bool success */\n      0x00\n        /* \"src/DSCEngine.sol\":8567:8572  i_dsc */\n      immutable(\"0x3162021e9b05ce40d88cdbc2e7ffcbde44bff3377e4655bd30398eb60600692d\")\n        /* \"src/DSCEngine.sol\":8567:8585  i_dsc.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"src/DSCEngine.sol\":8586:8594  _dscFrom */\n      dup4\n        /* \"src/DSCEngine.sol\":8604:8608  this */\n      address\n        /* \"src/DSCEngine.sol\":8611:8624  _amountToBurn */\n      dup8\n        /* \"src/DSCEngine.sol\":8567:8625  i_dsc.transferFrom(_dscFrom, address(this), _amountToBurn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_215:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_217\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_218\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_218:\n        /* \"src/DSCEngine.sol\":8552:8625  bool success = i_dsc.transferFrom(_dscFrom, address(this), _amountToBurn) */\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":8639:8646  success */\n      dup1\n        /* \"src/DSCEngine.sol\":8635:8705  if(!success){... */\n      tag_219\n      jumpi\n        /* \"src/DSCEngine.sol\":8668:8694  DSCEngine__DscBurnFailed() */\n      mload(0x40)\n      0x3a29ac6d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DSCEngine.sol\":8635:8705  if(!success){... */\n    tag_219:\n        /* \"src/DSCEngine.sol\":8714:8719  i_dsc */\n      immutable(\"0x3162021e9b05ce40d88cdbc2e7ffcbde44bff3377e4655bd30398eb60600692d\")\n        /* \"src/DSCEngine.sol\":8714:8724  i_dsc.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42966c68\n        /* \"src/DSCEngine.sol\":8725:8738  _amountToBurn */\n      dup6\n        /* \"src/DSCEngine.sol\":8714:8739  i_dsc.burn(_amountToBurn) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_220:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_221\n      jumpi\n      revert(0x00, 0x00)\n    tag_221:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/DSCEngine.sol\":8491:8746  {... */\n      pop\n        /* \"src/DSCEngine.sol\":8403:8746  function _burnDsc(uint256 _amountToBurn, address _onBehalfOf, address _dscFrom) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/DSCEngine.sol\":8136:8397  function _revertIfHealthFactorIsBroken(address _user) internal view {... */\n    tag_110:\n        /* \"src/DSCEngine.sol\":8214:8238  uint256 userHealthFactor */\n      0x00\n        /* \"src/DSCEngine.sol\":8241:8261  _healthFactor(_user) */\n      tag_225\n        /* \"src/DSCEngine.sol\":8255:8260  _user */\n      dup3\n        /* \"src/DSCEngine.sol\":8241:8254  _healthFactor */\n      tag_94\n        /* \"src/DSCEngine.sol\":8241:8261  _healthFactor(_user) */\n      jump\t// in\n    tag_225:\n        /* \"src/DSCEngine.sol\":8214:8261  uint256 userHealthFactor = _healthFactor(_user) */\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":2734:2738  1e18 */\n      0x0de0b6b3a7640000\n        /* \"src/DSCEngine.sol\":8275:8291  userHealthFactor */\n      dup2\n        /* \"src/DSCEngine.sol\":8275:8311  userHealthFactor <= MIN_HEALT_FACTOR */\n      gt\n        /* \"src/DSCEngine.sol\":8271:8391  if (userHealthFactor <= MIN_HEALT_FACTOR){... */\n      tag_226\n      jumpi\n        /* \"src/DSCEngine.sol\":8363:8379  userHealthFactor */\n      dup1\n        /* \"src/DSCEngine.sol\":8333:8380  DSCEngine__BreaksHealthFactor(userHealthFactor) */\n      mload(0x40)\n      0xe580cc6100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DSCEngine.sol\":8271:8391  if (userHealthFactor <= MIN_HEALT_FACTOR){... */\n    tag_226:\n        /* \"src/DSCEngine.sol\":8204:8397  {... */\n      pop\n        /* \"src/DSCEngine.sol\":8136:8397  function _revertIfHealthFactorIsBroken(address _user) internal view {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"src/DSCEngine.sol\":7494:7759  function _getAccountInformation(address user)... */\n    tag_198:\n        /* \"src/DSCEngine.sol\":7586:7608  uint256 totalDscMinted */\n      0x00\n        /* \"src/DSCEngine.sol\":7610:7638  uint256 collateralValueInUsd */\n      0x00\n        /* \"src/DSCEngine.sol\":7671:7682  s_DscMinted */\n      0x03\n        /* \"src/DSCEngine.sol\":7671:7688  s_DscMinted[user] */\n      0x00\n        /* \"src/DSCEngine.sol\":7683:7687  user */\n      dup5\n        /* \"src/DSCEngine.sol\":7671:7688  s_DscMinted[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/DSCEngine.sol\":7654:7688  totalDscMinted = s_DscMinted[user] */\n      swap2\n      pop\n        /* \"src/DSCEngine.sol\":7721:7752  getAccountCollateralValue(user) */\n      tag_230\n        /* \"src/DSCEngine.sol\":7747:7751  user */\n      dup4\n        /* \"src/DSCEngine.sol\":7721:7746  getAccountCollateralValue */\n      tag_42\n        /* \"src/DSCEngine.sol\":7721:7752  getAccountCollateralValue(user) */\n      jump\t// in\n    tag_230:\n        /* \"src/DSCEngine.sol\":7698:7752  collateralValueInUsd = getAccountCollateralValue(user) */\n      swap1\n      pop\n        /* \"src/DSCEngine.sol\":7494:7759  function _getAccountInformation(address user)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_232:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_234:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_235:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_266\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_234\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_236:\n        /* \"#utility.yul\":641:665   */\n      tag_268\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_235\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_269:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_237:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_271\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_236\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_238:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_239:\n        /* \"#utility.yul\":997:1021   */\n      tag_274\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_238\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_275:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_240:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_277\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_239\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1816   */\n    tag_26:\n        /* \"#utility.yul\":1274:1280   */\n      0x00\n        /* \"#utility.yul\":1282:1288   */\n      0x00\n        /* \"#utility.yul\":1290:1296   */\n      0x00\n        /* \"#utility.yul\":1339:1341   */\n      0x60\n        /* \"#utility.yul\":1327:1336   */\n      dup5\n        /* \"#utility.yul\":1318:1325   */\n      dup7\n        /* \"#utility.yul\":1314:1337   */\n      sub\n        /* \"#utility.yul\":1310:1342   */\n      slt\n        /* \"#utility.yul\":1307:1426   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":1345:1424   */\n      tag_280\n      tag_232\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":1307:1426   */\n    tag_279:\n        /* \"#utility.yul\":1465:1466   */\n      0x00\n        /* \"#utility.yul\":1490:1543   */\n      tag_281\n        /* \"#utility.yul\":1535:1542   */\n      dup7\n        /* \"#utility.yul\":1526:1532   */\n      dup3\n        /* \"#utility.yul\":1515:1524   */\n      dup8\n        /* \"#utility.yul\":1511:1533   */\n      add\n        /* \"#utility.yul\":1490:1543   */\n      tag_237\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1480:1543   */\n      swap4\n      pop\n        /* \"#utility.yul\":1436:1553   */\n      pop\n        /* \"#utility.yul\":1592:1594   */\n      0x20\n        /* \"#utility.yul\":1618:1671   */\n      tag_282\n        /* \"#utility.yul\":1663:1670   */\n      dup7\n        /* \"#utility.yul\":1654:1660   */\n      dup3\n        /* \"#utility.yul\":1643:1652   */\n      dup8\n        /* \"#utility.yul\":1639:1661   */\n      add\n        /* \"#utility.yul\":1618:1671   */\n      tag_237\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":1608:1671   */\n      swap3\n      pop\n        /* \"#utility.yul\":1563:1681   */\n      pop\n        /* \"#utility.yul\":1720:1722   */\n      0x40\n        /* \"#utility.yul\":1746:1799   */\n      tag_283\n        /* \"#utility.yul\":1791:1798   */\n      dup7\n        /* \"#utility.yul\":1782:1788   */\n      dup3\n        /* \"#utility.yul\":1771:1780   */\n      dup8\n        /* \"#utility.yul\":1767:1789   */\n      add\n        /* \"#utility.yul\":1746:1799   */\n      tag_240\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1736:1799   */\n      swap2\n      pop\n        /* \"#utility.yul\":1691:1809   */\n      pop\n        /* \"#utility.yul\":1197:1816   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1822:1940   */\n    tag_241:\n        /* \"#utility.yul\":1909:1933   */\n      tag_285\n        /* \"#utility.yul\":1927:1932   */\n      dup2\n        /* \"#utility.yul\":1909:1933   */\n      tag_238\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":1904:1907   */\n      dup3\n        /* \"#utility.yul\":1897:1934   */\n      mstore\n        /* \"#utility.yul\":1822:1940   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1946:2168   */\n    tag_31:\n        /* \"#utility.yul\":2039:2043   */\n      0x00\n        /* \"#utility.yul\":2077:2079   */\n      0x20\n        /* \"#utility.yul\":2066:2075   */\n      dup3\n        /* \"#utility.yul\":2062:2080   */\n      add\n        /* \"#utility.yul\":2054:2080   */\n      swap1\n      pop\n        /* \"#utility.yul\":2090:2161   */\n      tag_287\n        /* \"#utility.yul\":2158:2159   */\n      0x00\n        /* \"#utility.yul\":2147:2156   */\n      dup4\n        /* \"#utility.yul\":2143:2160   */\n      add\n        /* \"#utility.yul\":2134:2140   */\n      dup5\n        /* \"#utility.yul\":2090:2161   */\n      tag_241\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":1946:2168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2174:2234   */\n    tag_242:\n        /* \"#utility.yul\":2202:2205   */\n      0x00\n        /* \"#utility.yul\":2223:2228   */\n      dup2\n        /* \"#utility.yul\":2216:2228   */\n      swap1\n      pop\n        /* \"#utility.yul\":2174:2234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2240:2382   */\n    tag_243:\n        /* \"#utility.yul\":2290:2299   */\n      0x00\n        /* \"#utility.yul\":2323:2376   */\n      tag_290\n        /* \"#utility.yul\":2341:2375   */\n      tag_291\n        /* \"#utility.yul\":2350:2374   */\n      tag_292\n        /* \"#utility.yul\":2368:2373   */\n      dup5\n        /* \"#utility.yul\":2350:2374   */\n      tag_234\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":2341:2375   */\n      tag_242\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2323:2376   */\n      tag_234\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2310:2376   */\n      swap1\n      pop\n        /* \"#utility.yul\":2240:2382   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2388:2514   */\n    tag_244:\n        /* \"#utility.yul\":2438:2447   */\n      0x00\n        /* \"#utility.yul\":2471:2508   */\n      tag_294\n        /* \"#utility.yul\":2502:2507   */\n      dup3\n        /* \"#utility.yul\":2471:2508   */\n      tag_243\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2458:2508   */\n      swap1\n      pop\n        /* \"#utility.yul\":2388:2514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2520:2678   */\n    tag_245:\n        /* \"#utility.yul\":2602:2611   */\n      0x00\n        /* \"#utility.yul\":2635:2672   */\n      tag_296\n        /* \"#utility.yul\":2666:2671   */\n      dup3\n        /* \"#utility.yul\":2635:2672   */\n      tag_244\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2622:2672   */\n      swap1\n      pop\n        /* \"#utility.yul\":2520:2678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2684:2879   */\n    tag_246:\n        /* \"#utility.yul\":2803:2872   */\n      tag_298\n        /* \"#utility.yul\":2866:2871   */\n      dup2\n        /* \"#utility.yul\":2803:2872   */\n      tag_245\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2798:2801   */\n      dup3\n        /* \"#utility.yul\":2791:2873   */\n      mstore\n        /* \"#utility.yul\":2684:2879   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:3171   */\n    tag_35:\n        /* \"#utility.yul\":3010:3014   */\n      0x00\n        /* \"#utility.yul\":3048:3050   */\n      0x20\n        /* \"#utility.yul\":3037:3046   */\n      dup3\n        /* \"#utility.yul\":3033:3051   */\n      add\n        /* \"#utility.yul\":3025:3051   */\n      swap1\n      pop\n        /* \"#utility.yul\":3061:3164   */\n      tag_300\n        /* \"#utility.yul\":3161:3162   */\n      0x00\n        /* \"#utility.yul\":3150:3159   */\n      dup4\n        /* \"#utility.yul\":3146:3163   */\n      add\n        /* \"#utility.yul\":3137:3143   */\n      dup5\n        /* \"#utility.yul\":3061:3164   */\n      tag_246\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":2885:3171   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3177:3506   */\n    tag_41:\n        /* \"#utility.yul\":3236:3242   */\n      0x00\n        /* \"#utility.yul\":3285:3287   */\n      0x20\n        /* \"#utility.yul\":3273:3282   */\n      dup3\n        /* \"#utility.yul\":3264:3271   */\n      dup5\n        /* \"#utility.yul\":3260:3283   */\n      sub\n        /* \"#utility.yul\":3256:3288   */\n      slt\n        /* \"#utility.yul\":3253:3372   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":3291:3370   */\n      tag_303\n      tag_232\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3253:3372   */\n    tag_302:\n        /* \"#utility.yul\":3411:3412   */\n      0x00\n        /* \"#utility.yul\":3436:3489   */\n      tag_304\n        /* \"#utility.yul\":3481:3488   */\n      dup5\n        /* \"#utility.yul\":3472:3478   */\n      dup3\n        /* \"#utility.yul\":3461:3470   */\n      dup6\n        /* \"#utility.yul\":3457:3479   */\n      add\n        /* \"#utility.yul\":3436:3489   */\n      tag_237\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3426:3489   */\n      swap2\n      pop\n        /* \"#utility.yul\":3382:3499   */\n      pop\n        /* \"#utility.yul\":3177:3506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3512:3986   */\n    tag_49:\n        /* \"#utility.yul\":3580:3586   */\n      0x00\n        /* \"#utility.yul\":3588:3594   */\n      0x00\n        /* \"#utility.yul\":3637:3639   */\n      0x40\n        /* \"#utility.yul\":3625:3634   */\n      dup4\n        /* \"#utility.yul\":3616:3623   */\n      dup6\n        /* \"#utility.yul\":3612:3635   */\n      sub\n        /* \"#utility.yul\":3608:3640   */\n      slt\n        /* \"#utility.yul\":3605:3724   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":3643:3722   */\n      tag_307\n      tag_232\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3605:3724   */\n    tag_306:\n        /* \"#utility.yul\":3763:3764   */\n      0x00\n        /* \"#utility.yul\":3788:3841   */\n      tag_308\n        /* \"#utility.yul\":3833:3840   */\n      dup6\n        /* \"#utility.yul\":3824:3830   */\n      dup3\n        /* \"#utility.yul\":3813:3822   */\n      dup7\n        /* \"#utility.yul\":3809:3831   */\n      add\n        /* \"#utility.yul\":3788:3841   */\n      tag_237\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":3778:3841   */\n      swap3\n      pop\n        /* \"#utility.yul\":3734:3851   */\n      pop\n        /* \"#utility.yul\":3890:3892   */\n      0x20\n        /* \"#utility.yul\":3916:3969   */\n      tag_309\n        /* \"#utility.yul\":3961:3968   */\n      dup6\n        /* \"#utility.yul\":3952:3958   */\n      dup3\n        /* \"#utility.yul\":3941:3950   */\n      dup7\n        /* \"#utility.yul\":3937:3959   */\n      add\n        /* \"#utility.yul\":3916:3969   */\n      tag_240\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3906:3969   */\n      swap2\n      pop\n        /* \"#utility.yul\":3861:3979   */\n      pop\n        /* \"#utility.yul\":3512:3986   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3992:4321   */\n    tag_71:\n        /* \"#utility.yul\":4051:4057   */\n      0x00\n        /* \"#utility.yul\":4100:4102   */\n      0x20\n        /* \"#utility.yul\":4088:4097   */\n      dup3\n        /* \"#utility.yul\":4079:4086   */\n      dup5\n        /* \"#utility.yul\":4075:4098   */\n      sub\n        /* \"#utility.yul\":4071:4103   */\n      slt\n        /* \"#utility.yul\":4068:4187   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":4106:4185   */\n      tag_312\n      tag_232\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4068:4187   */\n    tag_311:\n        /* \"#utility.yul\":4226:4227   */\n      0x00\n        /* \"#utility.yul\":4251:4304   */\n      tag_313\n        /* \"#utility.yul\":4296:4303   */\n      dup5\n        /* \"#utility.yul\":4287:4293   */\n      dup3\n        /* \"#utility.yul\":4276:4285   */\n      dup6\n        /* \"#utility.yul\":4272:4294   */\n      add\n        /* \"#utility.yul\":4251:4304   */\n      tag_240\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4241:4304   */\n      swap2\n      pop\n        /* \"#utility.yul\":4197:4314   */\n      pop\n        /* \"#utility.yul\":3992:4321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4327:4946   */\n    tag_75:\n        /* \"#utility.yul\":4404:4410   */\n      0x00\n        /* \"#utility.yul\":4412:4418   */\n      0x00\n        /* \"#utility.yul\":4420:4426   */\n      0x00\n        /* \"#utility.yul\":4469:4471   */\n      0x60\n        /* \"#utility.yul\":4457:4466   */\n      dup5\n        /* \"#utility.yul\":4448:4455   */\n      dup7\n        /* \"#utility.yul\":4444:4467   */\n      sub\n        /* \"#utility.yul\":4440:4472   */\n      slt\n        /* \"#utility.yul\":4437:4556   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":4475:4554   */\n      tag_316\n      tag_232\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4437:4556   */\n    tag_315:\n        /* \"#utility.yul\":4595:4596   */\n      0x00\n        /* \"#utility.yul\":4620:4673   */\n      tag_317\n        /* \"#utility.yul\":4665:4672   */\n      dup7\n        /* \"#utility.yul\":4656:4662   */\n      dup3\n        /* \"#utility.yul\":4645:4654   */\n      dup8\n        /* \"#utility.yul\":4641:4663   */\n      add\n        /* \"#utility.yul\":4620:4673   */\n      tag_237\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4610:4673   */\n      swap4\n      pop\n        /* \"#utility.yul\":4566:4683   */\n      pop\n        /* \"#utility.yul\":4722:4724   */\n      0x20\n        /* \"#utility.yul\":4748:4801   */\n      tag_318\n        /* \"#utility.yul\":4793:4800   */\n      dup7\n        /* \"#utility.yul\":4784:4790   */\n      dup3\n        /* \"#utility.yul\":4773:4782   */\n      dup8\n        /* \"#utility.yul\":4769:4791   */\n      add\n        /* \"#utility.yul\":4748:4801   */\n      tag_240\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4738:4801   */\n      swap3\n      pop\n        /* \"#utility.yul\":4693:4811   */\n      pop\n        /* \"#utility.yul\":4850:4852   */\n      0x40\n        /* \"#utility.yul\":4876:4929   */\n      tag_319\n        /* \"#utility.yul\":4921:4928   */\n      dup7\n        /* \"#utility.yul\":4912:4918   */\n      dup3\n        /* \"#utility.yul\":4901:4910   */\n      dup8\n        /* \"#utility.yul\":4897:4919   */\n      add\n        /* \"#utility.yul\":4876:4929   */\n      tag_240\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4866:4929   */\n      swap2\n      pop\n        /* \"#utility.yul\":4821:4939   */\n      pop\n        /* \"#utility.yul\":4327:4946   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4952:5132   */\n    tag_247:\n        /* \"#utility.yul\":5000:5077   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4997:4998   */\n      0x00\n        /* \"#utility.yul\":4990:5078   */\n      mstore\n        /* \"#utility.yul\":5097:5101   */\n      0x11\n        /* \"#utility.yul\":5094:5095   */\n      0x04\n        /* \"#utility.yul\":5087:5102   */\n      mstore\n        /* \"#utility.yul\":5121:5125   */\n      0x24\n        /* \"#utility.yul\":5118:5119   */\n      0x00\n        /* \"#utility.yul\":5111:5126   */\n      revert\n        /* \"#utility.yul\":5138:5548   */\n    tag_98:\n        /* \"#utility.yul\":5178:5185   */\n      0x00\n        /* \"#utility.yul\":5201:5221   */\n      tag_322\n        /* \"#utility.yul\":5219:5220   */\n      dup3\n        /* \"#utility.yul\":5201:5221   */\n      tag_238\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":5196:5221   */\n      swap2\n      pop\n        /* \"#utility.yul\":5235:5255   */\n      tag_323\n        /* \"#utility.yul\":5253:5254   */\n      dup4\n        /* \"#utility.yul\":5235:5255   */\n      tag_238\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5230:5255   */\n      swap3\n      pop\n        /* \"#utility.yul\":5290:5291   */\n      dup3\n        /* \"#utility.yul\":5287:5288   */\n      dup3\n        /* \"#utility.yul\":5283:5292   */\n      mul\n        /* \"#utility.yul\":5312:5342   */\n      tag_324\n        /* \"#utility.yul\":5330:5341   */\n      dup2\n        /* \"#utility.yul\":5312:5342   */\n      tag_238\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5301:5342   */\n      swap2\n      pop\n        /* \"#utility.yul\":5491:5492   */\n      dup3\n        /* \"#utility.yul\":5482:5489   */\n      dup3\n        /* \"#utility.yul\":5478:5493   */\n      div\n        /* \"#utility.yul\":5475:5476   */\n      dup5\n        /* \"#utility.yul\":5472:5494   */\n      eq\n        /* \"#utility.yul\":5452:5453   */\n      dup4\n        /* \"#utility.yul\":5445:5454   */\n      iszero\n        /* \"#utility.yul\":5425:5508   */\n      or\n        /* \"#utility.yul\":5402:5541   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":5521:5539   */\n      tag_326\n      tag_247\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5402:5541   */\n    tag_325:\n        /* \"#utility.yul\":5186:5548   */\n      pop\n        /* \"#utility.yul\":5138:5548   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5554:5734   */\n    tag_248:\n        /* \"#utility.yul\":5602:5679   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5599:5600   */\n      0x00\n        /* \"#utility.yul\":5592:5680   */\n      mstore\n        /* \"#utility.yul\":5699:5703   */\n      0x12\n        /* \"#utility.yul\":5696:5697   */\n      0x04\n        /* \"#utility.yul\":5689:5704   */\n      mstore\n        /* \"#utility.yul\":5723:5727   */\n      0x24\n        /* \"#utility.yul\":5720:5721   */\n      0x00\n        /* \"#utility.yul\":5713:5728   */\n      revert\n        /* \"#utility.yul\":5740:5925   */\n    tag_100:\n        /* \"#utility.yul\":5780:5781   */\n      0x00\n        /* \"#utility.yul\":5797:5817   */\n      tag_329\n        /* \"#utility.yul\":5815:5816   */\n      dup3\n        /* \"#utility.yul\":5797:5817   */\n      tag_238\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5792:5817   */\n      swap2\n      pop\n        /* \"#utility.yul\":5831:5851   */\n      tag_330\n        /* \"#utility.yul\":5849:5850   */\n      dup4\n        /* \"#utility.yul\":5831:5851   */\n      tag_238\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5826:5851   */\n      swap3\n      pop\n        /* \"#utility.yul\":5870:5871   */\n      dup3\n        /* \"#utility.yul\":5860:5895   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":5875:5893   */\n      tag_332\n      tag_248\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":5860:5895   */\n    tag_331:\n        /* \"#utility.yul\":5917:5918   */\n      dup3\n        /* \"#utility.yul\":5914:5915   */\n      dup3\n        /* \"#utility.yul\":5910:5919   */\n      div\n        /* \"#utility.yul\":5905:5919   */\n      swap1\n      pop\n        /* \"#utility.yul\":5740:5925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5931:6122   */\n    tag_102:\n        /* \"#utility.yul\":5971:5974   */\n      0x00\n        /* \"#utility.yul\":5990:6010   */\n      tag_334\n        /* \"#utility.yul\":6008:6009   */\n      dup3\n        /* \"#utility.yul\":5990:6010   */\n      tag_238\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":5985:6010   */\n      swap2\n      pop\n        /* \"#utility.yul\":6024:6044   */\n      tag_335\n        /* \"#utility.yul\":6042:6043   */\n      dup4\n        /* \"#utility.yul\":6024:6044   */\n      tag_238\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6019:6044   */\n      swap3\n      pop\n        /* \"#utility.yul\":6067:6068   */\n      dup3\n        /* \"#utility.yul\":6064:6065   */\n      dup3\n        /* \"#utility.yul\":6060:6069   */\n      add\n        /* \"#utility.yul\":6053:6069   */\n      swap1\n      pop\n        /* \"#utility.yul\":6088:6091   */\n      dup1\n        /* \"#utility.yul\":6085:6086   */\n      dup3\n        /* \"#utility.yul\":6082:6092   */\n      gt\n        /* \"#utility.yul\":6079:6115   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":6095:6113   */\n      tag_337\n      tag_247\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6079:6115   */\n    tag_336:\n        /* \"#utility.yul\":5931:6122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6128:6308   */\n    tag_119:\n        /* \"#utility.yul\":6176:6253   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6173:6174   */\n      0x00\n        /* \"#utility.yul\":6166:6254   */\n      mstore\n        /* \"#utility.yul\":6273:6277   */\n      0x32\n        /* \"#utility.yul\":6270:6271   */\n      0x04\n        /* \"#utility.yul\":6263:6278   */\n      mstore\n        /* \"#utility.yul\":6297:6301   */\n      0x24\n        /* \"#utility.yul\":6294:6295   */\n      0x00\n        /* \"#utility.yul\":6287:6302   */\n      revert\n        /* \"#utility.yul\":6314:6547   */\n    tag_124:\n        /* \"#utility.yul\":6353:6356   */\n      0x00\n        /* \"#utility.yul\":6376:6400   */\n      tag_340\n        /* \"#utility.yul\":6394:6399   */\n      dup3\n        /* \"#utility.yul\":6376:6400   */\n      tag_238\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6367:6400   */\n      swap2\n      pop\n        /* \"#utility.yul\":6422:6488   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6415:6420   */\n      dup3\n        /* \"#utility.yul\":6412:6489   */\n      sub\n        /* \"#utility.yul\":6409:6512   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":6492:6510   */\n      tag_342\n      tag_247\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":6409:6512   */\n    tag_341:\n        /* \"#utility.yul\":6539:6540   */\n      0x01\n        /* \"#utility.yul\":6532:6537   */\n      dup3\n        /* \"#utility.yul\":6528:6541   */\n      add\n        /* \"#utility.yul\":6521:6541   */\n      swap1\n      pop\n        /* \"#utility.yul\":6314:6547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6553:6671   */\n    tag_249:\n        /* \"#utility.yul\":6640:6664   */\n      tag_344\n        /* \"#utility.yul\":6658:6663   */\n      dup2\n        /* \"#utility.yul\":6640:6664   */\n      tag_235\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":6635:6638   */\n      dup3\n        /* \"#utility.yul\":6628:6665   */\n      mstore\n        /* \"#utility.yul\":6553:6671   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6677:7119   */\n    tag_142:\n        /* \"#utility.yul\":6826:6830   */\n      0x00\n        /* \"#utility.yul\":6864:6866   */\n      0x60\n        /* \"#utility.yul\":6853:6862   */\n      dup3\n        /* \"#utility.yul\":6849:6867   */\n      add\n        /* \"#utility.yul\":6841:6867   */\n      swap1\n      pop\n        /* \"#utility.yul\":6877:6948   */\n      tag_346\n        /* \"#utility.yul\":6945:6946   */\n      0x00\n        /* \"#utility.yul\":6934:6943   */\n      dup4\n        /* \"#utility.yul\":6930:6947   */\n      add\n        /* \"#utility.yul\":6921:6927   */\n      dup7\n        /* \"#utility.yul\":6877:6948   */\n      tag_249\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":6958:7030   */\n      tag_347\n        /* \"#utility.yul\":7026:7028   */\n      0x20\n        /* \"#utility.yul\":7015:7024   */\n      dup4\n        /* \"#utility.yul\":7011:7029   */\n      add\n        /* \"#utility.yul\":7002:7008   */\n      dup6\n        /* \"#utility.yul\":6958:7030   */\n      tag_249\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":7040:7112   */\n      tag_348\n        /* \"#utility.yul\":7108:7110   */\n      0x40\n        /* \"#utility.yul\":7097:7106   */\n      dup4\n        /* \"#utility.yul\":7093:7111   */\n      add\n        /* \"#utility.yul\":7084:7090   */\n      dup5\n        /* \"#utility.yul\":7040:7112   */\n      tag_241\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":6677:7119   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7125:7215   */\n    tag_250:\n        /* \"#utility.yul\":7159:7166   */\n      0x00\n        /* \"#utility.yul\":7202:7207   */\n      dup2\n        /* \"#utility.yul\":7195:7208   */\n      iszero\n        /* \"#utility.yul\":7188:7209   */\n      iszero\n        /* \"#utility.yul\":7177:7209   */\n      swap1\n      pop\n        /* \"#utility.yul\":7125:7215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7221:7337   */\n    tag_251:\n        /* \"#utility.yul\":7291:7312   */\n      tag_351\n        /* \"#utility.yul\":7306:7311   */\n      dup2\n        /* \"#utility.yul\":7291:7312   */\n      tag_250\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7284:7289   */\n      dup2\n        /* \"#utility.yul\":7281:7313   */\n      eq\n        /* \"#utility.yul\":7271:7331   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":7327:7328   */\n      0x00\n        /* \"#utility.yul\":7324:7325   */\n      0x00\n        /* \"#utility.yul\":7317:7329   */\n      revert\n        /* \"#utility.yul\":7271:7331   */\n    tag_352:\n        /* \"#utility.yul\":7221:7337   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7343:7480   */\n    tag_252:\n        /* \"#utility.yul\":7397:7402   */\n      0x00\n        /* \"#utility.yul\":7428:7434   */\n      dup2\n        /* \"#utility.yul\":7422:7435   */\n      mload\n        /* \"#utility.yul\":7413:7435   */\n      swap1\n      pop\n        /* \"#utility.yul\":7444:7474   */\n      tag_354\n        /* \"#utility.yul\":7468:7473   */\n      dup2\n        /* \"#utility.yul\":7444:7474   */\n      tag_251\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7343:7480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7486:7831   */\n    tag_146:\n        /* \"#utility.yul\":7553:7559   */\n      0x00\n        /* \"#utility.yul\":7602:7604   */\n      0x20\n        /* \"#utility.yul\":7590:7599   */\n      dup3\n        /* \"#utility.yul\":7581:7588   */\n      dup5\n        /* \"#utility.yul\":7577:7600   */\n      sub\n        /* \"#utility.yul\":7573:7605   */\n      slt\n        /* \"#utility.yul\":7570:7689   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":7608:7687   */\n      tag_357\n      tag_232\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":7570:7689   */\n    tag_356:\n        /* \"#utility.yul\":7728:7729   */\n      0x00\n        /* \"#utility.yul\":7753:7814   */\n      tag_358\n        /* \"#utility.yul\":7806:7813   */\n      dup5\n        /* \"#utility.yul\":7797:7803   */\n      dup3\n        /* \"#utility.yul\":7786:7795   */\n      dup6\n        /* \"#utility.yul\":7782:7804   */\n      add\n        /* \"#utility.yul\":7753:7814   */\n      tag_252\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":7743:7814   */\n      swap2\n      pop\n        /* \"#utility.yul\":7699:7824   */\n      pop\n        /* \"#utility.yul\":7486:7831   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7837:8059   */\n    tag_149:\n        /* \"#utility.yul\":7930:7934   */\n      0x00\n        /* \"#utility.yul\":7968:7970   */\n      0x20\n        /* \"#utility.yul\":7957:7966   */\n      dup3\n        /* \"#utility.yul\":7953:7971   */\n      add\n        /* \"#utility.yul\":7945:7971   */\n      swap1\n      pop\n        /* \"#utility.yul\":7981:8052   */\n      tag_360\n        /* \"#utility.yul\":8049:8050   */\n      0x00\n        /* \"#utility.yul\":8038:8047   */\n      dup4\n        /* \"#utility.yul\":8034:8051   */\n      add\n        /* \"#utility.yul\":8025:8031   */\n      dup5\n        /* \"#utility.yul\":7981:8052   */\n      tag_249\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":7837:8059   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8065:8170   */\n    tag_253:\n        /* \"#utility.yul\":8101:8108   */\n      0x00\n        /* \"#utility.yul\":8141:8163   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":8134:8139   */\n      dup3\n        /* \"#utility.yul\":8130:8164   */\n      and\n        /* \"#utility.yul\":8119:8164   */\n      swap1\n      pop\n        /* \"#utility.yul\":8065:8170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8176:8296   */\n    tag_254:\n        /* \"#utility.yul\":8248:8271   */\n      tag_363\n        /* \"#utility.yul\":8265:8270   */\n      dup2\n        /* \"#utility.yul\":8248:8271   */\n      tag_253\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":8241:8246   */\n      dup2\n        /* \"#utility.yul\":8238:8272   */\n      eq\n        /* \"#utility.yul\":8228:8290   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":8286:8287   */\n      0x00\n        /* \"#utility.yul\":8283:8284   */\n      0x00\n        /* \"#utility.yul\":8276:8288   */\n      revert\n        /* \"#utility.yul\":8228:8290   */\n    tag_364:\n        /* \"#utility.yul\":8176:8296   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8302:8443   */\n    tag_255:\n        /* \"#utility.yul\":8358:8363   */\n      0x00\n        /* \"#utility.yul\":8389:8395   */\n      dup2\n        /* \"#utility.yul\":8383:8396   */\n      mload\n        /* \"#utility.yul\":8374:8396   */\n      swap1\n      pop\n        /* \"#utility.yul\":8405:8437   */\n      tag_366\n        /* \"#utility.yul\":8431:8436   */\n      dup2\n        /* \"#utility.yul\":8405:8437   */\n      tag_254\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":8302:8443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8449:8525   */\n    tag_256:\n        /* \"#utility.yul\":8485:8492   */\n      0x00\n        /* \"#utility.yul\":8514:8519   */\n      dup2\n        /* \"#utility.yul\":8503:8519   */\n      swap1\n      pop\n        /* \"#utility.yul\":8449:8525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8531:8651   */\n    tag_257:\n        /* \"#utility.yul\":8603:8626   */\n      tag_369\n        /* \"#utility.yul\":8620:8625   */\n      dup2\n        /* \"#utility.yul\":8603:8626   */\n      tag_256\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":8596:8601   */\n      dup2\n        /* \"#utility.yul\":8593:8627   */\n      eq\n        /* \"#utility.yul\":8583:8645   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":8641:8642   */\n      0x00\n        /* \"#utility.yul\":8638:8639   */\n      0x00\n        /* \"#utility.yul\":8631:8643   */\n      revert\n        /* \"#utility.yul\":8583:8645   */\n    tag_370:\n        /* \"#utility.yul\":8531:8651   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8657:8798   */\n    tag_258:\n        /* \"#utility.yul\":8713:8718   */\n      0x00\n        /* \"#utility.yul\":8744:8750   */\n      dup2\n        /* \"#utility.yul\":8738:8751   */\n      mload\n        /* \"#utility.yul\":8729:8751   */\n      swap1\n      pop\n        /* \"#utility.yul\":8760:8792   */\n      tag_372\n        /* \"#utility.yul\":8786:8791   */\n      dup2\n        /* \"#utility.yul\":8760:8792   */\n      tag_257\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":8657:8798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8804:8947   */\n    tag_259:\n        /* \"#utility.yul\":8861:8866   */\n      0x00\n        /* \"#utility.yul\":8892:8898   */\n      dup2\n        /* \"#utility.yul\":8886:8899   */\n      mload\n        /* \"#utility.yul\":8877:8899   */\n      swap1\n      pop\n        /* \"#utility.yul\":8908:8941   */\n      tag_374\n        /* \"#utility.yul\":8935:8940   */\n      dup2\n        /* \"#utility.yul\":8908:8941   */\n      tag_239\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":8804:8947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8953:9924   */\n    tag_156:\n        /* \"#utility.yul\":9056:9062   */\n      0x00\n        /* \"#utility.yul\":9064:9070   */\n      0x00\n        /* \"#utility.yul\":9072:9078   */\n      0x00\n        /* \"#utility.yul\":9080:9086   */\n      0x00\n        /* \"#utility.yul\":9088:9094   */\n      0x00\n        /* \"#utility.yul\":9137:9140   */\n      0xa0\n        /* \"#utility.yul\":9125:9134   */\n      dup7\n        /* \"#utility.yul\":9116:9123   */\n      dup9\n        /* \"#utility.yul\":9112:9135   */\n      sub\n        /* \"#utility.yul\":9108:9141   */\n      slt\n        /* \"#utility.yul\":9105:9225   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":9144:9223   */\n      tag_377\n      tag_232\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":9105:9225   */\n    tag_376:\n        /* \"#utility.yul\":9264:9265   */\n      0x00\n        /* \"#utility.yul\":9289:9352   */\n      tag_378\n        /* \"#utility.yul\":9344:9351   */\n      dup9\n        /* \"#utility.yul\":9335:9341   */\n      dup3\n        /* \"#utility.yul\":9324:9333   */\n      dup10\n        /* \"#utility.yul\":9320:9342   */\n      add\n        /* \"#utility.yul\":9289:9352   */\n      tag_255\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":9279:9352   */\n      swap6\n      pop\n        /* \"#utility.yul\":9235:9362   */\n      pop\n        /* \"#utility.yul\":9401:9403   */\n      0x20\n        /* \"#utility.yul\":9427:9490   */\n      tag_379\n        /* \"#utility.yul\":9482:9489   */\n      dup9\n        /* \"#utility.yul\":9473:9479   */\n      dup3\n        /* \"#utility.yul\":9462:9471   */\n      dup10\n        /* \"#utility.yul\":9458:9480   */\n      add\n        /* \"#utility.yul\":9427:9490   */\n      tag_258\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":9417:9490   */\n      swap5\n      pop\n        /* \"#utility.yul\":9372:9500   */\n      pop\n        /* \"#utility.yul\":9539:9541   */\n      0x40\n        /* \"#utility.yul\":9565:9629   */\n      tag_380\n        /* \"#utility.yul\":9621:9628   */\n      dup9\n        /* \"#utility.yul\":9612:9618   */\n      dup3\n        /* \"#utility.yul\":9601:9610   */\n      dup10\n        /* \"#utility.yul\":9597:9619   */\n      add\n        /* \"#utility.yul\":9565:9629   */\n      tag_259\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":9555:9629   */\n      swap4\n      pop\n        /* \"#utility.yul\":9510:9639   */\n      pop\n        /* \"#utility.yul\":9678:9680   */\n      0x60\n        /* \"#utility.yul\":9704:9768   */\n      tag_381\n        /* \"#utility.yul\":9760:9767   */\n      dup9\n        /* \"#utility.yul\":9751:9757   */\n      dup3\n        /* \"#utility.yul\":9740:9749   */\n      dup10\n        /* \"#utility.yul\":9736:9758   */\n      add\n        /* \"#utility.yul\":9704:9768   */\n      tag_259\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":9694:9768   */\n      swap3\n      pop\n        /* \"#utility.yul\":9649:9778   */\n      pop\n        /* \"#utility.yul\":9817:9820   */\n      0x80\n        /* \"#utility.yul\":9844:9907   */\n      tag_382\n        /* \"#utility.yul\":9899:9906   */\n      dup9\n        /* \"#utility.yul\":9890:9896   */\n      dup3\n        /* \"#utility.yul\":9879:9888   */\n      dup10\n        /* \"#utility.yul\":9875:9897   */\n      add\n        /* \"#utility.yul\":9844:9907   */\n      tag_255\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":9834:9907   */\n      swap2\n      pop\n        /* \"#utility.yul\":9788:9917   */\n      pop\n        /* \"#utility.yul\":8953:9924   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9930:10262   */\n    tag_168:\n        /* \"#utility.yul\":10051:10055   */\n      0x00\n        /* \"#utility.yul\":10089:10091   */\n      0x40\n        /* \"#utility.yul\":10078:10087   */\n      dup3\n        /* \"#utility.yul\":10074:10092   */\n      add\n        /* \"#utility.yul\":10066:10092   */\n      swap1\n      pop\n        /* \"#utility.yul\":10102:10173   */\n      tag_384\n        /* \"#utility.yul\":10170:10171   */\n      0x00\n        /* \"#utility.yul\":10159:10168   */\n      dup4\n        /* \"#utility.yul\":10155:10172   */\n      add\n        /* \"#utility.yul\":10146:10152   */\n      dup6\n        /* \"#utility.yul\":10102:10173   */\n      tag_249\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":10183:10255   */\n      tag_385\n        /* \"#utility.yul\":10251:10253   */\n      0x20\n        /* \"#utility.yul\":10240:10249   */\n      dup4\n        /* \"#utility.yul\":10236:10254   */\n      add\n        /* \"#utility.yul\":10227:10233   */\n      dup5\n        /* \"#utility.yul\":10183:10255   */\n      tag_241\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":9930:10262   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10268:10462   */\n    tag_205:\n        /* \"#utility.yul\":10308:10312   */\n      0x00\n        /* \"#utility.yul\":10328:10348   */\n      tag_387\n        /* \"#utility.yul\":10346:10347   */\n      dup3\n        /* \"#utility.yul\":10328:10348   */\n      tag_238\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":10323:10348   */\n      swap2\n      pop\n        /* \"#utility.yul\":10362:10382   */\n      tag_388\n        /* \"#utility.yul\":10380:10381   */\n      dup4\n        /* \"#utility.yul\":10362:10382   */\n      tag_238\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":10357:10382   */\n      swap3\n      pop\n        /* \"#utility.yul\":10406:10407   */\n      dup3\n        /* \"#utility.yul\":10403:10404   */\n      dup3\n        /* \"#utility.yul\":10399:10408   */\n      sub\n        /* \"#utility.yul\":10391:10408   */\n      swap1\n      pop\n        /* \"#utility.yul\":10430:10431   */\n      dup2\n        /* \"#utility.yul\":10424:10428   */\n      dup2\n        /* \"#utility.yul\":10421:10432   */\n      gt\n        /* \"#utility.yul\":10418:10455   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":10435:10453   */\n      tag_390\n      tag_247\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":10418:10455   */\n    tag_389:\n        /* \"#utility.yul\":10268:10462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220be4dda95dc4112ccb28efc7c1063637d711aaaefd996fb9ea84b6233e9d6faf664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1001": {
									"entryPoint": null,
									"id": 1001,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1293": {
									"entryPoint": null,
									"id": 1293,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_memory": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 601,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1180,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 708,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4545:11",
										"nodeType": "YulBlock",
										"src": "0:4545:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "759:80:11",
													"nodeType": "YulBlock",
													"src": "759:80:11",
													"statements": [
														{
															"nativeSrc": "769:22:11",
															"nodeType": "YulAssignment",
															"src": "769:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:11"
																},
																"nativeSrc": "778:13:11",
																"nodeType": "YulFunctionCall",
																"src": "778:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:11"
																},
																"nativeSrc": "800:33:11",
																"nodeType": "YulFunctionCall",
																"src": "800:33:11"
															},
															"nativeSrc": "800:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:11",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:11",
														"nodeType": "YulTypedName",
														"src": "745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:11",
														"nodeType": "YulTypedName",
														"src": "753:5:11",
														"type": ""
													}
												],
												"src": "696:143:11"
											},
											{
												"body": {
													"nativeSrc": "934:28:11",
													"nodeType": "YulBlock",
													"src": "934:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:1:11",
																		"nodeType": "YulLiteral",
																		"src": "951:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:11",
																		"nodeType": "YulLiteral",
																		"src": "954:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "944:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:11"
																},
																"nativeSrc": "944:12:11",
																"nodeType": "YulFunctionCall",
																"src": "944:12:11"
															},
															"nativeSrc": "944:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "944:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "845:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:11"
											},
											{
												"body": {
													"nativeSrc": "1016:54:11",
													"nodeType": "YulBlock",
													"src": "1016:54:11",
													"statements": [
														{
															"nativeSrc": "1026:38:11",
															"nodeType": "YulAssignment",
															"src": "1026:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1044:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1044:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1051:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1040:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1040:3:11"
																		},
																		"nativeSrc": "1040:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1040:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1060:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1060:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1056:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1056:3:11"
																		},
																		"nativeSrc": "1056:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1056:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1036:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:11"
																},
																"nativeSrc": "1036:28:11",
																"nodeType": "YulFunctionCall",
																"src": "1036:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1026:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1026:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "968:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "999:5:11",
														"nodeType": "YulTypedName",
														"src": "999:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1009:6:11",
														"nodeType": "YulTypedName",
														"src": "1009:6:11",
														"type": ""
													}
												],
												"src": "968:102:11"
											},
											{
												"body": {
													"nativeSrc": "1104:152:11",
													"nodeType": "YulBlock",
													"src": "1104:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1121:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1121:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1124:77:11",
																		"nodeType": "YulLiteral",
																		"src": "1124:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1114:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:11"
																},
																"nativeSrc": "1114:88:11",
																"nodeType": "YulFunctionCall",
																"src": "1114:88:11"
															},
															"nativeSrc": "1114:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "1114:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1221:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1221:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1211:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:11"
																},
																"nativeSrc": "1211:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1211:15:11"
															},
															"nativeSrc": "1211:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1211:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1245:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1235:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1235:6:11"
																},
																"nativeSrc": "1235:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1235:15:11"
															},
															"nativeSrc": "1235:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1235:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1076:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1076:180:11"
											},
											{
												"body": {
													"nativeSrc": "1305:238:11",
													"nodeType": "YulBlock",
													"src": "1305:238:11",
													"statements": [
														{
															"nativeSrc": "1315:58:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1315:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1337:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1367:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1367:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1345:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "1345:21:11"
																		},
																		"nativeSrc": "1345:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1345:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1333:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1333:3:11"
																},
																"nativeSrc": "1333:40:11",
																"nodeType": "YulFunctionCall",
																"src": "1333:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1319:10:11",
																	"nodeType": "YulTypedName",
																	"src": "1319:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1484:22:11",
																"nodeType": "YulBlock",
																"src": "1484:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1486:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1486:16:11"
																			},
																			"nativeSrc": "1486:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1486:18:11"
																		},
																		"nativeSrc": "1486:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1486:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1427:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1427:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1439:18:11",
																				"nodeType": "YulLiteral",
																				"src": "1439:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1424:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1424:2:11"
																		},
																		"nativeSrc": "1424:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1424:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1463:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1463:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1475:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1475:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1460:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1460:2:11"
																		},
																		"nativeSrc": "1460:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1460:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1421:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1421:2:11"
																},
																"nativeSrc": "1421:62:11",
																"nodeType": "YulFunctionCall",
																"src": "1421:62:11"
															},
															"nativeSrc": "1418:88:11",
															"nodeType": "YulIf",
															"src": "1418:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1522:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1522:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1526:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "1526:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1515:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1515:6:11"
																},
																"nativeSrc": "1515:22:11",
																"nodeType": "YulFunctionCall",
																"src": "1515:22:11"
															},
															"nativeSrc": "1515:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "1515:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1262:281:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1291:6:11",
														"nodeType": "YulTypedName",
														"src": "1291:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1299:4:11",
														"nodeType": "YulTypedName",
														"src": "1299:4:11",
														"type": ""
													}
												],
												"src": "1262:281:11"
											},
											{
												"body": {
													"nativeSrc": "1590:88:11",
													"nodeType": "YulBlock",
													"src": "1590:88:11",
													"statements": [
														{
															"nativeSrc": "1600:30:11",
															"nodeType": "YulAssignment",
															"src": "1600:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1610:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1610:18:11"
																},
																"nativeSrc": "1610:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1610:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1600:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1600:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1659:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1659:6:11"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1667:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1667:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1639:19:11",
																	"nodeType": "YulIdentifier",
																	"src": "1639:19:11"
																},
																"nativeSrc": "1639:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1639:33:11"
															},
															"nativeSrc": "1639:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1639:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1549:129:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1574:4:11",
														"nodeType": "YulTypedName",
														"src": "1574:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1583:6:11",
														"nodeType": "YulTypedName",
														"src": "1583:6:11",
														"type": ""
													}
												],
												"src": "1549:129:11"
											},
											{
												"body": {
													"nativeSrc": "1766:229:11",
													"nodeType": "YulBlock",
													"src": "1766:229:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1871:22:11",
																"nodeType": "YulBlock",
																"src": "1871:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1873:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1873:16:11"
																			},
																			"nativeSrc": "1873:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1873:18:11"
																		},
																		"nativeSrc": "1873:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1873:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1843:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1843:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1851:18:11",
																		"nodeType": "YulLiteral",
																		"src": "1851:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1840:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1840:2:11"
																},
																"nativeSrc": "1840:30:11",
																"nodeType": "YulFunctionCall",
																"src": "1840:30:11"
															},
															"nativeSrc": "1837:56:11",
															"nodeType": "YulIf",
															"src": "1837:56:11"
														},
														{
															"nativeSrc": "1903:25:11",
															"nodeType": "YulAssignment",
															"src": "1903:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1915:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1923:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1923:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1911:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1911:3:11"
																},
																"nativeSrc": "1911:17:11",
																"nodeType": "YulFunctionCall",
																"src": "1911:17:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1903:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1903:4:11"
																}
															]
														},
														{
															"nativeSrc": "1965:23:11",
															"nodeType": "YulAssignment",
															"src": "1965:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1977:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1977:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1973:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1973:3:11"
																},
																"nativeSrc": "1973:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1973:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1965:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1965:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "1684:311:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1750:6:11",
														"nodeType": "YulTypedName",
														"src": "1750:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1761:4:11",
														"nodeType": "YulTypedName",
														"src": "1761:4:11",
														"type": ""
													}
												],
												"src": "1684:311:11"
											},
											{
												"body": {
													"nativeSrc": "2090:28:11",
													"nodeType": "YulBlock",
													"src": "2090:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2107:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2107:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2110:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2110:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2100:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2100:6:11"
																},
																"nativeSrc": "2100:12:11",
																"nodeType": "YulFunctionCall",
																"src": "2100:12:11"
															},
															"nativeSrc": "2100:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "2100:12:11"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "2001:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "2001:117:11"
											},
											{
												"body": {
													"nativeSrc": "2254:619:11",
													"nodeType": "YulBlock",
													"src": "2254:619:11",
													"statements": [
														{
															"nativeSrc": "2264:90:11",
															"nodeType": "YulAssignment",
															"src": "2264:90:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2346:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2346:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "2289:56:11",
																			"nodeType": "YulIdentifier",
																			"src": "2289:56:11"
																		},
																		"nativeSrc": "2289:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:64:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2273:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "2273:15:11"
																},
																"nativeSrc": "2273:81:11",
																"nodeType": "YulFunctionCall",
																"src": "2273:81:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2264:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2264:5:11"
																}
															]
														},
														{
															"nativeSrc": "2363:16:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:16:11",
															"value": {
																"name": "array",
																"nativeSrc": "2374:5:11",
																"nodeType": "YulIdentifier",
																"src": "2374:5:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2367:3:11",
																	"nodeType": "YulTypedName",
																	"src": "2367:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2396:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2396:5:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2403:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2403:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2389:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:11"
																},
																"nativeSrc": "2389:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2389:21:11"
															},
															"nativeSrc": "2389:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "2389:21:11"
														},
														{
															"nativeSrc": "2419:23:11",
															"nodeType": "YulAssignment",
															"src": "2419:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2430:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2430:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2437:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2437:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2426:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2426:3:11"
																},
																"nativeSrc": "2426:16:11",
																"nodeType": "YulFunctionCall",
																"src": "2426:16:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2419:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2419:3:11"
																}
															]
														},
														{
															"nativeSrc": "2452:44:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:44:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2470:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2470:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2482:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2482:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2490:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2490:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2478:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:11"
																		},
																		"nativeSrc": "2478:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2478:17:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2466:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:11"
																},
																"nativeSrc": "2466:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2466:30:11"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2456:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2456:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2524:103:11",
																"nodeType": "YulBlock",
																"src": "2524:103:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2538:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2538:77:11"
																			},
																			"nativeSrc": "2538:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2538:79:11"
																		},
																		"nativeSrc": "2538:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2538:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2511:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2511:6:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2519:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2519:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2508:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2508:2:11"
																},
																"nativeSrc": "2508:15:11",
																"nodeType": "YulFunctionCall",
																"src": "2508:15:11"
															},
															"nativeSrc": "2505:122:11",
															"nodeType": "YulIf",
															"src": "2505:122:11"
														},
														{
															"body": {
																"nativeSrc": "2712:155:11",
																"nodeType": "YulBlock",
																"src": "2712:155:11",
																"statements": [
																	{
																		"nativeSrc": "2727:21:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2727:21:11",
																		"value": {
																			"name": "src",
																			"nativeSrc": "2745:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:11"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "2731:10:11",
																				"nodeType": "YulTypedName",
																				"src": "2731:10:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2769:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2769:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "2806:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "2806:10:11"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "2818:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "2818:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nativeSrc": "2774:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "2774:31:11"
																					},
																					"nativeSrc": "2774:48:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2774:48:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2762:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2762:6:11"
																			},
																			"nativeSrc": "2762:61:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2762:61:11"
																		},
																		"nativeSrc": "2762:61:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2762:61:11"
																	},
																	{
																		"nativeSrc": "2836:21:11",
																		"nodeType": "YulAssignment",
																		"src": "2836:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2847:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2847:3:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2852:4:11",
																					"nodeType": "YulLiteral",
																					"src": "2852:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2843:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2843:3:11"
																			},
																			"nativeSrc": "2843:14:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2843:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "2836:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2665:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2665:3:11"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2670:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2670:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2662:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2662:2:11"
																},
																"nativeSrc": "2662:15:11",
																"nodeType": "YulFunctionCall",
																"src": "2662:15:11"
															},
															"nativeSrc": "2636:231:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2678:25:11",
																"nodeType": "YulBlock",
																"src": "2678:25:11",
																"statements": [
																	{
																		"nativeSrc": "2680:21:11",
																		"nodeType": "YulAssignment",
																		"src": "2680:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2691:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2696:4:11",
																					"nodeType": "YulLiteral",
																					"src": "2696:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2687:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2687:3:11"
																			},
																			"nativeSrc": "2687:14:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2687:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2680:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2680:3:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2640:21:11",
																"nodeType": "YulBlock",
																"src": "2640:21:11",
																"statements": [
																	{
																		"nativeSrc": "2642:17:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2642:17:11",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "2653:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2653:6:11"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "2646:3:11",
																				"nodeType": "YulTypedName",
																				"src": "2646:3:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2636:231:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2141:732:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2224:6:11",
														"nodeType": "YulTypedName",
														"src": "2224:6:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2232:6:11",
														"nodeType": "YulTypedName",
														"src": "2232:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2240:3:11",
														"nodeType": "YulTypedName",
														"src": "2240:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2248:5:11",
														"nodeType": "YulTypedName",
														"src": "2248:5:11",
														"type": ""
													}
												],
												"src": "2141:732:11"
											},
											{
												"body": {
													"nativeSrc": "2984:297:11",
													"nodeType": "YulBlock",
													"src": "2984:297:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3033:83:11",
																"nodeType": "YulBlock",
																"src": "3033:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3035:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3035:77:11"
																			},
																			"nativeSrc": "3035:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3035:79:11"
																		},
																		"nativeSrc": "3035:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3035:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3012:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3012:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3020:4:11",
																						"nodeType": "YulLiteral",
																						"src": "3020:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3008:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3008:3:11"
																				},
																				"nativeSrc": "3008:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3008:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3027:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3027:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3004:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:11"
																		},
																		"nativeSrc": "3004:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2997:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2997:6:11"
																},
																"nativeSrc": "2997:35:11",
																"nodeType": "YulFunctionCall",
																"src": "2997:35:11"
															},
															"nativeSrc": "2994:122:11",
															"nodeType": "YulIf",
															"src": "2994:122:11"
														},
														{
															"nativeSrc": "3125:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3125:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3145:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3145:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3139:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3139:5:11"
																},
																"nativeSrc": "3139:13:11",
																"nodeType": "YulFunctionCall",
																"src": "3139:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3129:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3129:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3161:114:11",
															"nodeType": "YulAssignment",
															"src": "3161:114:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3248:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3248:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3256:4:11",
																				"nodeType": "YulLiteral",
																				"src": "3256:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3244:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3244:3:11"
																		},
																		"nativeSrc": "3244:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3244:17:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3263:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3263:6:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3271:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3271:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "3170:73:11",
																	"nodeType": "YulIdentifier",
																	"src": "3170:73:11"
																},
																"nativeSrc": "3170:105:11",
																"nodeType": "YulFunctionCall",
																"src": "3170:105:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3161:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3161:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2896:385:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2962:6:11",
														"nodeType": "YulTypedName",
														"src": "2962:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2970:3:11",
														"nodeType": "YulTypedName",
														"src": "2970:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2978:5:11",
														"nodeType": "YulTypedName",
														"src": "2978:5:11",
														"type": ""
													}
												],
												"src": "2896:385:11"
											},
											{
												"body": {
													"nativeSrc": "3448:908:11",
													"nodeType": "YulBlock",
													"src": "3448:908:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3494:83:11",
																"nodeType": "YulBlock",
																"src": "3494:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3496:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3496:77:11"
																			},
																			"nativeSrc": "3496:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3496:79:11"
																		},
																		"nativeSrc": "3496:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3496:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3469:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3469:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3478:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3478:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3465:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3465:3:11"
																		},
																		"nativeSrc": "3465:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3465:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3490:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3490:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3461:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3461:3:11"
																},
																"nativeSrc": "3461:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3461:32:11"
															},
															"nativeSrc": "3458:119:11",
															"nodeType": "YulIf",
															"src": "3458:119:11"
														},
														{
															"nativeSrc": "3587:128:11",
															"nodeType": "YulBlock",
															"src": "3587:128:11",
															"statements": [
																{
																	"nativeSrc": "3602:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3602:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3616:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3616:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3606:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3606:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3631:74:11",
																	"nodeType": "YulAssignment",
																	"src": "3631:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3677:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3677:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3688:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3688:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3673:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3673:3:11"
																				},
																				"nativeSrc": "3673:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3673:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3697:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3697:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3641:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "3641:31:11"
																		},
																		"nativeSrc": "3641:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3641:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3631:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3631:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3725:307:11",
															"nodeType": "YulBlock",
															"src": "3725:307:11",
															"statements": [
																{
																	"nativeSrc": "3740:39:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3740:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3764:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3764:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3775:2:11",
																						"nodeType": "YulLiteral",
																						"src": "3775:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3760:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3760:3:11"
																				},
																				"nativeSrc": "3760:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3760:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3754:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "3754:5:11"
																		},
																		"nativeSrc": "3754:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3754:25:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3744:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3744:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3826:83:11",
																		"nodeType": "YulBlock",
																		"src": "3826:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3828:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "3828:77:11"
																					},
																					"nativeSrc": "3828:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3828:79:11"
																				},
																				"nativeSrc": "3828:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3828:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3798:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3798:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3806:18:11",
																				"nodeType": "YulLiteral",
																				"src": "3806:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3795:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3795:2:11"
																		},
																		"nativeSrc": "3795:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3795:30:11"
																	},
																	"nativeSrc": "3792:117:11",
																	"nodeType": "YulIf",
																	"src": "3792:117:11"
																},
																{
																	"nativeSrc": "3923:99:11",
																	"nodeType": "YulAssignment",
																	"src": "3923:99:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3994:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3994:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4005:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4005:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3990:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3990:3:11"
																				},
																				"nativeSrc": "3990:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3990:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4014:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4014:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "3933:56:11",
																			"nodeType": "YulIdentifier",
																			"src": "3933:56:11"
																		},
																		"nativeSrc": "3933:89:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3933:89:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3923:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3923:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4042:307:11",
															"nodeType": "YulBlock",
															"src": "4042:307:11",
															"statements": [
																{
																	"nativeSrc": "4057:39:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4057:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4081:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4081:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4092:2:11",
																						"nodeType": "YulLiteral",
																						"src": "4092:2:11",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4077:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4077:3:11"
																				},
																				"nativeSrc": "4077:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4077:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4071:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4071:5:11"
																		},
																		"nativeSrc": "4071:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4071:25:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4061:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4061:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4143:83:11",
																		"nodeType": "YulBlock",
																		"src": "4143:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4145:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "4145:77:11"
																					},
																					"nativeSrc": "4145:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4145:79:11"
																				},
																				"nativeSrc": "4145:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "4145:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4115:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4115:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4123:18:11",
																				"nodeType": "YulLiteral",
																				"src": "4123:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4112:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4112:2:11"
																		},
																		"nativeSrc": "4112:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:30:11"
																	},
																	"nativeSrc": "4109:117:11",
																	"nodeType": "YulIf",
																	"src": "4109:117:11"
																},
																{
																	"nativeSrc": "4240:99:11",
																	"nodeType": "YulAssignment",
																	"src": "4240:99:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4311:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4311:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4322:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4322:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4307:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4307:3:11"
																				},
																				"nativeSrc": "4307:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4307:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4331:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4331:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "4250:56:11",
																			"nodeType": "YulIdentifier",
																			"src": "4250:56:11"
																		},
																		"nativeSrc": "4250:89:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4250:89:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4240:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4240:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "3287:1069:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3402:9:11",
														"nodeType": "YulTypedName",
														"src": "3402:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3413:7:11",
														"nodeType": "YulTypedName",
														"src": "3413:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3425:6:11",
														"nodeType": "YulTypedName",
														"src": "3425:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3433:6:11",
														"nodeType": "YulTypedName",
														"src": "3433:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3441:6:11",
														"nodeType": "YulTypedName",
														"src": "3441:6:11",
														"type": ""
													}
												],
												"src": "3287:1069:11"
											},
											{
												"body": {
													"nativeSrc": "4390:152:11",
													"nodeType": "YulBlock",
													"src": "4390:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4407:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4407:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4410:77:11",
																		"nodeType": "YulLiteral",
																		"src": "4410:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4400:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4400:6:11"
																},
																"nativeSrc": "4400:88:11",
																"nodeType": "YulFunctionCall",
																"src": "4400:88:11"
															},
															"nativeSrc": "4400:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "4400:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4504:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4504:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4507:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4507:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4497:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4497:6:11"
																},
																"nativeSrc": "4497:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4497:15:11"
															},
															"nativeSrc": "4497:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "4497:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4528:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4528:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4531:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4531:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4521:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4521:6:11"
																},
																"nativeSrc": "4521:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4521:15:11"
															},
															"nativeSrc": "4521:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "4521:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "4362:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "4362:180:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b50604051611dc0380380611dc083398181016040528101906100319190610414565b60015f819055508051825114610073576040517fb5c5c12600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036100d8576040517fef8f9dd100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5f90505b825181101561021c578181815181106100f9576100f861049c565b5b602002602001015160015f8584815181106101175761011661049c565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060048382815181106101aa576101a961049c565b5b6020026020010151908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806001019150506100dd565b508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050506104c9565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102938261026a565b9050919050565b6102a381610289565b81146102ad575f5ffd5b50565b5f815190506102be8161029a565b92915050565b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61030e826102c8565b810181811067ffffffffffffffff8211171561032d5761032c6102d8565b5b80604052505050565b5f61033f610259565b905061034b8282610305565b919050565b5f67ffffffffffffffff82111561036a576103696102d8565b5b602082029050602081019050919050565b5f5ffd5b5f61039161038c84610350565b610336565b905080838252602082019050602084028301858111156103b4576103b361037b565b5b835b818110156103dd57806103c988826102b0565b8452602084019350506020810190506103b6565b5050509392505050565b5f82601f8301126103fb576103fa6102c4565b5b815161040b84826020860161037f565b91505092915050565b5f5f5f6060848603121561042b5761042a610262565b5b5f610438868287016102b0565b935050602084015167ffffffffffffffff81111561045957610458610266565b5b610465868287016103e7565b925050604084015167ffffffffffffffff81111561048657610485610266565b5b610492868287016103e7565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b6080516118ca6104f65f395f818161048e01528181610aa901528181611096015261116c01526118ca5ff3fe608060405234801561000f575f5ffd5b5060043610610114575f3560e01c8063a5f352b7116100a0578063c9b7c3271161006f578063c9b7c327146102a8578063e90db8a3146102c4578063f419ea9c146102e0578063f6876608146102fc578063fa76dcf21461031857610114565b8063a5f352b714610232578063aaf5eb681461023c578063afea2e481461025a578063c601676c1461028a57610114565b80637d1a4450116100e75780637d1a44501461018e57806390a8ae9b146101be5780639acd81b3146101dc5780639d45ac89146101f8578063a5d5db0c1461021657610114565b806326c01303146101185780633574d4c4146101345780635e338bb31461015257806365079d7714610170575b5f5ffd5b610132600480360381019061012d919061133e565b610348565b005b61013c610487565b604051610149919061139d565b60405180910390f35b61015a61048c565b6040516101679190611411565b60405180910390f35b6101786104b0565b604051610185919061139d565b60405180910390f35b6101a860048036038101906101a3919061142a565b6104b9565b6040516101b5919061139d565b60405180910390f35b6101c66105b9565b6040516101d3919061139d565b60405180910390f35b6101f660048036038101906101f19190611455565b6105be565b005b610200610622565b60405161020d919061139d565b60405180910390f35b610230600480360381019061022b9190611455565b610627565b005b61023a6108e5565b005b6102446108e7565b604051610251919061139d565b60405180910390f35b610274600480360381019061026f9190611455565b6108f3565b604051610281919061139d565b60405180910390f35b6102926109fc565b60405161029f919061139d565b60405180910390f35b6102c260048036038101906102bd9190611493565b610a08565b005b6102de60048036038101906102d991906114be565b610b88565b005b6102fa60048036038101906102f591906114be565b610ba0565b005b61031660048036038101906103119190611493565b610bb8565b005b610332600480360381019061032d9190611455565b610c0a565b60405161033f919061139d565b60405180910390f35b805f8103610382576040517fcb1d3f7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61038a610dd6565b5f61039484610e1a565b9050670de0b6b3a764000081106103d7576040517f4dc824ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6103e286856108f3565b90505f6064600a836103f4919061153b565b6103fe91906115a9565b90505f818361040d91906115d9565b905061041b88828933610e6f565b610426868833611040565b5f61043088610e1a565b905084811161046b576040517f7c28362000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610474336111f6565b5050505050610481611252565b50505050565b600a81565b7f000000000000000000000000000000000000000000000000000000000000000081565b6402540be40081565b5f5f5f90505b6004805490508111156105b3575f600482815481106104e1576104e061160c565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490506105918282610c0a565b8461059c91906115d9565b9350505080806105ab90611639565b9150506104bf565b50919050565b603281565b6105c6610dd6565b805f8103610600576040517fcb1d3f7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61060c83833333610e6f565b610615336111f6565b5061061e611252565b5050565b606481565b805f8103610661576040517fcb1d3f7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825f73ffffffffffffffffffffffffffffffffffffffff1660015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610723576040517fa802cfbe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61072b610dd6565b8260025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107b291906115d9565b925050819055505f8473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016107f79392919061168f565b6020604051808303815f875af1158015610813573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083791906116f9565b90508061087b57846040517fbc3fe1270000000000000000000000000000000000000000000000000000000081526004016108729190611724565b60405180910390fd5b838573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff1c0dd7e9b98bbff859029005ef89b127af049cd18df1a8d79f0b7e019911e5660405160405180910390a4506108df611252565b50505050565b565b670de0b6b3a764000081565b5f5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561099a573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109be91906117c3565b5050509150506402540be400816109d5919061153b565b670de0b6b3a7640000846109e9919061153b565b6109f391906115a9565b91505092915050565b670de0b6b3a764000081565b805f8103610a42576040517fcb1d3f7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a4a610dd6565b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a9691906115d9565b92505081905550610aa6336111f6565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166340c10f1933856040518363ffffffff1660e01b8152600401610b0292919061183a565b6020604051808303815f875af1158015610b1e573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b4291906116f9565b905080610b7b576040517f6f4e810b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610b84611252565b5050565b610b928383610627565b610b9b81610a08565b505050565b610ba981610bb8565b610bb383836105be565b505050565b805f8103610bf2576040517fcb1d3f7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bfd823333611040565b610c06336111f6565b5050565b5f825f73ffffffffffffffffffffffffffffffffffffffff1660015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610ccd576040517fa802cfbe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610d73573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d9791906117c3565b505050915050670de0b6b3a7640000846402540be40083610db8919061153b565b610dc2919061153b565b610dcc91906115a9565b9250505092915050565b60025f5403610e11576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b5f5f5f610e268461125b565b915091505f6064603283610e3a919061153b565b610e4491906115a9565b905082670de0b6b3a764000082610e5b919061153b565b610e6591906115a9565b9350505050919050565b8260025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610ef69190611861565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fb292db12b8dfa23b760ee5e3bd1d3be184cd8f0eeeacd27ce120d4de4e4721f686604051610f71919061139d565b60405180910390a45f8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83866040518363ffffffff1660e01b8152600401610fb592919061183a565b6020604051808303815f875af1158015610fd1573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ff591906116f9565b90508061103957846040517f2851f4320000000000000000000000000000000000000000000000000000000081526004016110309190611724565b60405180910390fd5b5050505050565b8260035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461108c9190611861565b925050819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd8330876040518463ffffffff1660e01b81526004016110f19392919061168f565b6020604051808303815f875af115801561110d573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061113191906116f9565b90508061116a576040517f3a29ac6d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166342966c68856040518263ffffffff1660e01b81526004016111c3919061139d565b5f604051808303815f87803b1580156111da575f5ffd5b505af11580156111ec573d5f5f3e3d5ffd5b5050505050505050565b5f61120082610e1a565b9050670de0b6b3a7640000811161124e57806040517fe580cc61000000000000000000000000000000000000000000000000000000008152600401611245919061139d565b60405180910390fd5b5050565b60015f81905550565b5f5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491506112a6836104b9565b9050915091565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112da826112b1565b9050919050565b6112ea816112d0565b81146112f4575f5ffd5b50565b5f81359050611305816112e1565b92915050565b5f819050919050565b61131d8161130b565b8114611327575f5ffd5b50565b5f8135905061133881611314565b92915050565b5f5f5f60608486031215611355576113546112ad565b5b5f611362868287016112f7565b9350506020611373868287016112f7565b92505060406113848682870161132a565b9150509250925092565b6113978161130b565b82525050565b5f6020820190506113b05f83018461138e565b92915050565b5f819050919050565b5f6113d96113d46113cf846112b1565b6113b6565b6112b1565b9050919050565b5f6113ea826113bf565b9050919050565b5f6113fb826113e0565b9050919050565b61140b816113f1565b82525050565b5f6020820190506114245f830184611402565b92915050565b5f6020828403121561143f5761143e6112ad565b5b5f61144c848285016112f7565b91505092915050565b5f5f6040838503121561146b5761146a6112ad565b5b5f611478858286016112f7565b92505060206114898582860161132a565b9150509250929050565b5f602082840312156114a8576114a76112ad565b5b5f6114b58482850161132a565b91505092915050565b5f5f5f606084860312156114d5576114d46112ad565b5b5f6114e2868287016112f7565b93505060206114f38682870161132a565b92505060406115048682870161132a565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115458261130b565b91506115508361130b565b925082820261155e8161130b565b915082820484148315176115755761157461150e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6115b38261130b565b91506115be8361130b565b9250826115ce576115cd61157c565b5b828204905092915050565b5f6115e38261130b565b91506115ee8361130b565b92508282019050808211156116065761160561150e565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6116438261130b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116755761167461150e565b5b600182019050919050565b611689816112d0565b82525050565b5f6060820190506116a25f830186611680565b6116af6020830185611680565b6116bc604083018461138e565b949350505050565b5f8115159050919050565b6116d8816116c4565b81146116e2575f5ffd5b50565b5f815190506116f3816116cf565b92915050565b5f6020828403121561170e5761170d6112ad565b5b5f61171b848285016116e5565b91505092915050565b5f6020820190506117375f830184611680565b92915050565b5f69ffffffffffffffffffff82169050919050565b61175b8161173d565b8114611765575f5ffd5b50565b5f8151905061177681611752565b92915050565b5f819050919050565b61178e8161177c565b8114611798575f5ffd5b50565b5f815190506117a981611785565b92915050565b5f815190506117bd81611314565b92915050565b5f5f5f5f5f60a086880312156117dc576117db6112ad565b5b5f6117e988828901611768565b95505060206117fa8882890161179b565b945050604061180b888289016117af565b935050606061181c888289016117af565b925050608061182d88828901611768565b9150509295509295909350565b5f60408201905061184d5f830185611680565b61185a602083018461138e565b9392505050565b5f61186b8261130b565b91506118768361130b565b925082820390508181111561188e5761188d61150e565b5b9291505056fea2646970667358221220be4dda95dc4112ccb28efc7c1063637d711aaaefd996fb9ea84b6233e9d6faf664736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1DC0 CODESIZE SUB DUP1 PUSH2 0x1DC0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x414 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x73 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB5C5C12600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEF8F9DD100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x21C JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xF9 JUMPI PUSH2 0xF8 PUSH2 0x49C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x117 JUMPI PUSH2 0x116 PUSH2 0x49C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1AA JUMPI PUSH2 0x1A9 PUSH2 0x49C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xDD JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH2 0x4C9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x293 DUP3 PUSH2 0x26A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A3 DUP2 PUSH2 0x289 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BE DUP2 PUSH2 0x29A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x30E DUP3 PUSH2 0x2C8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x32D JUMPI PUSH2 0x32C PUSH2 0x2D8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x33F PUSH2 0x259 JUMP JUMPDEST SWAP1 POP PUSH2 0x34B DUP3 DUP3 PUSH2 0x305 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x36A JUMPI PUSH2 0x369 PUSH2 0x2D8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x391 PUSH2 0x38C DUP5 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3B4 JUMPI PUSH2 0x3B3 PUSH2 0x37B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DD JUMPI DUP1 PUSH2 0x3C9 DUP9 DUP3 PUSH2 0x2B0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3B6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3FB JUMPI PUSH2 0x3FA PUSH2 0x2C4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x40B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x37F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x42B JUMPI PUSH2 0x42A PUSH2 0x262 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x438 DUP7 DUP3 DUP8 ADD PUSH2 0x2B0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x459 JUMPI PUSH2 0x458 PUSH2 0x266 JUMP JUMPDEST JUMPDEST PUSH2 0x465 DUP7 DUP3 DUP8 ADD PUSH2 0x3E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x486 JUMPI PUSH2 0x485 PUSH2 0x266 JUMP JUMPDEST JUMPDEST PUSH2 0x492 DUP7 DUP3 DUP8 ADD PUSH2 0x3E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x18CA PUSH2 0x4F6 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x48E ADD MSTORE DUP2 DUP2 PUSH2 0xAA9 ADD MSTORE DUP2 DUP2 PUSH2 0x1096 ADD MSTORE PUSH2 0x116C ADD MSTORE PUSH2 0x18CA PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA5F352B7 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC9B7C327 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC9B7C327 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xE90DB8A3 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xF419EA9C EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xF6876608 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xFA76DCF2 EQ PUSH2 0x318 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0xA5F352B7 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xAFEA2E48 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xC601676C EQ PUSH2 0x28A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x7D1A4450 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x7D1A4450 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x90A8AE9B EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x9ACD81B3 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x9D45AC89 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xA5D5DB0C EQ PUSH2 0x216 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x26C01303 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x3574D4C4 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x5E338BB3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x65079D77 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13C PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x48C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH2 0x4B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH2 0x622 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x627 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH2 0x8E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x244 PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST PUSH2 0xB88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST PUSH2 0xBA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0xBB8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCB1D3F7D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38A PUSH2 0xDD6 JUMP JUMPDEST PUSH0 PUSH2 0x394 DUP5 PUSH2 0xE1A JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4DC824BA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E2 DUP7 DUP6 PUSH2 0x8F3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST SWAP1 POP PUSH2 0x41B DUP9 DUP3 DUP10 CALLER PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x426 DUP7 DUP9 CALLER PUSH2 0x1040 JUMP JUMPDEST PUSH0 PUSH2 0x430 DUP9 PUSH2 0xE1A JUMP JUMPDEST SWAP1 POP DUP5 DUP2 GT PUSH2 0x46B JUMPI PUSH1 0x40 MLOAD PUSH32 0x7C28362000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x474 CALLER PUSH2 0x11F6 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x481 PUSH2 0x1252 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH5 0x2540BE400 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 GT ISZERO PUSH2 0x5B3 JUMPI PUSH0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4E1 JUMPI PUSH2 0x4E0 PUSH2 0x160C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x591 DUP3 DUP3 PUSH2 0xC0A JUMP JUMPDEST DUP5 PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST SWAP4 POP POP POP DUP1 DUP1 PUSH2 0x5AB SWAP1 PUSH2 0x1639 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4BF JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH2 0x5C6 PUSH2 0xDD6 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCB1D3F7D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60C DUP4 DUP4 CALLER CALLER PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x615 CALLER PUSH2 0x11F6 JUMP JUMPDEST POP PUSH2 0x61E PUSH2 0x1252 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x661 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCB1D3F7D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA802CFBE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72B PUSH2 0xDD6 JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x813 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x87B JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0xBC3FE12700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x872 SWAP2 SWAP1 PUSH2 0x1724 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF1C0DD7E9B98BBFF859029005EF89B127AF049CD18DF1A8D79F0B7E019911E56 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0x8DF PUSH2 0x1252 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 PUSH2 0x9D5 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x9E9 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x9F3 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0xA42 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCB1D3F7D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA4A PUSH2 0xDD6 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAA6 CALLER PUSH2 0x11F6 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB02 SWAP3 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB1E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB42 SWAP2 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x6F4E810B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xB84 PUSH2 0x1252 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB92 DUP4 DUP4 PUSH2 0x627 JUMP JUMPDEST PUSH2 0xB9B DUP2 PUSH2 0xA08 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBA9 DUP2 PUSH2 0xBB8 JUMP JUMPDEST PUSH2 0xBB3 DUP4 DUP4 PUSH2 0x5BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCB1D3F7D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFD DUP3 CALLER CALLER PUSH2 0x1040 JUMP JUMPDEST PUSH2 0xC06 CALLER PUSH2 0x11F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH32 0xA802CFBE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD73 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH8 0xDE0B6B3A7640000 DUP5 PUSH5 0x2540BE400 DUP4 PUSH2 0xDB8 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0xDC2 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0xDCC SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0xE26 DUP5 PUSH2 0x125B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH1 0x64 PUSH1 0x32 DUP4 PUSH2 0xE3A SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0xE44 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST SWAP1 POP DUP3 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xE5B SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0xE65 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEF6 SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB292DB12B8DFA23B760EE5E3BD1D3BE184CD8F0EEEACD27CE120D4DE4E4721F6 DUP7 PUSH1 0x40 MLOAD PUSH2 0xF71 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB5 SWAP3 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFD1 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1039 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x2851F43200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1030 SWAP2 SWAP1 PUSH2 0x1724 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x108C SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x110D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1131 SWAP2 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x116A JUMPI PUSH1 0x40 MLOAD PUSH32 0x3A29AC6D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C3 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1200 DUP3 PUSH2 0xE1A JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 GT PUSH2 0x124E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xE580CC6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1245 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP PUSH2 0x12A6 DUP4 PUSH2 0x4B9 JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12DA DUP3 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12EA DUP2 PUSH2 0x12D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1305 DUP2 PUSH2 0x12E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131D DUP2 PUSH2 0x130B JUMP JUMPDEST DUP2 EQ PUSH2 0x1327 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1338 DUP2 PUSH2 0x1314 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1355 JUMPI PUSH2 0x1354 PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1362 DUP7 DUP3 DUP8 ADD PUSH2 0x12F7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1373 DUP7 DUP3 DUP8 ADD PUSH2 0x12F7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1384 DUP7 DUP3 DUP8 ADD PUSH2 0x132A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1397 DUP2 PUSH2 0x130B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x138E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13D9 PUSH2 0x13D4 PUSH2 0x13CF DUP5 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13EA DUP3 PUSH2 0x13BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13FB DUP3 PUSH2 0x13E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140B DUP2 PUSH2 0x13F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1424 PUSH0 DUP4 ADD DUP5 PUSH2 0x1402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144C DUP5 DUP3 DUP6 ADD PUSH2 0x12F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146B JUMPI PUSH2 0x146A PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1478 DUP6 DUP3 DUP7 ADD PUSH2 0x12F7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1489 DUP6 DUP3 DUP7 ADD PUSH2 0x132A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A8 JUMPI PUSH2 0x14A7 PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B5 DUP5 DUP3 DUP6 ADD PUSH2 0x132A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14D5 JUMPI PUSH2 0x14D4 PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14E2 DUP7 DUP3 DUP8 ADD PUSH2 0x12F7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14F3 DUP7 DUP3 DUP8 ADD PUSH2 0x132A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1504 DUP7 DUP3 DUP8 ADD PUSH2 0x132A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1545 DUP3 PUSH2 0x130B JUMP JUMPDEST SWAP2 POP PUSH2 0x1550 DUP4 PUSH2 0x130B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x155E DUP2 PUSH2 0x130B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1575 JUMPI PUSH2 0x1574 PUSH2 0x150E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15B3 DUP3 PUSH2 0x130B JUMP JUMPDEST SWAP2 POP PUSH2 0x15BE DUP4 PUSH2 0x130B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15CE JUMPI PUSH2 0x15CD PUSH2 0x157C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15E3 DUP3 PUSH2 0x130B JUMP JUMPDEST SWAP2 POP PUSH2 0x15EE DUP4 PUSH2 0x130B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1605 PUSH2 0x150E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1643 DUP3 PUSH2 0x130B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1675 JUMPI PUSH2 0x1674 PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1689 DUP2 PUSH2 0x12D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16A2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x16AF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x16BC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x138E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D8 DUP2 PUSH2 0x16C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x16E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x16F3 DUP2 PUSH2 0x16CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x170E JUMPI PUSH2 0x170D PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x171B DUP5 DUP3 DUP6 ADD PUSH2 0x16E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1737 PUSH0 DUP4 ADD DUP5 PUSH2 0x1680 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175B DUP2 PUSH2 0x173D JUMP JUMPDEST DUP2 EQ PUSH2 0x1765 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1776 DUP2 PUSH2 0x1752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178E DUP2 PUSH2 0x177C JUMP JUMPDEST DUP2 EQ PUSH2 0x1798 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17A9 DUP2 PUSH2 0x1785 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17BD DUP2 PUSH2 0x1314 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17DC JUMPI PUSH2 0x17DB PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E9 DUP9 DUP3 DUP10 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x17FA DUP9 DUP3 DUP10 ADD PUSH2 0x179B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x180B DUP9 DUP3 DUP10 ADD PUSH2 0x17AF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x181C DUP9 DUP3 DUP10 ADD PUSH2 0x17AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x182D DUP9 DUP3 DUP10 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x184D PUSH0 DUP4 ADD DUP6 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x185A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x138E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x186B DUP3 PUSH2 0x130B JUMP JUMPDEST SWAP2 POP PUSH2 0x1876 DUP4 PUSH2 0x130B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x188E JUMPI PUSH2 0x188D PUSH2 0x150E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0x4D 0xDA SWAP6 0xDC COINBASE SLT 0xCC 0xB2 DUP15 0xFC PUSH29 0x1063637D711AAAEFD996FB9EA84B6233E9D6FAF664736F6C634300081E STOP CALLER ",
							"sourceMap": "1710:8616:9:-:0;;;3648:643;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1857:1:7;2061:7;:21;;;;3816:10:9;:17;3789:16;:23;:44;3785:146;;3856:64;;;;;;;;;;;;;;3785:146;3967:1;3944:25;;:11;:25;;;3940:96;;3992:33;;;;;;;;;;;;;;3940:96;4050:9;4062:1;4050:13;;4045:186;4069:16;:23;4065:1;:27;4045:186;;;4149:10;4160:1;4149:13;;;;;;;;:::i;:::-;;;;;;;;4113:12;:33;4126:16;4143:1;4126:19;;;;;;;;:::i;:::-;;;;;;;;4113:33;;;;;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;4176:18;4200:16;4217:1;4200:19;;;;;;;;:::i;:::-;;;;;;;;4176:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4094:3;;;;;;;4045:186;;;;4272:11;4240:44;;;;;;;;;;3648:643;;;1710:8616;;7:75:11;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:102;1009:6;1060:2;1056:7;1051:2;1044:5;1040:14;1036:28;1026:38;;968:102;;;:::o;1076:180::-;1124:77;1121:1;1114:88;1221:4;1218:1;1211:15;1245:4;1242:1;1235:15;1262:281;1345:27;1367:4;1345:27;:::i;:::-;1337:6;1333:40;1475:6;1463:10;1460:22;1439:18;1427:10;1424:34;1421:62;1418:88;;;1486:18;;:::i;:::-;1418:88;1526:10;1522:2;1515:22;1305:238;1262:281;;:::o;1549:129::-;1583:6;1610:20;;:::i;:::-;1600:30;;1639:33;1667:4;1659:6;1639:33;:::i;:::-;1549:129;;;:::o;1684:311::-;1761:4;1851:18;1843:6;1840:30;1837:56;;;1873:18;;:::i;:::-;1837:56;1923:4;1915:6;1911:17;1903:25;;1983:4;1977;1973:15;1965:23;;1684:311;;;:::o;2001:117::-;2110:1;2107;2100:12;2141:732;2248:5;2273:81;2289:64;2346:6;2289:64;:::i;:::-;2273:81;:::i;:::-;2264:90;;2374:5;2403:6;2396:5;2389:21;2437:4;2430:5;2426:16;2419:23;;2490:4;2482:6;2478:17;2470:6;2466:30;2519:3;2511:6;2508:15;2505:122;;;2538:79;;:::i;:::-;2505:122;2653:6;2636:231;2670:6;2665:3;2662:15;2636:231;;;2745:3;2774:48;2818:3;2806:10;2774:48;:::i;:::-;2769:3;2762:61;2852:4;2847:3;2843:14;2836:21;;2712:155;2696:4;2691:3;2687:14;2680:21;;2636:231;;;2640:21;2254:619;;2141:732;;;;;:::o;2896:385::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3145:6;3139:13;3170:105;3271:3;3263:6;3256:4;3248:6;3244:17;3170:105;:::i;:::-;3161:114;;2984:297;2896:385;;;;:::o;3287:1069::-;3425:6;3433;3441;3490:2;3478:9;3469:7;3465:23;3461:32;3458:119;;;3496:79;;:::i;:::-;3458:119;3616:1;3641:64;3697:7;3688:6;3677:9;3673:22;3641:64;:::i;:::-;3631:74;;3587:128;3775:2;3764:9;3760:18;3754:25;3806:18;3798:6;3795:30;3792:117;;;3828:79;;:::i;:::-;3792:117;3933:89;4014:7;4005:6;3994:9;3990:22;3933:89;:::i;:::-;3923:99;;3725:307;4092:2;4081:9;4077:18;4071:25;4123:18;4115:6;4112:30;4109:117;;;4145:79;;:::i;:::-;4109:117;4250:89;4331:7;4322:6;4311:9;4307:22;4250:89;:::i;:::-;4240:99;;4042:307;3287:1069;;;;;:::o;4362:180::-;4410:77;4407:1;4400:88;4507:4;4504:1;4497:15;4531:4;4528:1;4521:15;1710:8616:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADDITION_FEED_PRECISION_1140": {
									"entryPoint": 1200,
									"id": 1140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LIQUIDATION_BONUS_1152": {
									"entryPoint": 1159,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LIQUIDATION_PRECISION_1149": {
									"entryPoint": 1570,
									"id": 1149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LIQUIDATION_THRESHOLD_1146": {
									"entryPoint": 1465,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MIN_HEALT_FACTOR_1155": {
									"entryPoint": 2556,
									"id": 1155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PRECISION_1143": {
									"entryPoint": 2279,
									"id": 1143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_burnDsc_1680": {
									"entryPoint": 4160,
									"id": 1680,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_getAccountInformation_1585": {
									"entryPoint": 4699,
									"id": 1585,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_healthFactor_1618": {
									"entryPoint": 3610,
									"id": 1618,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1036": {
									"entryPoint": 4690,
									"id": 1036,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1028": {
									"entryPoint": 3542,
									"id": 1028,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_redeemCollateral_1725": {
									"entryPoint": 3695,
									"id": 1725,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_revertIfHealthFactorIsBroken_1639": {
									"entryPoint": 4598,
									"id": 1639,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burnDsc_1474": {
									"entryPoint": 3000,
									"id": 1474,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@depositCollateralAndMintDsc_1312": {
									"entryPoint": 2952,
									"id": 1312,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@depositCollateral_1367": {
									"entryPoint": 1575,
									"id": 1367,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getAccountCollateralValue_1802": {
									"entryPoint": 1209,
									"id": 1802,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getHealthFactor_1563": {
									"entryPoint": 2277,
									"id": 1563,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getTokenAmountFromUsd_1758": {
									"entryPoint": 2291,
									"id": 1758,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getUSDValue_1837": {
									"entryPoint": 3082,
									"id": 1837,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@i_dsc_1137": {
									"entryPoint": 1164,
									"id": 1137,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidate_1559": {
									"entryPoint": 840,
									"id": 1559,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mintDsc_1452": {
									"entryPoint": 2568,
									"id": 1452,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@redeemCollateralForDsc_1386": {
									"entryPoint": 2976,
									"id": 1386,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@redeemCollateral_1413": {
									"entryPoint": 1470,
									"id": 1413,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 6043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 5992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 5310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 6083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_DecentralizedStableCoin_$1944_to_t_address_fromStack": {
									"entryPoint": 5122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5775,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6202,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_DecentralizedStableCoin_$1944__to_t_address__fromStack_reversed": {
									"entryPoint": 5137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 6012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 5949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_DecentralizedStableCoin_$1944_to_t_address": {
									"entryPoint": 5105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5390,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5500,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5644,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 6021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 5970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10465:11",
										"nodeType": "YulBlock",
										"src": "0:10465:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "748:87:11",
													"nodeType": "YulBlock",
													"src": "748:87:11",
													"statements": [
														{
															"nativeSrc": "758:29:11",
															"nodeType": "YulAssignment",
															"src": "758:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:11"
																},
																"nativeSrc": "767:20:11",
																"nodeType": "YulFunctionCall",
																"src": "767:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:11"
																},
																"nativeSrc": "796:33:11",
																"nodeType": "YulFunctionCall",
																"src": "796:33:11"
															},
															"nativeSrc": "796:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:11",
														"nodeType": "YulTypedName",
														"src": "726:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:11",
														"nodeType": "YulTypedName",
														"src": "734:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:11",
														"nodeType": "YulTypedName",
														"src": "742:5:11",
														"type": ""
													}
												],
												"src": "696:139:11"
											},
											{
												"body": {
													"nativeSrc": "886:32:11",
													"nodeType": "YulBlock",
													"src": "886:32:11",
													"statements": [
														{
															"nativeSrc": "896:16:11",
															"nodeType": "YulAssignment",
															"src": "896:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:11",
																"nodeType": "YulIdentifier",
																"src": "907:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:11",
														"nodeType": "YulTypedName",
														"src": "868:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:11",
														"nodeType": "YulTypedName",
														"src": "878:7:11",
														"type": ""
													}
												],
												"src": "841:77:11"
											},
											{
												"body": {
													"nativeSrc": "967:79:11",
													"nodeType": "YulBlock",
													"src": "967:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:11",
																"nodeType": "YulBlock",
																"src": "1024:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:11"
																			},
																			"nativeSrc": "1026:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:11"
																		},
																		"nativeSrc": "1026:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:11"
																				},
																				"nativeSrc": "997:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:11"
																		},
																		"nativeSrc": "987:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:11"
																},
																"nativeSrc": "980:43:11",
																"nodeType": "YulFunctionCall",
																"src": "980:43:11"
															},
															"nativeSrc": "977:63:11",
															"nodeType": "YulIf",
															"src": "977:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:11",
														"nodeType": "YulTypedName",
														"src": "960:5:11",
														"type": ""
													}
												],
												"src": "924:122:11"
											},
											{
												"body": {
													"nativeSrc": "1104:87:11",
													"nodeType": "YulBlock",
													"src": "1104:87:11",
													"statements": [
														{
															"nativeSrc": "1114:29:11",
															"nodeType": "YulAssignment",
															"src": "1114:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:11"
																},
																"nativeSrc": "1123:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:11"
																},
																"nativeSrc": "1152:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:11"
															},
															"nativeSrc": "1152:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:11",
														"nodeType": "YulTypedName",
														"src": "1082:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:11",
														"nodeType": "YulTypedName",
														"src": "1090:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:11",
														"nodeType": "YulTypedName",
														"src": "1098:5:11",
														"type": ""
													}
												],
												"src": "1052:139:11"
											},
											{
												"body": {
													"nativeSrc": "1297:519:11",
													"nodeType": "YulBlock",
													"src": "1297:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1343:83:11",
																"nodeType": "YulBlock",
																"src": "1343:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1345:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1345:77:11"
																			},
																			"nativeSrc": "1345:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1345:79:11"
																		},
																		"nativeSrc": "1345:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1345:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1318:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1318:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1327:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1327:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1314:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:11"
																		},
																		"nativeSrc": "1314:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1314:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1339:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1339:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1310:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1310:3:11"
																},
																"nativeSrc": "1310:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1310:32:11"
															},
															"nativeSrc": "1307:119:11",
															"nodeType": "YulIf",
															"src": "1307:119:11"
														},
														{
															"nativeSrc": "1436:117:11",
															"nodeType": "YulBlock",
															"src": "1436:117:11",
															"statements": [
																{
																	"nativeSrc": "1451:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1451:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1465:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1465:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1455:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1455:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1480:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1480:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1515:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1515:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1526:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1526:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1511:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1511:3:11"
																				},
																				"nativeSrc": "1511:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1511:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1535:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1535:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1490:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1490:20:11"
																		},
																		"nativeSrc": "1490:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1490:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1480:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1480:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1563:118:11",
															"nodeType": "YulBlock",
															"src": "1563:118:11",
															"statements": [
																{
																	"nativeSrc": "1578:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1578:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1592:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1592:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1582:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1582:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1608:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1608:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1643:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1643:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1654:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1654:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1639:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1639:3:11"
																				},
																				"nativeSrc": "1639:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1639:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1663:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1663:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1618:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1618:20:11"
																		},
																		"nativeSrc": "1618:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1618:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1608:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1608:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1691:118:11",
															"nodeType": "YulBlock",
															"src": "1691:118:11",
															"statements": [
																{
																	"nativeSrc": "1706:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1720:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1720:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1710:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1736:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1736:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1771:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1771:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1782:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1782:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1767:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1767:3:11"
																				},
																				"nativeSrc": "1767:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1767:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1791:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1791:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1746:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1746:20:11"
																		},
																		"nativeSrc": "1746:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1746:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1736:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1736:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1197:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1251:9:11",
														"nodeType": "YulTypedName",
														"src": "1251:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1262:7:11",
														"nodeType": "YulTypedName",
														"src": "1262:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1274:6:11",
														"nodeType": "YulTypedName",
														"src": "1274:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1282:6:11",
														"nodeType": "YulTypedName",
														"src": "1282:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1290:6:11",
														"nodeType": "YulTypedName",
														"src": "1290:6:11",
														"type": ""
													}
												],
												"src": "1197:619:11"
											},
											{
												"body": {
													"nativeSrc": "1887:53:11",
													"nodeType": "YulBlock",
													"src": "1887:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1904:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1904:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1927:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1927:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1909:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "1909:17:11"
																		},
																		"nativeSrc": "1909:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1909:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1897:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1897:6:11"
																},
																"nativeSrc": "1897:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1897:37:11"
															},
															"nativeSrc": "1897:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "1897:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1822:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1875:5:11",
														"nodeType": "YulTypedName",
														"src": "1875:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1882:3:11",
														"nodeType": "YulTypedName",
														"src": "1882:3:11",
														"type": ""
													}
												],
												"src": "1822:118:11"
											},
											{
												"body": {
													"nativeSrc": "2044:124:11",
													"nodeType": "YulBlock",
													"src": "2044:124:11",
													"statements": [
														{
															"nativeSrc": "2054:26:11",
															"nodeType": "YulAssignment",
															"src": "2054:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2066:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2066:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2077:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2077:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2062:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:11"
																},
																"nativeSrc": "2062:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2062:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2054:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2054:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2134:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2134:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2147:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2147:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2158:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2158:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2143:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:11"
																		},
																		"nativeSrc": "2143:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2090:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2090:43:11"
																},
																"nativeSrc": "2090:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2090:71:11"
															},
															"nativeSrc": "2090:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "2090:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1946:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2016:9:11",
														"nodeType": "YulTypedName",
														"src": "2016:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2028:6:11",
														"nodeType": "YulTypedName",
														"src": "2028:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2039:4:11",
														"nodeType": "YulTypedName",
														"src": "2039:4:11",
														"type": ""
													}
												],
												"src": "1946:222:11"
											},
											{
												"body": {
													"nativeSrc": "2206:28:11",
													"nodeType": "YulBlock",
													"src": "2206:28:11",
													"statements": [
														{
															"nativeSrc": "2216:12:11",
															"nodeType": "YulAssignment",
															"src": "2216:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "2223:5:11",
																"nodeType": "YulIdentifier",
																"src": "2223:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2216:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2174:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2192:5:11",
														"nodeType": "YulTypedName",
														"src": "2192:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2202:3:11",
														"nodeType": "YulTypedName",
														"src": "2202:3:11",
														"type": ""
													}
												],
												"src": "2174:60:11"
											},
											{
												"body": {
													"nativeSrc": "2300:82:11",
													"nodeType": "YulBlock",
													"src": "2300:82:11",
													"statements": [
														{
															"nativeSrc": "2310:66:11",
															"nodeType": "YulAssignment",
															"src": "2310:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2368:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2368:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2350:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2350:17:11"
																				},
																				"nativeSrc": "2350:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2350:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2341:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "2341:8:11"
																		},
																		"nativeSrc": "2341:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2341:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2323:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2323:17:11"
																},
																"nativeSrc": "2323:53:11",
																"nodeType": "YulFunctionCall",
																"src": "2323:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2310:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2310:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2240:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2280:5:11",
														"nodeType": "YulTypedName",
														"src": "2280:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2290:9:11",
														"nodeType": "YulTypedName",
														"src": "2290:9:11",
														"type": ""
													}
												],
												"src": "2240:142:11"
											},
											{
												"body": {
													"nativeSrc": "2448:66:11",
													"nodeType": "YulBlock",
													"src": "2448:66:11",
													"statements": [
														{
															"nativeSrc": "2458:50:11",
															"nodeType": "YulAssignment",
															"src": "2458:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2502:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2502:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2471:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2471:30:11"
																},
																"nativeSrc": "2471:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2471:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2458:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2458:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2388:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2428:5:11",
														"nodeType": "YulTypedName",
														"src": "2428:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2438:9:11",
														"nodeType": "YulTypedName",
														"src": "2438:9:11",
														"type": ""
													}
												],
												"src": "2388:126:11"
											},
											{
												"body": {
													"nativeSrc": "2612:66:11",
													"nodeType": "YulBlock",
													"src": "2612:66:11",
													"statements": [
														{
															"nativeSrc": "2622:50:11",
															"nodeType": "YulAssignment",
															"src": "2622:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2666:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2666:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2635:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2635:30:11"
																},
																"nativeSrc": "2635:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2635:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2622:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2622:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_DecentralizedStableCoin_$1944_to_t_address",
												"nativeSrc": "2520:158:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2592:5:11",
														"nodeType": "YulTypedName",
														"src": "2592:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2602:9:11",
														"nodeType": "YulTypedName",
														"src": "2602:9:11",
														"type": ""
													}
												],
												"src": "2520:158:11"
											},
											{
												"body": {
													"nativeSrc": "2781:98:11",
													"nodeType": "YulBlock",
													"src": "2781:98:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2798:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2798:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2866:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2866:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_DecentralizedStableCoin_$1944_to_t_address",
																			"nativeSrc": "2803:62:11",
																			"nodeType": "YulIdentifier",
																			"src": "2803:62:11"
																		},
																		"nativeSrc": "2803:69:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2803:69:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2791:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2791:6:11"
																},
																"nativeSrc": "2791:82:11",
																"nodeType": "YulFunctionCall",
																"src": "2791:82:11"
															},
															"nativeSrc": "2791:82:11",
															"nodeType": "YulExpressionStatement",
															"src": "2791:82:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_DecentralizedStableCoin_$1944_to_t_address_fromStack",
												"nativeSrc": "2684:195:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2769:5:11",
														"nodeType": "YulTypedName",
														"src": "2769:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2776:3:11",
														"nodeType": "YulTypedName",
														"src": "2776:3:11",
														"type": ""
													}
												],
												"src": "2684:195:11"
											},
											{
												"body": {
													"nativeSrc": "3015:156:11",
													"nodeType": "YulBlock",
													"src": "3015:156:11",
													"statements": [
														{
															"nativeSrc": "3025:26:11",
															"nodeType": "YulAssignment",
															"src": "3025:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3037:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3037:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3048:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3048:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3033:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:11"
																},
																"nativeSrc": "3033:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3033:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3025:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3025:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3137:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3137:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3150:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3150:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3161:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3161:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3146:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3146:3:11"
																		},
																		"nativeSrc": "3146:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3146:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_DecentralizedStableCoin_$1944_to_t_address_fromStack",
																	"nativeSrc": "3061:75:11",
																	"nodeType": "YulIdentifier",
																	"src": "3061:75:11"
																},
																"nativeSrc": "3061:103:11",
																"nodeType": "YulFunctionCall",
																"src": "3061:103:11"
															},
															"nativeSrc": "3061:103:11",
															"nodeType": "YulExpressionStatement",
															"src": "3061:103:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_DecentralizedStableCoin_$1944__to_t_address__fromStack_reversed",
												"nativeSrc": "2885:286:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2987:9:11",
														"nodeType": "YulTypedName",
														"src": "2987:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2999:6:11",
														"nodeType": "YulTypedName",
														"src": "2999:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3010:4:11",
														"nodeType": "YulTypedName",
														"src": "3010:4:11",
														"type": ""
													}
												],
												"src": "2885:286:11"
											},
											{
												"body": {
													"nativeSrc": "3243:263:11",
													"nodeType": "YulBlock",
													"src": "3243:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3289:83:11",
																"nodeType": "YulBlock",
																"src": "3289:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3291:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3291:77:11"
																			},
																			"nativeSrc": "3291:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3291:79:11"
																		},
																		"nativeSrc": "3291:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3291:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3264:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3264:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3273:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3273:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3260:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3260:3:11"
																		},
																		"nativeSrc": "3260:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3260:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3285:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3285:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3256:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3256:3:11"
																},
																"nativeSrc": "3256:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3256:32:11"
															},
															"nativeSrc": "3253:119:11",
															"nodeType": "YulIf",
															"src": "3253:119:11"
														},
														{
															"nativeSrc": "3382:117:11",
															"nodeType": "YulBlock",
															"src": "3382:117:11",
															"statements": [
																{
																	"nativeSrc": "3397:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3397:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3411:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3411:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3401:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3401:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3426:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3426:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3461:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3461:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3472:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3472:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3457:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3457:3:11"
																				},
																				"nativeSrc": "3457:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3457:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3481:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3481:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3436:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3436:20:11"
																		},
																		"nativeSrc": "3436:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3426:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3426:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3177:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3213:9:11",
														"nodeType": "YulTypedName",
														"src": "3213:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3224:7:11",
														"nodeType": "YulTypedName",
														"src": "3224:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3236:6:11",
														"nodeType": "YulTypedName",
														"src": "3236:6:11",
														"type": ""
													}
												],
												"src": "3177:329:11"
											},
											{
												"body": {
													"nativeSrc": "3595:391:11",
													"nodeType": "YulBlock",
													"src": "3595:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3641:83:11",
																"nodeType": "YulBlock",
																"src": "3641:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3643:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3643:77:11"
																			},
																			"nativeSrc": "3643:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3643:79:11"
																		},
																		"nativeSrc": "3643:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3643:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3616:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3616:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3625:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3625:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3612:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3612:3:11"
																		},
																		"nativeSrc": "3612:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3612:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3637:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3637:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3608:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3608:3:11"
																},
																"nativeSrc": "3608:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3608:32:11"
															},
															"nativeSrc": "3605:119:11",
															"nodeType": "YulIf",
															"src": "3605:119:11"
														},
														{
															"nativeSrc": "3734:117:11",
															"nodeType": "YulBlock",
															"src": "3734:117:11",
															"statements": [
																{
																	"nativeSrc": "3749:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3749:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3763:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3763:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3753:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3753:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3778:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3778:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3813:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3813:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3824:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3824:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3809:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3809:3:11"
																				},
																				"nativeSrc": "3809:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3809:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3833:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3833:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3788:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3788:20:11"
																		},
																		"nativeSrc": "3788:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3788:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3778:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3778:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3861:118:11",
															"nodeType": "YulBlock",
															"src": "3861:118:11",
															"statements": [
																{
																	"nativeSrc": "3876:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3876:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3890:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3890:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3880:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3880:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3906:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3906:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3941:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3941:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3952:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3952:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3937:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3937:3:11"
																				},
																				"nativeSrc": "3937:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3937:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3961:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3961:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3916:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3916:20:11"
																		},
																		"nativeSrc": "3916:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3916:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3906:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3906:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3512:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3557:9:11",
														"nodeType": "YulTypedName",
														"src": "3557:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3568:7:11",
														"nodeType": "YulTypedName",
														"src": "3568:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3580:6:11",
														"nodeType": "YulTypedName",
														"src": "3580:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3588:6:11",
														"nodeType": "YulTypedName",
														"src": "3588:6:11",
														"type": ""
													}
												],
												"src": "3512:474:11"
											},
											{
												"body": {
													"nativeSrc": "4058:263:11",
													"nodeType": "YulBlock",
													"src": "4058:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4104:83:11",
																"nodeType": "YulBlock",
																"src": "4104:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4106:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4106:77:11"
																			},
																			"nativeSrc": "4106:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4106:79:11"
																		},
																		"nativeSrc": "4106:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4106:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4079:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4079:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4088:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4088:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4075:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4075:3:11"
																		},
																		"nativeSrc": "4075:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4075:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4100:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4100:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4071:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4071:3:11"
																},
																"nativeSrc": "4071:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4071:32:11"
															},
															"nativeSrc": "4068:119:11",
															"nodeType": "YulIf",
															"src": "4068:119:11"
														},
														{
															"nativeSrc": "4197:117:11",
															"nodeType": "YulBlock",
															"src": "4197:117:11",
															"statements": [
																{
																	"nativeSrc": "4212:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4212:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4226:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4226:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4216:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4216:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4241:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4241:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4276:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4276:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4287:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4287:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4272:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4272:3:11"
																				},
																				"nativeSrc": "4272:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4272:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4296:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4296:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4251:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4251:20:11"
																		},
																		"nativeSrc": "4251:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4251:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4241:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4241:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3992:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4028:9:11",
														"nodeType": "YulTypedName",
														"src": "4028:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4039:7:11",
														"nodeType": "YulTypedName",
														"src": "4039:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4051:6:11",
														"nodeType": "YulTypedName",
														"src": "4051:6:11",
														"type": ""
													}
												],
												"src": "3992:329:11"
											},
											{
												"body": {
													"nativeSrc": "4427:519:11",
													"nodeType": "YulBlock",
													"src": "4427:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4473:83:11",
																"nodeType": "YulBlock",
																"src": "4473:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4475:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4475:77:11"
																			},
																			"nativeSrc": "4475:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4475:79:11"
																		},
																		"nativeSrc": "4475:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4475:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4448:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4448:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4457:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4457:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4444:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4444:3:11"
																		},
																		"nativeSrc": "4444:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4444:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4469:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4469:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4440:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4440:3:11"
																},
																"nativeSrc": "4440:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4440:32:11"
															},
															"nativeSrc": "4437:119:11",
															"nodeType": "YulIf",
															"src": "4437:119:11"
														},
														{
															"nativeSrc": "4566:117:11",
															"nodeType": "YulBlock",
															"src": "4566:117:11",
															"statements": [
																{
																	"nativeSrc": "4581:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4581:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4595:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4595:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4585:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4585:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4610:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4610:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4645:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4645:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4656:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4656:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4641:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4641:3:11"
																				},
																				"nativeSrc": "4641:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4641:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4665:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4665:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4620:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4620:20:11"
																		},
																		"nativeSrc": "4620:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4620:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4610:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4610:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4693:118:11",
															"nodeType": "YulBlock",
															"src": "4693:118:11",
															"statements": [
																{
																	"nativeSrc": "4708:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4708:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4722:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4712:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4712:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4738:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4738:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4773:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4773:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4784:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4784:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4769:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4769:3:11"
																				},
																				"nativeSrc": "4769:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4769:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4793:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4793:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4748:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4748:20:11"
																		},
																		"nativeSrc": "4748:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4748:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4738:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4738:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4821:118:11",
															"nodeType": "YulBlock",
															"src": "4821:118:11",
															"statements": [
																{
																	"nativeSrc": "4836:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4836:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4850:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4850:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4840:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4840:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4866:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4866:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4901:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4901:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4912:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4912:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4897:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4897:3:11"
																				},
																				"nativeSrc": "4897:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4897:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4921:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4921:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4876:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4876:20:11"
																		},
																		"nativeSrc": "4876:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4876:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4866:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4866:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "4327:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4381:9:11",
														"nodeType": "YulTypedName",
														"src": "4381:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4392:7:11",
														"nodeType": "YulTypedName",
														"src": "4392:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4404:6:11",
														"nodeType": "YulTypedName",
														"src": "4404:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4412:6:11",
														"nodeType": "YulTypedName",
														"src": "4412:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4420:6:11",
														"nodeType": "YulTypedName",
														"src": "4420:6:11",
														"type": ""
													}
												],
												"src": "4327:619:11"
											},
											{
												"body": {
													"nativeSrc": "4980:152:11",
													"nodeType": "YulBlock",
													"src": "4980:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4997:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4997:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5000:77:11",
																		"nodeType": "YulLiteral",
																		"src": "5000:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4990:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4990:6:11"
																},
																"nativeSrc": "4990:88:11",
																"nodeType": "YulFunctionCall",
																"src": "4990:88:11"
															},
															"nativeSrc": "4990:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "4990:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5094:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5094:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5097:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5097:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5087:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5087:6:11"
																},
																"nativeSrc": "5087:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5087:15:11"
															},
															"nativeSrc": "5087:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5087:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5118:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5118:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5121:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5121:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5111:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5111:6:11"
																},
																"nativeSrc": "5111:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5111:15:11"
															},
															"nativeSrc": "5111:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5111:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4952:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "4952:180:11"
											},
											{
												"body": {
													"nativeSrc": "5186:362:11",
													"nodeType": "YulBlock",
													"src": "5186:362:11",
													"statements": [
														{
															"nativeSrc": "5196:25:11",
															"nodeType": "YulAssignment",
															"src": "5196:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5219:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5219:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5201:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5201:17:11"
																},
																"nativeSrc": "5201:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5201:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5196:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5196:1:11"
																}
															]
														},
														{
															"nativeSrc": "5230:25:11",
															"nodeType": "YulAssignment",
															"src": "5230:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5253:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5253:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5235:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5235:17:11"
																},
																"nativeSrc": "5235:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5235:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5230:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5230:1:11"
																}
															]
														},
														{
															"nativeSrc": "5264:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5264:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5287:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5287:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5290:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5290:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5283:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5283:3:11"
																},
																"nativeSrc": "5283:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5283:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "5268:11:11",
																	"nodeType": "YulTypedName",
																	"src": "5268:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5301:41:11",
															"nodeType": "YulAssignment",
															"src": "5301:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "5330:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "5330:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5312:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5312:17:11"
																},
																"nativeSrc": "5312:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5312:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5301:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "5301:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5519:22:11",
																"nodeType": "YulBlock",
																"src": "5519:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5521:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5521:16:11"
																			},
																			"nativeSrc": "5521:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5521:18:11"
																		},
																		"nativeSrc": "5521:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5521:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5452:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "5452:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5445:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "5445:6:11"
																				},
																				"nativeSrc": "5445:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5445:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5475:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "5475:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5482:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "5482:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5491:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "5491:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5478:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "5478:3:11"
																						},
																						"nativeSrc": "5478:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5478:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5472:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "5472:2:11"
																				},
																				"nativeSrc": "5472:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5472:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5425:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5425:2:11"
																		},
																		"nativeSrc": "5425:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5425:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5405:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5405:6:11"
																},
																"nativeSrc": "5405:113:11",
																"nodeType": "YulFunctionCall",
																"src": "5405:113:11"
															},
															"nativeSrc": "5402:139:11",
															"nodeType": "YulIf",
															"src": "5402:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5138:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5169:1:11",
														"nodeType": "YulTypedName",
														"src": "5169:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5172:1:11",
														"nodeType": "YulTypedName",
														"src": "5172:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5178:7:11",
														"nodeType": "YulTypedName",
														"src": "5178:7:11",
														"type": ""
													}
												],
												"src": "5138:410:11"
											},
											{
												"body": {
													"nativeSrc": "5582:152:11",
													"nodeType": "YulBlock",
													"src": "5582:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5599:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5599:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5602:77:11",
																		"nodeType": "YulLiteral",
																		"src": "5602:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5592:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5592:6:11"
																},
																"nativeSrc": "5592:88:11",
																"nodeType": "YulFunctionCall",
																"src": "5592:88:11"
															},
															"nativeSrc": "5592:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "5592:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5696:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5696:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5699:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5699:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5689:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5689:6:11"
																},
																"nativeSrc": "5689:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5689:15:11"
															},
															"nativeSrc": "5689:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5689:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5720:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5720:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5723:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5713:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5713:6:11"
																},
																"nativeSrc": "5713:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5713:15:11"
															},
															"nativeSrc": "5713:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5713:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "5554:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "5554:180:11"
											},
											{
												"body": {
													"nativeSrc": "5782:143:11",
													"nodeType": "YulBlock",
													"src": "5782:143:11",
													"statements": [
														{
															"nativeSrc": "5792:25:11",
															"nodeType": "YulAssignment",
															"src": "5792:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5815:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5815:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5797:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5797:17:11"
																},
																"nativeSrc": "5797:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5797:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5792:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5792:1:11"
																}
															]
														},
														{
															"nativeSrc": "5826:25:11",
															"nodeType": "YulAssignment",
															"src": "5826:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5849:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5849:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5831:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5831:17:11"
																},
																"nativeSrc": "5831:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5831:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5826:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5826:1:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5873:22:11",
																"nodeType": "YulBlock",
																"src": "5873:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5875:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5875:16:11"
																			},
																			"nativeSrc": "5875:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5875:18:11"
																		},
																		"nativeSrc": "5875:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5875:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5870:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5870:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5863:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5863:6:11"
																},
																"nativeSrc": "5863:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5863:9:11"
															},
															"nativeSrc": "5860:35:11",
															"nodeType": "YulIf",
															"src": "5860:35:11"
														},
														{
															"nativeSrc": "5905:14:11",
															"nodeType": "YulAssignment",
															"src": "5905:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5914:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5914:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5917:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5917:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5910:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5910:3:11"
																},
																"nativeSrc": "5910:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5910:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5905:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5905:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5740:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5771:1:11",
														"nodeType": "YulTypedName",
														"src": "5771:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5774:1:11",
														"nodeType": "YulTypedName",
														"src": "5774:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5780:1:11",
														"nodeType": "YulTypedName",
														"src": "5780:1:11",
														"type": ""
													}
												],
												"src": "5740:185:11"
											},
											{
												"body": {
													"nativeSrc": "5975:147:11",
													"nodeType": "YulBlock",
													"src": "5975:147:11",
													"statements": [
														{
															"nativeSrc": "5985:25:11",
															"nodeType": "YulAssignment",
															"src": "5985:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6008:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6008:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5990:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5990:17:11"
																},
																"nativeSrc": "5990:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5990:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5985:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5985:1:11"
																}
															]
														},
														{
															"nativeSrc": "6019:25:11",
															"nodeType": "YulAssignment",
															"src": "6019:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6042:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6042:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6024:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "6024:17:11"
																},
																"nativeSrc": "6024:20:11",
																"nodeType": "YulFunctionCall",
																"src": "6024:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6019:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "6019:1:11"
																}
															]
														},
														{
															"nativeSrc": "6053:16:11",
															"nodeType": "YulAssignment",
															"src": "6053:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6064:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6064:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6067:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6067:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6060:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6060:3:11"
																},
																"nativeSrc": "6060:9:11",
																"nodeType": "YulFunctionCall",
																"src": "6060:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6053:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6053:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6093:22:11",
																"nodeType": "YulBlock",
																"src": "6093:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6095:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "6095:16:11"
																			},
																			"nativeSrc": "6095:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6095:18:11"
																		},
																		"nativeSrc": "6095:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6095:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6085:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6085:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6088:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6088:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6082:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6082:2:11"
																},
																"nativeSrc": "6082:10:11",
																"nodeType": "YulFunctionCall",
																"src": "6082:10:11"
															},
															"nativeSrc": "6079:36:11",
															"nodeType": "YulIf",
															"src": "6079:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5931:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5962:1:11",
														"nodeType": "YulTypedName",
														"src": "5962:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5965:1:11",
														"nodeType": "YulTypedName",
														"src": "5965:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5971:3:11",
														"nodeType": "YulTypedName",
														"src": "5971:3:11",
														"type": ""
													}
												],
												"src": "5931:191:11"
											},
											{
												"body": {
													"nativeSrc": "6156:152:11",
													"nodeType": "YulBlock",
													"src": "6156:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6173:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6173:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6176:77:11",
																		"nodeType": "YulLiteral",
																		"src": "6176:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6166:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6166:6:11"
																},
																"nativeSrc": "6166:88:11",
																"nodeType": "YulFunctionCall",
																"src": "6166:88:11"
															},
															"nativeSrc": "6166:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "6166:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6270:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6270:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6273:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6273:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6263:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6263:6:11"
																},
																"nativeSrc": "6263:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6263:15:11"
															},
															"nativeSrc": "6263:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6263:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6294:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6294:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6297:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6297:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6287:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6287:6:11"
																},
																"nativeSrc": "6287:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6287:15:11"
															},
															"nativeSrc": "6287:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6287:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6128:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "6128:180:11"
											},
											{
												"body": {
													"nativeSrc": "6357:190:11",
													"nodeType": "YulBlock",
													"src": "6357:190:11",
													"statements": [
														{
															"nativeSrc": "6367:33:11",
															"nodeType": "YulAssignment",
															"src": "6367:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6394:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6394:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6376:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "6376:17:11"
																},
																"nativeSrc": "6376:24:11",
																"nodeType": "YulFunctionCall",
																"src": "6376:24:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6367:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6367:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6490:22:11",
																"nodeType": "YulBlock",
																"src": "6490:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6492:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "6492:16:11"
																			},
																			"nativeSrc": "6492:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6492:18:11"
																		},
																		"nativeSrc": "6492:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6492:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6415:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6415:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6422:66:11",
																		"nodeType": "YulLiteral",
																		"src": "6422:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6412:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6412:2:11"
																},
																"nativeSrc": "6412:77:11",
																"nodeType": "YulFunctionCall",
																"src": "6412:77:11"
															},
															"nativeSrc": "6409:103:11",
															"nodeType": "YulIf",
															"src": "6409:103:11"
														},
														{
															"nativeSrc": "6521:20:11",
															"nodeType": "YulAssignment",
															"src": "6521:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6532:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6532:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6539:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6539:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6528:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6528:3:11"
																},
																"nativeSrc": "6528:13:11",
																"nodeType": "YulFunctionCall",
																"src": "6528:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6521:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6521:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "6314:233:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6343:5:11",
														"nodeType": "YulTypedName",
														"src": "6343:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6353:3:11",
														"nodeType": "YulTypedName",
														"src": "6353:3:11",
														"type": ""
													}
												],
												"src": "6314:233:11"
											},
											{
												"body": {
													"nativeSrc": "6618:53:11",
													"nodeType": "YulBlock",
													"src": "6618:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6635:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6635:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6658:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6658:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6640:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "6640:17:11"
																		},
																		"nativeSrc": "6640:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6640:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6628:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6628:6:11"
																},
																"nativeSrc": "6628:37:11",
																"nodeType": "YulFunctionCall",
																"src": "6628:37:11"
															},
															"nativeSrc": "6628:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "6628:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6553:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6606:5:11",
														"nodeType": "YulTypedName",
														"src": "6606:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6613:3:11",
														"nodeType": "YulTypedName",
														"src": "6613:3:11",
														"type": ""
													}
												],
												"src": "6553:118:11"
											},
											{
												"body": {
													"nativeSrc": "6831:288:11",
													"nodeType": "YulBlock",
													"src": "6831:288:11",
													"statements": [
														{
															"nativeSrc": "6841:26:11",
															"nodeType": "YulAssignment",
															"src": "6841:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6853:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6853:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6864:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6864:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6849:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6849:3:11"
																},
																"nativeSrc": "6849:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6849:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6841:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6841:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6921:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6921:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6934:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6934:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6945:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6945:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6930:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6930:3:11"
																		},
																		"nativeSrc": "6930:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6930:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6877:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6877:43:11"
																},
																"nativeSrc": "6877:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6877:71:11"
															},
															"nativeSrc": "6877:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6877:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7002:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7002:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7015:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7015:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7026:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7026:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7011:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7011:3:11"
																		},
																		"nativeSrc": "7011:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7011:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6958:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6958:43:11"
																},
																"nativeSrc": "6958:72:11",
																"nodeType": "YulFunctionCall",
																"src": "6958:72:11"
															},
															"nativeSrc": "6958:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "6958:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7084:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7084:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7097:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7097:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7108:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7108:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7093:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7093:3:11"
																		},
																		"nativeSrc": "7093:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7093:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7040:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7040:43:11"
																},
																"nativeSrc": "7040:72:11",
																"nodeType": "YulFunctionCall",
																"src": "7040:72:11"
															},
															"nativeSrc": "7040:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "7040:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6677:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6787:9:11",
														"nodeType": "YulTypedName",
														"src": "6787:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6799:6:11",
														"nodeType": "YulTypedName",
														"src": "6799:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6807:6:11",
														"nodeType": "YulTypedName",
														"src": "6807:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6815:6:11",
														"nodeType": "YulTypedName",
														"src": "6815:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6826:4:11",
														"nodeType": "YulTypedName",
														"src": "6826:4:11",
														"type": ""
													}
												],
												"src": "6677:442:11"
											},
											{
												"body": {
													"nativeSrc": "7167:48:11",
													"nodeType": "YulBlock",
													"src": "7167:48:11",
													"statements": [
														{
															"nativeSrc": "7177:32:11",
															"nodeType": "YulAssignment",
															"src": "7177:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7202:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7202:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7195:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7195:6:11"
																		},
																		"nativeSrc": "7195:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7195:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7188:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7188:6:11"
																},
																"nativeSrc": "7188:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7188:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7177:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "7177:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7125:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7149:5:11",
														"nodeType": "YulTypedName",
														"src": "7149:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7159:7:11",
														"nodeType": "YulTypedName",
														"src": "7159:7:11",
														"type": ""
													}
												],
												"src": "7125:90:11"
											},
											{
												"body": {
													"nativeSrc": "7261:76:11",
													"nodeType": "YulBlock",
													"src": "7261:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7315:16:11",
																"nodeType": "YulBlock",
																"src": "7315:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7324:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7324:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7327:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7327:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7317:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7317:6:11"
																			},
																			"nativeSrc": "7317:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7317:12:11"
																		},
																		"nativeSrc": "7317:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7317:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7284:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7284:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7306:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "7306:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7291:14:11",
																					"nodeType": "YulIdentifier",
																					"src": "7291:14:11"
																				},
																				"nativeSrc": "7291:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7291:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7281:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7281:2:11"
																		},
																		"nativeSrc": "7281:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7281:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7274:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7274:6:11"
																},
																"nativeSrc": "7274:40:11",
																"nodeType": "YulFunctionCall",
																"src": "7274:40:11"
															},
															"nativeSrc": "7271:60:11",
															"nodeType": "YulIf",
															"src": "7271:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7221:116:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7254:5:11",
														"nodeType": "YulTypedName",
														"src": "7254:5:11",
														"type": ""
													}
												],
												"src": "7221:116:11"
											},
											{
												"body": {
													"nativeSrc": "7403:77:11",
													"nodeType": "YulBlock",
													"src": "7403:77:11",
													"statements": [
														{
															"nativeSrc": "7413:22:11",
															"nodeType": "YulAssignment",
															"src": "7413:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7428:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7428:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7422:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7422:5:11"
																},
																"nativeSrc": "7422:13:11",
																"nodeType": "YulFunctionCall",
																"src": "7422:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7413:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7413:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7468:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7468:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7444:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "7444:23:11"
																},
																"nativeSrc": "7444:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7444:30:11"
															},
															"nativeSrc": "7444:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "7444:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7343:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7381:6:11",
														"nodeType": "YulTypedName",
														"src": "7381:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7389:3:11",
														"nodeType": "YulTypedName",
														"src": "7389:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7397:5:11",
														"nodeType": "YulTypedName",
														"src": "7397:5:11",
														"type": ""
													}
												],
												"src": "7343:137:11"
											},
											{
												"body": {
													"nativeSrc": "7560:271:11",
													"nodeType": "YulBlock",
													"src": "7560:271:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7606:83:11",
																"nodeType": "YulBlock",
																"src": "7606:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7608:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7608:77:11"
																			},
																			"nativeSrc": "7608:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7608:79:11"
																		},
																		"nativeSrc": "7608:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7608:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7581:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7581:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7590:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7590:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7577:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7577:3:11"
																		},
																		"nativeSrc": "7577:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7577:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7602:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7602:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7573:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7573:3:11"
																},
																"nativeSrc": "7573:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7573:32:11"
															},
															"nativeSrc": "7570:119:11",
															"nodeType": "YulIf",
															"src": "7570:119:11"
														},
														{
															"nativeSrc": "7699:125:11",
															"nodeType": "YulBlock",
															"src": "7699:125:11",
															"statements": [
																{
																	"nativeSrc": "7714:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7714:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7728:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7728:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7718:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7718:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7743:71:11",
																	"nodeType": "YulAssignment",
																	"src": "7743:71:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7786:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7786:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7797:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7797:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7782:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7782:3:11"
																				},
																				"nativeSrc": "7782:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7782:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7806:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7806:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7753:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "7753:28:11"
																		},
																		"nativeSrc": "7753:61:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7753:61:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7743:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7743:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7486:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7530:9:11",
														"nodeType": "YulTypedName",
														"src": "7530:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7541:7:11",
														"nodeType": "YulTypedName",
														"src": "7541:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7553:6:11",
														"nodeType": "YulTypedName",
														"src": "7553:6:11",
														"type": ""
													}
												],
												"src": "7486:345:11"
											},
											{
												"body": {
													"nativeSrc": "7935:124:11",
													"nodeType": "YulBlock",
													"src": "7935:124:11",
													"statements": [
														{
															"nativeSrc": "7945:26:11",
															"nodeType": "YulAssignment",
															"src": "7945:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7957:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7957:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7968:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7968:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7953:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7953:3:11"
																},
																"nativeSrc": "7953:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7953:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7945:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7945:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8025:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8025:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8038:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8038:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8049:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8049:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8034:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8034:3:11"
																		},
																		"nativeSrc": "8034:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8034:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7981:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7981:43:11"
																},
																"nativeSrc": "7981:71:11",
																"nodeType": "YulFunctionCall",
																"src": "7981:71:11"
															},
															"nativeSrc": "7981:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "7981:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7837:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7907:9:11",
														"nodeType": "YulTypedName",
														"src": "7907:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7919:6:11",
														"nodeType": "YulTypedName",
														"src": "7919:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7930:4:11",
														"nodeType": "YulTypedName",
														"src": "7930:4:11",
														"type": ""
													}
												],
												"src": "7837:222:11"
											},
											{
												"body": {
													"nativeSrc": "8109:61:11",
													"nodeType": "YulBlock",
													"src": "8109:61:11",
													"statements": [
														{
															"nativeSrc": "8119:45:11",
															"nodeType": "YulAssignment",
															"src": "8119:45:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8134:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8134:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8141:22:11",
																		"nodeType": "YulLiteral",
																		"src": "8141:22:11",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8130:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8130:3:11"
																},
																"nativeSrc": "8130:34:11",
																"nodeType": "YulFunctionCall",
																"src": "8130:34:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8119:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "8119:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "8065:105:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8091:5:11",
														"nodeType": "YulTypedName",
														"src": "8091:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8101:7:11",
														"nodeType": "YulTypedName",
														"src": "8101:7:11",
														"type": ""
													}
												],
												"src": "8065:105:11"
											},
											{
												"body": {
													"nativeSrc": "8218:78:11",
													"nodeType": "YulBlock",
													"src": "8218:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8274:16:11",
																"nodeType": "YulBlock",
																"src": "8274:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8283:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8283:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8286:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8286:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8276:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8276:6:11"
																			},
																			"nativeSrc": "8276:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8276:12:11"
																		},
																		"nativeSrc": "8276:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8276:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8241:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "8241:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8265:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "8265:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "8248:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "8248:16:11"
																				},
																				"nativeSrc": "8248:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8248:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8238:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "8238:2:11"
																		},
																		"nativeSrc": "8238:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8238:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8231:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8231:6:11"
																},
																"nativeSrc": "8231:42:11",
																"nodeType": "YulFunctionCall",
																"src": "8231:42:11"
															},
															"nativeSrc": "8228:62:11",
															"nodeType": "YulIf",
															"src": "8228:62:11"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "8176:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8211:5:11",
														"nodeType": "YulTypedName",
														"src": "8211:5:11",
														"type": ""
													}
												],
												"src": "8176:120:11"
											},
											{
												"body": {
													"nativeSrc": "8364:79:11",
													"nodeType": "YulBlock",
													"src": "8364:79:11",
													"statements": [
														{
															"nativeSrc": "8374:22:11",
															"nodeType": "YulAssignment",
															"src": "8374:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8389:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8389:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8383:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8383:5:11"
																},
																"nativeSrc": "8383:13:11",
																"nodeType": "YulFunctionCall",
																"src": "8383:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8374:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8374:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8431:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8431:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "8405:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "8405:25:11"
																},
																"nativeSrc": "8405:32:11",
																"nodeType": "YulFunctionCall",
																"src": "8405:32:11"
															},
															"nativeSrc": "8405:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "8405:32:11"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "8302:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8342:6:11",
														"nodeType": "YulTypedName",
														"src": "8342:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8350:3:11",
														"nodeType": "YulTypedName",
														"src": "8350:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8358:5:11",
														"nodeType": "YulTypedName",
														"src": "8358:5:11",
														"type": ""
													}
												],
												"src": "8302:141:11"
											},
											{
												"body": {
													"nativeSrc": "8493:32:11",
													"nodeType": "YulBlock",
													"src": "8493:32:11",
													"statements": [
														{
															"nativeSrc": "8503:16:11",
															"nodeType": "YulAssignment",
															"src": "8503:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "8514:5:11",
																"nodeType": "YulIdentifier",
																"src": "8514:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8503:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "8503:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "8449:76:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8475:5:11",
														"nodeType": "YulTypedName",
														"src": "8475:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8485:7:11",
														"nodeType": "YulTypedName",
														"src": "8485:7:11",
														"type": ""
													}
												],
												"src": "8449:76:11"
											},
											{
												"body": {
													"nativeSrc": "8573:78:11",
													"nodeType": "YulBlock",
													"src": "8573:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8629:16:11",
																"nodeType": "YulBlock",
																"src": "8629:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8638:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8638:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8641:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8641:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8631:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8631:6:11"
																			},
																			"nativeSrc": "8631:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8631:12:11"
																		},
																		"nativeSrc": "8631:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8631:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8596:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "8596:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8620:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "8620:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "8603:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "8603:16:11"
																				},
																				"nativeSrc": "8603:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8603:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8593:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "8593:2:11"
																		},
																		"nativeSrc": "8593:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8593:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8586:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8586:6:11"
																},
																"nativeSrc": "8586:42:11",
																"nodeType": "YulFunctionCall",
																"src": "8586:42:11"
															},
															"nativeSrc": "8583:62:11",
															"nodeType": "YulIf",
															"src": "8583:62:11"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "8531:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8566:5:11",
														"nodeType": "YulTypedName",
														"src": "8566:5:11",
														"type": ""
													}
												],
												"src": "8531:120:11"
											},
											{
												"body": {
													"nativeSrc": "8719:79:11",
													"nodeType": "YulBlock",
													"src": "8719:79:11",
													"statements": [
														{
															"nativeSrc": "8729:22:11",
															"nodeType": "YulAssignment",
															"src": "8729:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8744:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8744:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8738:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8738:5:11"
																},
																"nativeSrc": "8738:13:11",
																"nodeType": "YulFunctionCall",
																"src": "8738:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8729:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8729:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8786:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8786:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "8760:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "8760:25:11"
																},
																"nativeSrc": "8760:32:11",
																"nodeType": "YulFunctionCall",
																"src": "8760:32:11"
															},
															"nativeSrc": "8760:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "8760:32:11"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "8657:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8697:6:11",
														"nodeType": "YulTypedName",
														"src": "8697:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8705:3:11",
														"nodeType": "YulTypedName",
														"src": "8705:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8713:5:11",
														"nodeType": "YulTypedName",
														"src": "8713:5:11",
														"type": ""
													}
												],
												"src": "8657:141:11"
											},
											{
												"body": {
													"nativeSrc": "8867:80:11",
													"nodeType": "YulBlock",
													"src": "8867:80:11",
													"statements": [
														{
															"nativeSrc": "8877:22:11",
															"nodeType": "YulAssignment",
															"src": "8877:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8892:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8892:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8886:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8886:5:11"
																},
																"nativeSrc": "8886:13:11",
																"nodeType": "YulFunctionCall",
																"src": "8886:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8877:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8877:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8935:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8935:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8908:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "8908:26:11"
																},
																"nativeSrc": "8908:33:11",
																"nodeType": "YulFunctionCall",
																"src": "8908:33:11"
															},
															"nativeSrc": "8908:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "8908:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8804:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8845:6:11",
														"nodeType": "YulTypedName",
														"src": "8845:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8853:3:11",
														"nodeType": "YulTypedName",
														"src": "8853:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8861:5:11",
														"nodeType": "YulTypedName",
														"src": "8861:5:11",
														"type": ""
													}
												],
												"src": "8804:143:11"
											},
											{
												"body": {
													"nativeSrc": "9095:829:11",
													"nodeType": "YulBlock",
													"src": "9095:829:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9142:83:11",
																"nodeType": "YulBlock",
																"src": "9142:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9144:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "9144:77:11"
																			},
																			"nativeSrc": "9144:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9144:79:11"
																		},
																		"nativeSrc": "9144:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9144:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9116:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9116:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9125:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9125:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9112:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9112:3:11"
																		},
																		"nativeSrc": "9112:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9112:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9137:3:11",
																		"nodeType": "YulLiteral",
																		"src": "9137:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9108:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9108:3:11"
																},
																"nativeSrc": "9108:33:11",
																"nodeType": "YulFunctionCall",
																"src": "9108:33:11"
															},
															"nativeSrc": "9105:120:11",
															"nodeType": "YulIf",
															"src": "9105:120:11"
														},
														{
															"nativeSrc": "9235:127:11",
															"nodeType": "YulBlock",
															"src": "9235:127:11",
															"statements": [
																{
																	"nativeSrc": "9250:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9250:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9264:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9264:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9254:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9254:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9279:73:11",
																	"nodeType": "YulAssignment",
																	"src": "9279:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9324:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9324:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9335:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9335:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9320:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9320:3:11"
																				},
																				"nativeSrc": "9320:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9320:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9344:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9344:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "9289:30:11",
																			"nodeType": "YulIdentifier",
																			"src": "9289:30:11"
																		},
																		"nativeSrc": "9289:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9289:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9279:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9279:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9372:128:11",
															"nodeType": "YulBlock",
															"src": "9372:128:11",
															"statements": [
																{
																	"nativeSrc": "9387:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9387:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9401:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9401:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9391:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9391:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9417:73:11",
																	"nodeType": "YulAssignment",
																	"src": "9417:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9462:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9462:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9473:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9473:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9458:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9458:3:11"
																				},
																				"nativeSrc": "9458:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9458:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9482:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9482:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "9427:30:11",
																			"nodeType": "YulIdentifier",
																			"src": "9427:30:11"
																		},
																		"nativeSrc": "9427:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9427:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9417:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9417:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9510:129:11",
															"nodeType": "YulBlock",
															"src": "9510:129:11",
															"statements": [
																{
																	"nativeSrc": "9525:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9525:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9539:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9539:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9529:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9529:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9555:74:11",
																	"nodeType": "YulAssignment",
																	"src": "9555:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9601:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9601:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9612:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9612:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9597:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9597:3:11"
																				},
																				"nativeSrc": "9597:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9597:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9621:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9621:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "9565:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "9565:31:11"
																		},
																		"nativeSrc": "9565:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9565:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9555:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9555:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9649:129:11",
															"nodeType": "YulBlock",
															"src": "9649:129:11",
															"statements": [
																{
																	"nativeSrc": "9664:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9664:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9678:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9678:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9668:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9668:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9694:74:11",
																	"nodeType": "YulAssignment",
																	"src": "9694:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9740:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9740:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9751:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9751:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9736:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9736:3:11"
																				},
																				"nativeSrc": "9736:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9736:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9760:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9760:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "9704:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "9704:31:11"
																		},
																		"nativeSrc": "9704:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9704:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9694:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9694:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9788:129:11",
															"nodeType": "YulBlock",
															"src": "9788:129:11",
															"statements": [
																{
																	"nativeSrc": "9803:17:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9803:17:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9817:3:11",
																		"nodeType": "YulLiteral",
																		"src": "9817:3:11",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9807:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9807:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9834:73:11",
																	"nodeType": "YulAssignment",
																	"src": "9834:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9879:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9879:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9890:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9890:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9875:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9875:3:11"
																				},
																				"nativeSrc": "9875:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9875:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9899:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9899:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "9844:30:11",
																			"nodeType": "YulIdentifier",
																			"src": "9844:30:11"
																		},
																		"nativeSrc": "9844:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9844:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "9834:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9834:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "8953:971:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9033:9:11",
														"nodeType": "YulTypedName",
														"src": "9033:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9044:7:11",
														"nodeType": "YulTypedName",
														"src": "9044:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9056:6:11",
														"nodeType": "YulTypedName",
														"src": "9056:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9064:6:11",
														"nodeType": "YulTypedName",
														"src": "9064:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9072:6:11",
														"nodeType": "YulTypedName",
														"src": "9072:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9080:6:11",
														"nodeType": "YulTypedName",
														"src": "9080:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9088:6:11",
														"nodeType": "YulTypedName",
														"src": "9088:6:11",
														"type": ""
													}
												],
												"src": "8953:971:11"
											},
											{
												"body": {
													"nativeSrc": "10056:206:11",
													"nodeType": "YulBlock",
													"src": "10056:206:11",
													"statements": [
														{
															"nativeSrc": "10066:26:11",
															"nodeType": "YulAssignment",
															"src": "10066:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10078:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10078:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10089:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10089:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10074:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10074:3:11"
																},
																"nativeSrc": "10074:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10074:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10066:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10066:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10146:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10146:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10159:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10159:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10170:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10170:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10155:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10155:3:11"
																		},
																		"nativeSrc": "10155:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10155:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10102:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10102:43:11"
																},
																"nativeSrc": "10102:71:11",
																"nodeType": "YulFunctionCall",
																"src": "10102:71:11"
															},
															"nativeSrc": "10102:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "10102:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10227:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10227:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10240:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10240:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10251:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10251:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10236:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10236:3:11"
																		},
																		"nativeSrc": "10236:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10236:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10183:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10183:43:11"
																},
																"nativeSrc": "10183:72:11",
																"nodeType": "YulFunctionCall",
																"src": "10183:72:11"
															},
															"nativeSrc": "10183:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "10183:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9930:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10020:9:11",
														"nodeType": "YulTypedName",
														"src": "10020:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10032:6:11",
														"nodeType": "YulTypedName",
														"src": "10032:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10040:6:11",
														"nodeType": "YulTypedName",
														"src": "10040:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10051:4:11",
														"nodeType": "YulTypedName",
														"src": "10051:4:11",
														"type": ""
													}
												],
												"src": "9930:332:11"
											},
											{
												"body": {
													"nativeSrc": "10313:149:11",
													"nodeType": "YulBlock",
													"src": "10313:149:11",
													"statements": [
														{
															"nativeSrc": "10323:25:11",
															"nodeType": "YulAssignment",
															"src": "10323:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10346:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10346:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10328:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10328:17:11"
																},
																"nativeSrc": "10328:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10328:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10323:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10323:1:11"
																}
															]
														},
														{
															"nativeSrc": "10357:25:11",
															"nodeType": "YulAssignment",
															"src": "10357:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10380:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10380:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10362:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10362:17:11"
																},
																"nativeSrc": "10362:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10362:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10357:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10357:1:11"
																}
															]
														},
														{
															"nativeSrc": "10391:17:11",
															"nodeType": "YulAssignment",
															"src": "10391:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10403:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10403:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10406:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10406:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10399:3:11"
																},
																"nativeSrc": "10399:9:11",
																"nodeType": "YulFunctionCall",
																"src": "10399:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10391:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10391:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10433:22:11",
																"nodeType": "YulBlock",
																"src": "10433:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10435:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10435:16:11"
																			},
																			"nativeSrc": "10435:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10435:18:11"
																		},
																		"nativeSrc": "10435:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10435:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10424:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10424:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10430:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10430:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10421:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10421:2:11"
																},
																"nativeSrc": "10421:11:11",
																"nodeType": "YulFunctionCall",
																"src": "10421:11:11"
															},
															"nativeSrc": "10418:37:11",
															"nodeType": "YulIf",
															"src": "10418:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10268:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10299:1:11",
														"nodeType": "YulTypedName",
														"src": "10299:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10302:1:11",
														"nodeType": "YulTypedName",
														"src": "10302:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10308:4:11",
														"nodeType": "YulTypedName",
														"src": "10308:4:11",
														"type": ""
													}
												],
												"src": "10268:194:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_DecentralizedStableCoin_$1944_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_DecentralizedStableCoin_$1944_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_DecentralizedStableCoin_$1944_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_DecentralizedStableCoin_$1944__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_DecentralizedStableCoin_$1944_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1137": [
									{
										"length": 32,
										"start": 1166
									},
									{
										"length": 32,
										"start": 2729
									},
									{
										"length": 32,
										"start": 4246
									},
									{
										"length": 32,
										"start": 4460
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610114575f3560e01c8063a5f352b7116100a0578063c9b7c3271161006f578063c9b7c327146102a8578063e90db8a3146102c4578063f419ea9c146102e0578063f6876608146102fc578063fa76dcf21461031857610114565b8063a5f352b714610232578063aaf5eb681461023c578063afea2e481461025a578063c601676c1461028a57610114565b80637d1a4450116100e75780637d1a44501461018e57806390a8ae9b146101be5780639acd81b3146101dc5780639d45ac89146101f8578063a5d5db0c1461021657610114565b806326c01303146101185780633574d4c4146101345780635e338bb31461015257806365079d7714610170575b5f5ffd5b610132600480360381019061012d919061133e565b610348565b005b61013c610487565b604051610149919061139d565b60405180910390f35b61015a61048c565b6040516101679190611411565b60405180910390f35b6101786104b0565b604051610185919061139d565b60405180910390f35b6101a860048036038101906101a3919061142a565b6104b9565b6040516101b5919061139d565b60405180910390f35b6101c66105b9565b6040516101d3919061139d565b60405180910390f35b6101f660048036038101906101f19190611455565b6105be565b005b610200610622565b60405161020d919061139d565b60405180910390f35b610230600480360381019061022b9190611455565b610627565b005b61023a6108e5565b005b6102446108e7565b604051610251919061139d565b60405180910390f35b610274600480360381019061026f9190611455565b6108f3565b604051610281919061139d565b60405180910390f35b6102926109fc565b60405161029f919061139d565b60405180910390f35b6102c260048036038101906102bd9190611493565b610a08565b005b6102de60048036038101906102d991906114be565b610b88565b005b6102fa60048036038101906102f591906114be565b610ba0565b005b61031660048036038101906103119190611493565b610bb8565b005b610332600480360381019061032d9190611455565b610c0a565b60405161033f919061139d565b60405180910390f35b805f8103610382576040517fcb1d3f7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61038a610dd6565b5f61039484610e1a565b9050670de0b6b3a764000081106103d7576040517f4dc824ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6103e286856108f3565b90505f6064600a836103f4919061153b565b6103fe91906115a9565b90505f818361040d91906115d9565b905061041b88828933610e6f565b610426868833611040565b5f61043088610e1a565b905084811161046b576040517f7c28362000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610474336111f6565b5050505050610481611252565b50505050565b600a81565b7f000000000000000000000000000000000000000000000000000000000000000081565b6402540be40081565b5f5f5f90505b6004805490508111156105b3575f600482815481106104e1576104e061160c565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490506105918282610c0a565b8461059c91906115d9565b9350505080806105ab90611639565b9150506104bf565b50919050565b603281565b6105c6610dd6565b805f8103610600576040517fcb1d3f7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61060c83833333610e6f565b610615336111f6565b5061061e611252565b5050565b606481565b805f8103610661576040517fcb1d3f7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825f73ffffffffffffffffffffffffffffffffffffffff1660015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610723576040517fa802cfbe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61072b610dd6565b8260025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107b291906115d9565b925050819055505f8473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016107f79392919061168f565b6020604051808303815f875af1158015610813573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083791906116f9565b90508061087b57846040517fbc3fe1270000000000000000000000000000000000000000000000000000000081526004016108729190611724565b60405180910390fd5b838573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff1c0dd7e9b98bbff859029005ef89b127af049cd18df1a8d79f0b7e019911e5660405160405180910390a4506108df611252565b50505050565b565b670de0b6b3a764000081565b5f5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561099a573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109be91906117c3565b5050509150506402540be400816109d5919061153b565b670de0b6b3a7640000846109e9919061153b565b6109f391906115a9565b91505092915050565b670de0b6b3a764000081565b805f8103610a42576040517fcb1d3f7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a4a610dd6565b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a9691906115d9565b92505081905550610aa6336111f6565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166340c10f1933856040518363ffffffff1660e01b8152600401610b0292919061183a565b6020604051808303815f875af1158015610b1e573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b4291906116f9565b905080610b7b576040517f6f4e810b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610b84611252565b5050565b610b928383610627565b610b9b81610a08565b505050565b610ba981610bb8565b610bb383836105be565b505050565b805f8103610bf2576040517fcb1d3f7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bfd823333611040565b610c06336111f6565b5050565b5f825f73ffffffffffffffffffffffffffffffffffffffff1660015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610ccd576040517fa802cfbe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610d73573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d9791906117c3565b505050915050670de0b6b3a7640000846402540be40083610db8919061153b565b610dc2919061153b565b610dcc91906115a9565b9250505092915050565b60025f5403610e11576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b5f5f5f610e268461125b565b915091505f6064603283610e3a919061153b565b610e4491906115a9565b905082670de0b6b3a764000082610e5b919061153b565b610e6591906115a9565b9350505050919050565b8260025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610ef69190611861565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fb292db12b8dfa23b760ee5e3bd1d3be184cd8f0eeeacd27ce120d4de4e4721f686604051610f71919061139d565b60405180910390a45f8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83866040518363ffffffff1660e01b8152600401610fb592919061183a565b6020604051808303815f875af1158015610fd1573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ff591906116f9565b90508061103957846040517f2851f4320000000000000000000000000000000000000000000000000000000081526004016110309190611724565b60405180910390fd5b5050505050565b8260035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461108c9190611861565b925050819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd8330876040518463ffffffff1660e01b81526004016110f19392919061168f565b6020604051808303815f875af115801561110d573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061113191906116f9565b90508061116a576040517f3a29ac6d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166342966c68856040518263ffffffff1660e01b81526004016111c3919061139d565b5f604051808303815f87803b1580156111da575f5ffd5b505af11580156111ec573d5f5f3e3d5ffd5b5050505050505050565b5f61120082610e1a565b9050670de0b6b3a7640000811161124e57806040517fe580cc61000000000000000000000000000000000000000000000000000000008152600401611245919061139d565b60405180910390fd5b5050565b60015f81905550565b5f5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491506112a6836104b9565b9050915091565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112da826112b1565b9050919050565b6112ea816112d0565b81146112f4575f5ffd5b50565b5f81359050611305816112e1565b92915050565b5f819050919050565b61131d8161130b565b8114611327575f5ffd5b50565b5f8135905061133881611314565b92915050565b5f5f5f60608486031215611355576113546112ad565b5b5f611362868287016112f7565b9350506020611373868287016112f7565b92505060406113848682870161132a565b9150509250925092565b6113978161130b565b82525050565b5f6020820190506113b05f83018461138e565b92915050565b5f819050919050565b5f6113d96113d46113cf846112b1565b6113b6565b6112b1565b9050919050565b5f6113ea826113bf565b9050919050565b5f6113fb826113e0565b9050919050565b61140b816113f1565b82525050565b5f6020820190506114245f830184611402565b92915050565b5f6020828403121561143f5761143e6112ad565b5b5f61144c848285016112f7565b91505092915050565b5f5f6040838503121561146b5761146a6112ad565b5b5f611478858286016112f7565b92505060206114898582860161132a565b9150509250929050565b5f602082840312156114a8576114a76112ad565b5b5f6114b58482850161132a565b91505092915050565b5f5f5f606084860312156114d5576114d46112ad565b5b5f6114e2868287016112f7565b93505060206114f38682870161132a565b92505060406115048682870161132a565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115458261130b565b91506115508361130b565b925082820261155e8161130b565b915082820484148315176115755761157461150e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6115b38261130b565b91506115be8361130b565b9250826115ce576115cd61157c565b5b828204905092915050565b5f6115e38261130b565b91506115ee8361130b565b92508282019050808211156116065761160561150e565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6116438261130b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116755761167461150e565b5b600182019050919050565b611689816112d0565b82525050565b5f6060820190506116a25f830186611680565b6116af6020830185611680565b6116bc604083018461138e565b949350505050565b5f8115159050919050565b6116d8816116c4565b81146116e2575f5ffd5b50565b5f815190506116f3816116cf565b92915050565b5f6020828403121561170e5761170d6112ad565b5b5f61171b848285016116e5565b91505092915050565b5f6020820190506117375f830184611680565b92915050565b5f69ffffffffffffffffffff82169050919050565b61175b8161173d565b8114611765575f5ffd5b50565b5f8151905061177681611752565b92915050565b5f819050919050565b61178e8161177c565b8114611798575f5ffd5b50565b5f815190506117a981611785565b92915050565b5f815190506117bd81611314565b92915050565b5f5f5f5f5f60a086880312156117dc576117db6112ad565b5b5f6117e988828901611768565b95505060206117fa8882890161179b565b945050604061180b888289016117af565b935050606061181c888289016117af565b925050608061182d88828901611768565b9150509295509295909350565b5f60408201905061184d5f830185611680565b61185a602083018461138e565b9392505050565b5f61186b8261130b565b91506118768361130b565b925082820390508181111561188e5761188d61150e565b5b9291505056fea2646970667358221220be4dda95dc4112ccb28efc7c1063637d711aaaefd996fb9ea84b6233e9d6faf664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA5F352B7 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC9B7C327 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC9B7C327 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xE90DB8A3 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xF419EA9C EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xF6876608 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xFA76DCF2 EQ PUSH2 0x318 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0xA5F352B7 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xAFEA2E48 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xC601676C EQ PUSH2 0x28A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x7D1A4450 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x7D1A4450 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x90A8AE9B EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x9ACD81B3 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x9D45AC89 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xA5D5DB0C EQ PUSH2 0x216 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x26C01303 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x3574D4C4 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x5E338BB3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x65079D77 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13C PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x48C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH2 0x4B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH2 0x622 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x627 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH2 0x8E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x244 PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST PUSH2 0xB88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST PUSH2 0xBA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0xBB8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCB1D3F7D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38A PUSH2 0xDD6 JUMP JUMPDEST PUSH0 PUSH2 0x394 DUP5 PUSH2 0xE1A JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4DC824BA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E2 DUP7 DUP6 PUSH2 0x8F3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST SWAP1 POP PUSH2 0x41B DUP9 DUP3 DUP10 CALLER PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x426 DUP7 DUP9 CALLER PUSH2 0x1040 JUMP JUMPDEST PUSH0 PUSH2 0x430 DUP9 PUSH2 0xE1A JUMP JUMPDEST SWAP1 POP DUP5 DUP2 GT PUSH2 0x46B JUMPI PUSH1 0x40 MLOAD PUSH32 0x7C28362000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x474 CALLER PUSH2 0x11F6 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x481 PUSH2 0x1252 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH5 0x2540BE400 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 GT ISZERO PUSH2 0x5B3 JUMPI PUSH0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4E1 JUMPI PUSH2 0x4E0 PUSH2 0x160C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x591 DUP3 DUP3 PUSH2 0xC0A JUMP JUMPDEST DUP5 PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST SWAP4 POP POP POP DUP1 DUP1 PUSH2 0x5AB SWAP1 PUSH2 0x1639 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4BF JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH2 0x5C6 PUSH2 0xDD6 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCB1D3F7D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60C DUP4 DUP4 CALLER CALLER PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x615 CALLER PUSH2 0x11F6 JUMP JUMPDEST POP PUSH2 0x61E PUSH2 0x1252 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x661 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCB1D3F7D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA802CFBE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72B PUSH2 0xDD6 JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x813 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x87B JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0xBC3FE12700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x872 SWAP2 SWAP1 PUSH2 0x1724 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF1C0DD7E9B98BBFF859029005EF89B127AF049CD18DF1A8D79F0B7E019911E56 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0x8DF PUSH2 0x1252 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 PUSH2 0x9D5 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x9E9 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x9F3 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0xA42 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCB1D3F7D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA4A PUSH2 0xDD6 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAA6 CALLER PUSH2 0x11F6 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB02 SWAP3 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB1E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB42 SWAP2 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x6F4E810B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xB84 PUSH2 0x1252 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB92 DUP4 DUP4 PUSH2 0x627 JUMP JUMPDEST PUSH2 0xB9B DUP2 PUSH2 0xA08 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBA9 DUP2 PUSH2 0xBB8 JUMP JUMPDEST PUSH2 0xBB3 DUP4 DUP4 PUSH2 0x5BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCB1D3F7D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFD DUP3 CALLER CALLER PUSH2 0x1040 JUMP JUMPDEST PUSH2 0xC06 CALLER PUSH2 0x11F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH32 0xA802CFBE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD73 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH8 0xDE0B6B3A7640000 DUP5 PUSH5 0x2540BE400 DUP4 PUSH2 0xDB8 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0xDC2 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0xDCC SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0xE26 DUP5 PUSH2 0x125B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH1 0x64 PUSH1 0x32 DUP4 PUSH2 0xE3A SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0xE44 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST SWAP1 POP DUP3 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xE5B SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0xE65 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEF6 SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB292DB12B8DFA23B760EE5E3BD1D3BE184CD8F0EEEACD27CE120D4DE4E4721F6 DUP7 PUSH1 0x40 MLOAD PUSH2 0xF71 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB5 SWAP3 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFD1 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1039 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x2851F43200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1030 SWAP2 SWAP1 PUSH2 0x1724 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x108C SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x110D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1131 SWAP2 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x116A JUMPI PUSH1 0x40 MLOAD PUSH32 0x3A29AC6D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C3 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1200 DUP3 PUSH2 0xE1A JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 GT PUSH2 0x124E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xE580CC6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1245 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP PUSH2 0x12A6 DUP4 PUSH2 0x4B9 JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12DA DUP3 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12EA DUP2 PUSH2 0x12D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1305 DUP2 PUSH2 0x12E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131D DUP2 PUSH2 0x130B JUMP JUMPDEST DUP2 EQ PUSH2 0x1327 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1338 DUP2 PUSH2 0x1314 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1355 JUMPI PUSH2 0x1354 PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1362 DUP7 DUP3 DUP8 ADD PUSH2 0x12F7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1373 DUP7 DUP3 DUP8 ADD PUSH2 0x12F7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1384 DUP7 DUP3 DUP8 ADD PUSH2 0x132A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1397 DUP2 PUSH2 0x130B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x138E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13D9 PUSH2 0x13D4 PUSH2 0x13CF DUP5 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13EA DUP3 PUSH2 0x13BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13FB DUP3 PUSH2 0x13E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140B DUP2 PUSH2 0x13F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1424 PUSH0 DUP4 ADD DUP5 PUSH2 0x1402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144C DUP5 DUP3 DUP6 ADD PUSH2 0x12F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146B JUMPI PUSH2 0x146A PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1478 DUP6 DUP3 DUP7 ADD PUSH2 0x12F7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1489 DUP6 DUP3 DUP7 ADD PUSH2 0x132A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A8 JUMPI PUSH2 0x14A7 PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B5 DUP5 DUP3 DUP6 ADD PUSH2 0x132A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14D5 JUMPI PUSH2 0x14D4 PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14E2 DUP7 DUP3 DUP8 ADD PUSH2 0x12F7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14F3 DUP7 DUP3 DUP8 ADD PUSH2 0x132A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1504 DUP7 DUP3 DUP8 ADD PUSH2 0x132A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1545 DUP3 PUSH2 0x130B JUMP JUMPDEST SWAP2 POP PUSH2 0x1550 DUP4 PUSH2 0x130B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x155E DUP2 PUSH2 0x130B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1575 JUMPI PUSH2 0x1574 PUSH2 0x150E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15B3 DUP3 PUSH2 0x130B JUMP JUMPDEST SWAP2 POP PUSH2 0x15BE DUP4 PUSH2 0x130B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15CE JUMPI PUSH2 0x15CD PUSH2 0x157C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15E3 DUP3 PUSH2 0x130B JUMP JUMPDEST SWAP2 POP PUSH2 0x15EE DUP4 PUSH2 0x130B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1605 PUSH2 0x150E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1643 DUP3 PUSH2 0x130B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1675 JUMPI PUSH2 0x1674 PUSH2 0x150E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1689 DUP2 PUSH2 0x12D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16A2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x16AF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x16BC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x138E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D8 DUP2 PUSH2 0x16C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x16E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x16F3 DUP2 PUSH2 0x16CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x170E JUMPI PUSH2 0x170D PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x171B DUP5 DUP3 DUP6 ADD PUSH2 0x16E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1737 PUSH0 DUP4 ADD DUP5 PUSH2 0x1680 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175B DUP2 PUSH2 0x173D JUMP JUMPDEST DUP2 EQ PUSH2 0x1765 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1776 DUP2 PUSH2 0x1752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178E DUP2 PUSH2 0x177C JUMP JUMPDEST DUP2 EQ PUSH2 0x1798 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17A9 DUP2 PUSH2 0x1785 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17BD DUP2 PUSH2 0x1314 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17DC JUMPI PUSH2 0x17DB PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E9 DUP9 DUP3 DUP10 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x17FA DUP9 DUP3 DUP10 ADD PUSH2 0x179B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x180B DUP9 DUP3 DUP10 ADD PUSH2 0x17AF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x181C DUP9 DUP3 DUP10 ADD PUSH2 0x17AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x182D DUP9 DUP3 DUP10 ADD PUSH2 0x1768 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x184D PUSH0 DUP4 ADD DUP6 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x185A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x138E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x186B DUP3 PUSH2 0x130B JUMP JUMPDEST SWAP2 POP PUSH2 0x1876 DUP4 PUSH2 0x130B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x188E JUMPI PUSH2 0x188D PUSH2 0x150E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0x4D 0xDA SWAP6 0xDC COINBASE SLT 0xCC 0xB2 DUP15 0xFC PUSH29 0x1063637D711AAAEFD996FB9EA84B6233E9D6FAF664736F6C634300081E STOP CALLER ",
							"sourceMap": "1710:8616:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6284:1155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2626:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2329;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2381:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9552:411;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2487:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5419:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2569:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4533:594;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7445:43;;;:::i;:::-;;2441:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9255:291;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2691:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5701:346;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4297:230;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5133:280;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6053:225;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9969:355;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6284:1155;6389:12;3382:1;3372:6;:11;3368:79;;3406:30;;;;;;;;;;;;;;3368:79;2500:21:7::1;:19;:21::i;:::-;6425:31:9::2;6459:20;6473:5;6459:13;:20::i;:::-;6425:54;;2734:4;6492:23;:43;6489:105;;6557:26;;;;;;;;;;;;;;6489:105;6604:34;6641:53;6663:16;6681:12;6641:21;:53::i;:::-;6604:90;;6770:23;2617:3;2670:2;6797:26;:46;;;;:::i;:::-;6796:72;;;;:::i;:::-;6770:98;;6940:31;7003:15;6974:26;:44;;;;:::i;:::-;6940:78;;7028:79;7046:16;7064:23;7089:5;7096:10;7028:17;:79::i;:::-;7146:41;7155:12;7169:5;7176:10;7146:8;:41::i;:::-;7198:30;7231:20;7245:5;7231:13;:20::i;:::-;7198:53;;7290:23;7264:22;:49;7261:121;;7335:36;;;;;;;;;;;;;;7261:121;7391:41;7421:10;7391:29;:41::i;:::-;6415:1024;;;;;2542:20:7::1;:18;:20::i;:::-;6284:1155:9::0;;;;:::o;2626:46::-;2670:2;2626:46;:::o;2329:::-;;;:::o;2381:54::-;2431:4;2381:54;:::o;9552:411::-;9622:33;9670:9;9681:1;9670:12;;9666:249;9687:18;:25;;;;9684:1;:28;9666:249;;;9732:13;9748:18;9767:1;9748:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9732:37;;9783:14;9800:21;:28;9822:5;9800:28;;;;;;;;;;;;;;;:35;9829:5;9800:35;;;;;;;;;;;;;;;;9783:52;;9878:26;9890:5;9897:6;9878:11;:26::i;:::-;9849:55;;;;;:::i;:::-;;;9718:197;;9714:3;;;;;:::i;:::-;;;;9666:249;;;;9552:411;;;:::o;2487:50::-;2535:2;2487:50;:::o;5419:276::-;2500:21:7;:19;:21::i;:::-;5531:17:9::1;3382:1;3372:6;:11:::0;3368:79:::1;;3406:30;;;;;;;;;;;;;;3368:79;5559:78:::2;5577:16;5595:17;5614:10;5626;5559:17;:78::i;:::-;5647:41;5677:10;5647:29;:41::i;:::-;2531:1:7::1;2542:20:::0;:18;:20::i;:::-;5419:276:9;;:::o;2569:51::-;2617:3;2569:51;:::o;4533:594::-;4649:17;3382:1;3372:6;:11;3368:79;;3406:30;;;;;;;;;;;;;;3368:79;4696:16:::1;3561:1;3529:34;;:12;:20;3542:6;3529:20;;;;;;;;;;;;;;;;;;;;;;;;;:34;;::::0;3525:100:::1;;3586:28;;;;;;;;;;;;;;3525:100;2500:21:7::2;:19;:21::i;:::-;4804:17:9::3;4749:21;:33;4771:10;4749:33;;;;;;;;;;;;;;;:51;4783:16;4749:51;;;;;;;;;;;;;;;;:72;;;;;;;:::i;:::-;;;;;;;;4831:12;4853:16;4846:37;;;4884:10;4904:4;4911:17;4846:83;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4831:98;;4944:7;4939:98;;5009:16;4974:52;;;;;;;;;;;:::i;:::-;;;;;;;;4939:98;5102:17;5084:16;5052:68;;5072:10;5052:68;;;;;;;;;;;;4739:388;2542:20:7::2;:18;:20::i;:::-;3456:1:9::1;4533:594:::0;;;:::o;7445:43::-;:::o;2441:40::-;2477:4;2441:40;:::o;9255:291::-;9346:7;9367:12;9410;:20;9423:6;9410:20;;;;;;;;;;;;;;;;;;;;;;;;;9388:59;;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9364:85;;;;;;2431:4;9506:5;9498:40;;;;:::i;:::-;2477:4;9467:14;:26;;;;:::i;:::-;9466:73;;;;:::i;:::-;9459:80;;;9255:291;;;;:::o;2691:47::-;2734:4;2691:47;:::o;5701:346::-;5764:16;3382:1;3372:6;:11;3368:79;;3406:30;;;;;;;;;;;;;;3368:79;2500:21:7::1;:19;:21::i;:::-;5831:16:9::2;5804:11;:23;5816:10;5804:23;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;5857:41;5887:10;5857:29;:41::i;:::-;5908:11;5922:5;:10;;;5933;5945:16;5922:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5908:54;;5976:6;5972:69;;6004:26;;;;;;;;;;;;;;5972:69;5794:253;2542:20:7::1;:18;:20::i;:::-;5701:346:9::0;;:::o;4297:230::-;4431:54;4449:16;4467:17;4431;:54::i;:::-;4495:25;4503:16;4495:7;:25::i;:::-;4297:230;;;:::o;5133:280::-;5263:25;5271:16;5263:7;:25::i;:::-;5298:53;5315:16;5333:17;5298:16;:53::i;:::-;5133:280;;;:::o;6053:225::-;6113:13;3382:1;3372:6;:11;3368:79;;3406:30;;;;;;;;;;;;;;3368:79;6137:46:::1;6146:13;6161:10;6172;6137:8;:46::i;:::-;6193:41;6223:10;6193:29;:41::i;:::-;6053:225:::0;;:::o;9969:355::-;10071:7;10055:6;3561:1;3529:34;;:12;:20;3542:6;3529:20;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;3525:100;;3586:28;;;;;;;;;;;;;;3525:100;10092:12:::1;10135;:20;10148:6;10135:20;;;;;;;;;;;;;;;;;;;;;;;;;10113:59;;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10089:85;;;;;;2477:4;10297:7;2431:4;10262:5;10254:40;;;;:::i;:::-;:50;;;;:::i;:::-;10253:64;;;;:::i;:::-;10246:71;;;9969:355:::0;;;;;:::o;2575:307:7:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;7765:365:9:-;7824:7;7844:22;7868:28;7900;7923:4;7900:22;:28::i;:::-;7843:85;;;;7938:35;2617:3;2535:2;7977:20;:44;;;;:::i;:::-;7976:70;;;;:::i;:::-;7938:108;;8108:14;2477:4;8065:27;:39;;;;:::i;:::-;8064:58;;;;:::i;:::-;8056:67;;;;;7765:365;;;:::o;8752:471::-;8928:17;8878:21;:28;8900:5;8878:28;;;;;;;;;;;;;;;:46;8907:16;8878:46;;;;;;;;;;;;;;;;:67;;;;;;;:::i;:::-;;;;;;;;8991:16;8960:67;;8986:3;8960:67;;8979:5;8960:67;;;9009:17;8960:67;;;;;;:::i;:::-;;;;;;;;9038:12;9060:16;9053:33;;;9087:3;9092:17;9053:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9038:72;;9125:7;9120:97;;9189:16;9155:51;;;;;;;;;;;:::i;:::-;;;;;;;;9120:97;8868:355;8752:471;;;;:::o;8403:343::-;8529:13;8501:11;:24;8513:11;8501:24;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;8552:12;8567:5;:18;;;8586:8;8604:4;8611:13;8567:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8552:73;;8639:7;8635:70;;8668:26;;;;;;;;;;;;;;8635:70;8714:5;:10;;;8725:13;8714:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8491:255;8403:343;;;:::o;8136:261::-;8214:24;8241:20;8255:5;8241:13;:20::i;:::-;8214:47;;2734:4;8275:16;:36;8271:120;;8363:16;8333:47;;;;;;;;;;;:::i;:::-;;;;;;;;8271:120;8204:193;8136:261;:::o;2888:208:7:-;1857:1;3068:7;:21;;;;2888:208::o;7494:265:9:-;7586:22;7610:28;7671:11;:17;7683:4;7671:17;;;;;;;;;;;;;;;;7654:34;;7721:31;7747:4;7721:25;:31::i;:::-;7698:54;;7494:265;;;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:619::-;1274:6;1282;1290;1339:2;1327:9;1318:7;1314:23;1310:32;1307:119;;;1345:79;;:::i;:::-;1307:119;1465:1;1490:53;1535:7;1526:6;1515:9;1511:22;1490:53;:::i;:::-;1480:63;;1436:117;1592:2;1618:53;1663:7;1654:6;1643:9;1639:22;1618:53;:::i;:::-;1608:63;;1563:118;1720:2;1746:53;1791:7;1782:6;1771:9;1767:22;1746:53;:::i;:::-;1736:63;;1691:118;1197:619;;;;;:::o;1822:118::-;1909:24;1927:5;1909:24;:::i;:::-;1904:3;1897:37;1822:118;;:::o;1946:222::-;2039:4;2077:2;2066:9;2062:18;2054:26;;2090:71;2158:1;2147:9;2143:17;2134:6;2090:71;:::i;:::-;1946:222;;;;:::o;2174:60::-;2202:3;2223:5;2216:12;;2174:60;;;:::o;2240:142::-;2290:9;2323:53;2341:34;2350:24;2368:5;2350:24;:::i;:::-;2341:34;:::i;:::-;2323:53;:::i;:::-;2310:66;;2240:142;;;:::o;2388:126::-;2438:9;2471:37;2502:5;2471:37;:::i;:::-;2458:50;;2388:126;;;:::o;2520:158::-;2602:9;2635:37;2666:5;2635:37;:::i;:::-;2622:50;;2520:158;;;:::o;2684:195::-;2803:69;2866:5;2803:69;:::i;:::-;2798:3;2791:82;2684:195;;:::o;2885:286::-;3010:4;3048:2;3037:9;3033:18;3025:26;;3061:103;3161:1;3150:9;3146:17;3137:6;3061:103;:::i;:::-;2885:286;;;;:::o;3177:329::-;3236:6;3285:2;3273:9;3264:7;3260:23;3256:32;3253:119;;;3291:79;;:::i;:::-;3253:119;3411:1;3436:53;3481:7;3472:6;3461:9;3457:22;3436:53;:::i;:::-;3426:63;;3382:117;3177:329;;;;:::o;3512:474::-;3580:6;3588;3637:2;3625:9;3616:7;3612:23;3608:32;3605:119;;;3643:79;;:::i;:::-;3605:119;3763:1;3788:53;3833:7;3824:6;3813:9;3809:22;3788:53;:::i;:::-;3778:63;;3734:117;3890:2;3916:53;3961:7;3952:6;3941:9;3937:22;3916:53;:::i;:::-;3906:63;;3861:118;3512:474;;;;;:::o;3992:329::-;4051:6;4100:2;4088:9;4079:7;4075:23;4071:32;4068:119;;;4106:79;;:::i;:::-;4068:119;4226:1;4251:53;4296:7;4287:6;4276:9;4272:22;4251:53;:::i;:::-;4241:63;;4197:117;3992:329;;;;:::o;4327:619::-;4404:6;4412;4420;4469:2;4457:9;4448:7;4444:23;4440:32;4437:119;;;4475:79;;:::i;:::-;4437:119;4595:1;4620:53;4665:7;4656:6;4645:9;4641:22;4620:53;:::i;:::-;4610:63;;4566:117;4722:2;4748:53;4793:7;4784:6;4773:9;4769:22;4748:53;:::i;:::-;4738:63;;4693:118;4850:2;4876:53;4921:7;4912:6;4901:9;4897:22;4876:53;:::i;:::-;4866:63;;4821:118;4327:619;;;;;:::o;4952:180::-;5000:77;4997:1;4990:88;5097:4;5094:1;5087:15;5121:4;5118:1;5111:15;5138:410;5178:7;5201:20;5219:1;5201:20;:::i;:::-;5196:25;;5235:20;5253:1;5235:20;:::i;:::-;5230:25;;5290:1;5287;5283:9;5312:30;5330:11;5312:30;:::i;:::-;5301:41;;5491:1;5482:7;5478:15;5475:1;5472:22;5452:1;5445:9;5425:83;5402:139;;5521:18;;:::i;:::-;5402:139;5186:362;5138:410;;;;:::o;5554:180::-;5602:77;5599:1;5592:88;5699:4;5696:1;5689:15;5723:4;5720:1;5713:15;5740:185;5780:1;5797:20;5815:1;5797:20;:::i;:::-;5792:25;;5831:20;5849:1;5831:20;:::i;:::-;5826:25;;5870:1;5860:35;;5875:18;;:::i;:::-;5860:35;5917:1;5914;5910:9;5905:14;;5740:185;;;;:::o;5931:191::-;5971:3;5990:20;6008:1;5990:20;:::i;:::-;5985:25;;6024:20;6042:1;6024:20;:::i;:::-;6019:25;;6067:1;6064;6060:9;6053:16;;6088:3;6085:1;6082:10;6079:36;;;6095:18;;:::i;:::-;6079:36;5931:191;;;;:::o;6128:180::-;6176:77;6173:1;6166:88;6273:4;6270:1;6263:15;6297:4;6294:1;6287:15;6314:233;6353:3;6376:24;6394:5;6376:24;:::i;:::-;6367:33;;6422:66;6415:5;6412:77;6409:103;;6492:18;;:::i;:::-;6409:103;6539:1;6532:5;6528:13;6521:20;;6314:233;;;:::o;6553:118::-;6640:24;6658:5;6640:24;:::i;:::-;6635:3;6628:37;6553:118;;:::o;6677:442::-;6826:4;6864:2;6853:9;6849:18;6841:26;;6877:71;6945:1;6934:9;6930:17;6921:6;6877:71;:::i;:::-;6958:72;7026:2;7015:9;7011:18;7002:6;6958:72;:::i;:::-;7040;7108:2;7097:9;7093:18;7084:6;7040:72;:::i;:::-;6677:442;;;;;;:::o;7125:90::-;7159:7;7202:5;7195:13;7188:21;7177:32;;7125:90;;;:::o;7221:116::-;7291:21;7306:5;7291:21;:::i;:::-;7284:5;7281:32;7271:60;;7327:1;7324;7317:12;7271:60;7221:116;:::o;7343:137::-;7397:5;7428:6;7422:13;7413:22;;7444:30;7468:5;7444:30;:::i;:::-;7343:137;;;;:::o;7486:345::-;7553:6;7602:2;7590:9;7581:7;7577:23;7573:32;7570:119;;;7608:79;;:::i;:::-;7570:119;7728:1;7753:61;7806:7;7797:6;7786:9;7782:22;7753:61;:::i;:::-;7743:71;;7699:125;7486:345;;;;:::o;7837:222::-;7930:4;7968:2;7957:9;7953:18;7945:26;;7981:71;8049:1;8038:9;8034:17;8025:6;7981:71;:::i;:::-;7837:222;;;;:::o;8065:105::-;8101:7;8141:22;8134:5;8130:34;8119:45;;8065:105;;;:::o;8176:120::-;8248:23;8265:5;8248:23;:::i;:::-;8241:5;8238:34;8228:62;;8286:1;8283;8276:12;8228:62;8176:120;:::o;8302:141::-;8358:5;8389:6;8383:13;8374:22;;8405:32;8431:5;8405:32;:::i;:::-;8302:141;;;;:::o;8449:76::-;8485:7;8514:5;8503:16;;8449:76;;;:::o;8531:120::-;8603:23;8620:5;8603:23;:::i;:::-;8596:5;8593:34;8583:62;;8641:1;8638;8631:12;8583:62;8531:120;:::o;8657:141::-;8713:5;8744:6;8738:13;8729:22;;8760:32;8786:5;8760:32;:::i;:::-;8657:141;;;;:::o;8804:143::-;8861:5;8892:6;8886:13;8877:22;;8908:33;8935:5;8908:33;:::i;:::-;8804:143;;;;:::o;8953:971::-;9056:6;9064;9072;9080;9088;9137:3;9125:9;9116:7;9112:23;9108:33;9105:120;;;9144:79;;:::i;:::-;9105:120;9264:1;9289:63;9344:7;9335:6;9324:9;9320:22;9289:63;:::i;:::-;9279:73;;9235:127;9401:2;9427:63;9482:7;9473:6;9462:9;9458:22;9427:63;:::i;:::-;9417:73;;9372:128;9539:2;9565:64;9621:7;9612:6;9601:9;9597:22;9565:64;:::i;:::-;9555:74;;9510:129;9678:2;9704:64;9760:7;9751:6;9740:9;9736:22;9704:64;:::i;:::-;9694:74;;9649:129;9817:3;9844:63;9899:7;9890:6;9879:9;9875:22;9844:63;:::i;:::-;9834:73;;9788:129;8953:971;;;;;;;;:::o;9930:332::-;10051:4;10089:2;10078:9;10074:18;10066:26;;10102:71;10170:1;10159:9;10155:17;10146:6;10102:71;:::i;:::-;10183:72;10251:2;10240:9;10236:18;10227:6;10183:72;:::i;:::-;9930:332;;;;;:::o;10268:194::-;10308:4;10328:20;10346:1;10328:20;:::i;:::-;10323:25;;10362:20;10380:1;10362:20;:::i;:::-;10357:25;;10406:1;10403;10399:9;10391:17;;10430:1;10424:4;10421:11;10418:37;;;10435:18;;:::i;:::-;10418:37;10268:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1269200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADDITION_FEED_PRECISION()": "415",
								"LIQUIDATION_BONUS()": "371",
								"LIQUIDATION_PRECISION()": "414",
								"LIQUIDATION_THRESHOLD()": "370",
								"MIN_HEALT_FACTOR()": "414",
								"PRECISION()": "370",
								"burnDsc(uint256)": "infinite",
								"depositCollateral(address,uint256)": "infinite",
								"depositCollateralAndMintDsc(address,uint256,uint256)": "infinite",
								"getAccountCollateralValue(address)": "2802",
								"getHealthFactor()": "166",
								"getTokenAmountFromUsd(address,uint256)": "infinite",
								"getUSDValue(address,uint256)": "infinite",
								"i_dsc()": "infinite",
								"liquidate(address,address,uint256)": "infinite",
								"mintDsc(uint256)": "infinite",
								"redeemCollateral(address,uint256)": "infinite",
								"redeemCollateralForDsc(address,uint256,uint256)": "infinite"
							},
							"internal": {
								"_burnDsc(uint256,address,address)": "infinite",
								"_getAccountInformation(address)": "4411",
								"_healthFactor(address)": "infinite",
								"_redeemCollateral(address,uint256,address,address)": "infinite",
								"_revertIfHealthFactorIsBroken(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1710,
									"end": 10326,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3648,
									"end": 4291,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2068,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3816,
									"end": 3826,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3816,
									"end": 3833,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3789,
									"end": 3805,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3789,
									"end": 3812,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3789,
									"end": 3833,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3785,
									"end": 3931,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3856,
									"end": 3920,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3856,
									"end": 3920,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3856,
									"end": 3920,
									"name": "PUSH",
									"source": 9,
									"value": "B5C5C12600000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3856,
									"end": 3920,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3856,
									"end": 3920,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3856,
									"end": 3920,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3856,
									"end": 3920,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3856,
									"end": 3920,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3856,
									"end": 3920,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3856,
									"end": 3920,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3856,
									"end": 3920,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3856,
									"end": 3920,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3856,
									"end": 3920,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3856,
									"end": 3920,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 3931,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3785,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3967,
									"end": 3968,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3944,
									"end": 3969,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3944,
									"end": 3969,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3944,
									"end": 3955,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3944,
									"end": 3969,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3944,
									"end": 3969,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3944,
									"end": 3969,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3940,
									"end": 4036,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 3940,
									"end": 4036,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4025,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3992,
									"end": 4025,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4025,
									"name": "PUSH",
									"source": 9,
									"value": "EF8F9DD100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3992,
									"end": 4025,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4025,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4025,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3992,
									"end": 4025,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4025,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3992,
									"end": 4025,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4025,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4025,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4025,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4025,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4025,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3940,
									"end": 4036,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 3940,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4050,
									"end": 4059,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4062,
									"end": 4063,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4050,
									"end": 4063,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4050,
									"end": 4063,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4045,
									"end": 4231,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 4045,
									"end": 4231,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4069,
									"end": 4085,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4069,
									"end": 4092,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4065,
									"end": 4066,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4065,
									"end": 4092,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4045,
									"end": 4231,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4045,
									"end": 4231,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 4045,
									"end": 4231,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4149,
									"end": 4159,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4160,
									"end": 4161,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 4149,
									"end": 4162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4149,
									"end": 4162,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4125,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4126,
									"end": 4142,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4143,
									"end": 4144,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 4126,
									"end": 4145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4146,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4162,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4194,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 4200,
									"end": 4216,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4217,
									"end": 4218,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 4200,
									"end": 4219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4200,
									"end": 4219,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4176,
									"end": 4220,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4097,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4097,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4097,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4094,
									"end": 4097,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4097,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4097,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4097,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4045,
									"end": 4231,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 4045,
									"end": 4231,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4045,
									"end": 4231,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 4045,
									"end": 4231,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4045,
									"end": 4231,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4272,
									"end": 4283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4240,
									"end": 4284,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4240,
									"end": 4284,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4240,
									"end": 4284,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 4240,
									"end": 4284,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4240,
									"end": 4284,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4240,
									"end": 4284,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4240,
									"end": 4284,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4240,
									"end": 4284,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4240,
									"end": 4284,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4240,
									"end": 4284,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 4291,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1009,
									"end": 1015,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1060,
									"end": 1062,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1056,
									"end": 1063,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1051,
									"end": 1053,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1049,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1040,
									"end": 1054,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1036,
									"end": 1064,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1026,
									"end": 1064,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1026,
									"end": 1064,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 968,
									"end": 1070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1076,
									"end": 1256,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1076,
									"end": 1256,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1124,
									"end": 1201,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1121,
									"end": 1122,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1114,
									"end": 1202,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1221,
									"end": 1225,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1218,
									"end": 1219,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1211,
									"end": 1226,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 1249,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1242,
									"end": 1243,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 1250,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 1367,
									"end": 1371,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1345,
									"end": 1372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1337,
									"end": 1343,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1333,
									"end": 1373,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1475,
									"end": 1481,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1463,
									"end": 1473,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1460,
									"end": 1482,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1439,
									"end": 1457,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1427,
									"end": 1437,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1424,
									"end": 1458,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1421,
									"end": 1483,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1486,
									"end": 1504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1526,
									"end": 1536,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1522,
									"end": 1524,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1515,
									"end": 1537,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1305,
									"end": 1543,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1262,
									"end": 1543,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1583,
									"end": 1589,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1610,
									"end": 1630,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1600,
									"end": 1630,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1600,
									"end": 1630,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1667,
									"end": 1671,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1659,
									"end": 1665,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1639,
									"end": 1672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1549,
									"end": 1678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1684,
									"end": 1995,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 1684,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1765,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1851,
									"end": 1869,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1843,
									"end": 1849,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1840,
									"end": 1870,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1837,
									"end": 1893,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1837,
									"end": 1893,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 1837,
									"end": 1893,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1873,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1873,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1873,
									"end": 1891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1873,
									"end": 1891,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1873,
									"end": 1891,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1837,
									"end": 1893,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 1837,
									"end": 1893,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1923,
									"end": 1927,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1915,
									"end": 1921,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1911,
									"end": 1928,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1928,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1928,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1977,
									"end": 1981,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1973,
									"end": 1988,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1965,
									"end": 1988,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1965,
									"end": 1988,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1684,
									"end": 1995,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1684,
									"end": 1995,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1684,
									"end": 1995,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1684,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2001,
									"end": 2118,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 2001,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2110,
									"end": 2111,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2107,
									"end": 2108,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2100,
									"end": 2112,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2248,
									"end": 2253,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2346,
									"end": 2352,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 2289,
									"end": 2353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 2273,
									"end": 2354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2374,
									"end": 2379,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2403,
									"end": 2409,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2396,
									"end": 2401,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2389,
									"end": 2410,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2437,
									"end": 2441,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2430,
									"end": 2435,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2426,
									"end": 2442,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2490,
									"end": 2494,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2482,
									"end": 2488,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2478,
									"end": 2495,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2470,
									"end": 2476,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2466,
									"end": 2496,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2519,
									"end": 2522,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2508,
									"end": 2523,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 2538,
									"end": 2617,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2670,
									"end": 2676,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2665,
									"end": 2668,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2662,
									"end": 2677,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2745,
									"end": 2748,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 2818,
									"end": 2821,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 2806,
									"end": 2816,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 2774,
									"end": 2822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2769,
									"end": 2772,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2762,
									"end": 2823,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2847,
									"end": 2850,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2843,
									"end": 2857,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2712,
									"end": 2867,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2691,
									"end": 2694,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 2701,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2640,
									"end": 2661,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2141,
									"end": 2873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2978,
									"end": 2983,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3027,
									"end": 3030,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3020,
									"end": 3024,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 3012,
									"end": 3018,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3008,
									"end": 3025,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3004,
									"end": 3031,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 3035,
									"end": 3114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3139,
									"end": 3152,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3263,
									"end": 3269,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3256,
									"end": 3260,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3248,
									"end": 3254,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3244,
									"end": 3261,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 3170,
									"end": 3275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2984,
									"end": 3281,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2896,
									"end": 3281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3287,
									"end": 4356,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 3287,
									"end": 4356,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3425,
									"end": 3431,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3433,
									"end": 3439,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3441,
									"end": 3447,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3490,
									"end": 3492,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 3478,
									"end": 3487,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3469,
									"end": 3476,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3465,
									"end": 3488,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 3461,
									"end": 3493,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 3458,
									"end": 3577,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3458,
									"end": 3577,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 3458,
									"end": 3577,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3496,
									"end": 3575,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 3496,
									"end": 3575,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 3496,
									"end": 3575,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3496,
									"end": 3575,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 3496,
									"end": 3575,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3458,
									"end": 3577,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 3458,
									"end": 3577,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3616,
									"end": 3617,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3641,
									"end": 3705,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3697,
									"end": 3704,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3688,
									"end": 3694,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3677,
									"end": 3686,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3673,
									"end": 3695,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3641,
									"end": 3705,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 3641,
									"end": 3705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3641,
									"end": 3705,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3641,
									"end": 3705,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3705,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3705,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3587,
									"end": 3715,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3775,
									"end": 3777,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3764,
									"end": 3773,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3760,
									"end": 3778,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3754,
									"end": 3779,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3806,
									"end": 3824,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3798,
									"end": 3804,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3795,
									"end": 3825,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3792,
									"end": 3909,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3792,
									"end": 3909,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 3792,
									"end": 3909,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3828,
									"end": 3907,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 3828,
									"end": 3907,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3828,
									"end": 3907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3828,
									"end": 3907,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 3828,
									"end": 3907,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3792,
									"end": 3909,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 3792,
									"end": 3909,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3933,
									"end": 4022,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 4014,
									"end": 4021,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4005,
									"end": 4011,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3994,
									"end": 4003,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3990,
									"end": 4012,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3933,
									"end": 4022,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 3933,
									"end": 4022,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3933,
									"end": 4022,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 3933,
									"end": 4022,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3923,
									"end": 4022,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3923,
									"end": 4022,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3725,
									"end": 4032,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4092,
									"end": 4094,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4081,
									"end": 4090,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4077,
									"end": 4095,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4071,
									"end": 4096,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4123,
									"end": 4141,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4115,
									"end": 4121,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4112,
									"end": 4142,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 4109,
									"end": 4226,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4109,
									"end": 4226,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 4109,
									"end": 4226,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4145,
									"end": 4224,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 4145,
									"end": 4224,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4145,
									"end": 4224,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4145,
									"end": 4224,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 4145,
									"end": 4224,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4109,
									"end": 4226,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 4109,
									"end": 4226,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4250,
									"end": 4339,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 4331,
									"end": 4338,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4322,
									"end": 4328,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4311,
									"end": 4320,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 4307,
									"end": 4329,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4250,
									"end": 4339,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 4250,
									"end": 4339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4250,
									"end": 4339,
									"name": "tag",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 4250,
									"end": 4339,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4240,
									"end": 4339,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4240,
									"end": 4339,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4042,
									"end": 4349,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3287,
									"end": 4356,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3287,
									"end": 4356,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3287,
									"end": 4356,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3287,
									"end": 4356,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3287,
									"end": 4356,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3287,
									"end": 4356,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4362,
									"end": 4542,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 4362,
									"end": 4542,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4410,
									"end": 4487,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4407,
									"end": 4408,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4400,
									"end": 4488,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4507,
									"end": 4511,
									"name": "PUSH",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 4504,
									"end": 4505,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 4497,
									"end": 4512,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4531,
									"end": 4535,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4528,
									"end": 4529,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4521,
									"end": 4536,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "1137"
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 10326,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be4dda95dc4112ccb28efc7c1063637d711aaaefd996fb9ea84b6233e9d6faf664736f6c634300081e0033",
									".code": [
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "A5F352B7"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "C9B7C327"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "C9B7C327"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "E90DB8A3"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "F419EA9C"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "F6876608"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "FA76DCF2"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "A5F352B7"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "AAF5EB68"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "AFEA2E48"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "C601676C"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "7D1A4450"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "7D1A4450"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "90A8AE9B"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "9ACD81B3"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "9D45AC89"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "A5D5DB0C"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "26C01303"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "3574D4C4"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "5E338BB3"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "65079D77"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 10326,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 6284,
											"end": 7439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 6284,
											"end": 7439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2626,
											"end": 2672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2626,
											"end": 2672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2329,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 2329,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2381,
											"end": 2435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2381,
											"end": 2435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 9552,
											"end": 9963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 9552,
											"end": 9963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 9552,
											"end": 9963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2487,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2487,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 5419,
											"end": 5695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5419,
											"end": 5695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 2569,
											"end": 2620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2569,
											"end": 2620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 4533,
											"end": 5127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4533,
											"end": 5127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 7445,
											"end": 7488,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7445,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7445,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 7445,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 7445,
											"end": 7488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7445,
											"end": 7488,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 7445,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7445,
											"end": 7488,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2441,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 9255,
											"end": 9546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9255,
											"end": 9546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 9255,
											"end": 9546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2691,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2691,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 5701,
											"end": 6047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 5701,
											"end": 6047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 4297,
											"end": 4527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 4297,
											"end": 4527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 5133,
											"end": 5413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 5133,
											"end": 5413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 6053,
											"end": 6278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6053,
											"end": 6278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 9969,
											"end": 10324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 9969,
											"end": 10324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 9969,
											"end": 10324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6389,
											"end": 6401,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3378,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3383,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "CB1D3F7D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2500,
											"end": 2519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6479,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 6473,
											"end": 6478,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6459,
											"end": 6472,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 6459,
											"end": 6479,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6459,
											"end": 6479,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 6459,
											"end": 6479,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6425,
											"end": 6479,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6425,
											"end": 6479,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2738,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6492,
											"end": 6515,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6492,
											"end": 6535,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6594,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 6489,
											"end": 6594,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6583,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6557,
											"end": 6583,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6583,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4DC824BA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6557,
											"end": 6583,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6583,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6583,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6557,
											"end": 6583,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6583,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6557,
											"end": 6583,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6583,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6583,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6583,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6583,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6583,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6594,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 6489,
											"end": 6594,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6604,
											"end": 6638,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6641,
											"end": 6694,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 6663,
											"end": 6679,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6681,
											"end": 6693,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6641,
											"end": 6662,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6641,
											"end": 6694,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6641,
											"end": 6694,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 6641,
											"end": 6694,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6604,
											"end": 6694,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6604,
											"end": 6694,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6793,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2620,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2670,
											"end": 2672,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6797,
											"end": 6823,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6843,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 6797,
											"end": 6843,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6843,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6843,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 6797,
											"end": 6843,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6843,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 6797,
											"end": 6843,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6868,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 6796,
											"end": 6868,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6868,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6868,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6796,
											"end": 6868,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6868,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 6796,
											"end": 6868,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6868,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6868,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6940,
											"end": 6971,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7003,
											"end": 7018,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6974,
											"end": 7000,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6974,
											"end": 7018,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 6974,
											"end": 7018,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6974,
											"end": 7018,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6974,
											"end": 7018,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 6974,
											"end": 7018,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6974,
											"end": 7018,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 6974,
											"end": 7018,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6940,
											"end": 7018,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6940,
											"end": 7018,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7107,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 7046,
											"end": 7062,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7064,
											"end": 7087,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7089,
											"end": 7094,
											"modifierDepth": 2,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 7096,
											"end": 7106,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7045,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 7028,
											"end": 7107,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7107,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 7028,
											"end": 7107,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7146,
											"end": 7187,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 7155,
											"end": 7167,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7169,
											"end": 7174,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 7186,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7146,
											"end": 7154,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 7146,
											"end": 7187,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7146,
											"end": 7187,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 7146,
											"end": 7187,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7198,
											"end": 7228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7231,
											"end": 7251,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 7245,
											"end": 7250,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7244,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 7231,
											"end": 7251,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7251,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 7231,
											"end": 7251,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7198,
											"end": 7251,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7198,
											"end": 7251,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7290,
											"end": 7313,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7264,
											"end": 7286,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7264,
											"end": 7313,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7382,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 7261,
											"end": 7382,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7335,
											"end": 7371,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7335,
											"end": 7371,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7335,
											"end": 7371,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "7C28362000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7335,
											"end": 7371,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7335,
											"end": 7371,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7335,
											"end": 7371,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7335,
											"end": 7371,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7335,
											"end": 7371,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7335,
											"end": 7371,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7335,
											"end": 7371,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7335,
											"end": 7371,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7335,
											"end": 7371,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7335,
											"end": 7371,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7335,
											"end": 7371,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7382,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 7261,
											"end": 7382,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7391,
											"end": 7432,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 7421,
											"end": 7431,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7391,
											"end": 7420,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 7391,
											"end": 7432,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7391,
											"end": 7432,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 7391,
											"end": 7432,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6415,
											"end": 7439,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6415,
											"end": 7439,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6415,
											"end": 7439,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6415,
											"end": 7439,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6415,
											"end": 7439,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2542,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 7439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2672,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 2626,
											"end": 2672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1137"
										},
										{
											"begin": 2329,
											"end": 2375,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2435,
											"name": "PUSH",
											"source": 9,
											"value": "2540BE400"
										},
										{
											"begin": 2381,
											"end": 2435,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9622,
											"end": 9655,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9681,
											"end": 9682,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9682,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9670,
											"end": 9682,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 9915,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 9666,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9687,
											"end": 9705,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9687,
											"end": 9712,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9687,
											"end": 9712,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9687,
											"end": 9712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9687,
											"end": 9712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9684,
											"end": 9685,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9684,
											"end": 9712,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 9915,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 9666,
											"end": 9915,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9732,
											"end": 9745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9748,
											"end": 9766,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9767,
											"end": 9768,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 9748,
											"end": 9769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9748,
											"end": 9769,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9732,
											"end": 9769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9732,
											"end": 9769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9783,
											"end": 9797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9800,
											"end": 9821,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9822,
											"end": 9827,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9800,
											"end": 9828,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9829,
											"end": 9834,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9800,
											"end": 9835,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9783,
											"end": 9835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9783,
											"end": 9835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 9904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 9890,
											"end": 9895,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9897,
											"end": 9903,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 9878,
											"end": 9904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 9904,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 9878,
											"end": 9904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9849,
											"end": 9904,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9849,
											"end": 9904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 9849,
											"end": 9904,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9849,
											"end": 9904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9849,
											"end": 9904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 9849,
											"end": 9904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9849,
											"end": 9904,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 9849,
											"end": 9904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9849,
											"end": 9904,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9849,
											"end": 9904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9718,
											"end": 9915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9718,
											"end": 9915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9714,
											"end": 9717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9714,
											"end": 9717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9714,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 9714,
											"end": 9717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9714,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 9714,
											"end": 9717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9714,
											"end": 9717,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 9714,
											"end": 9717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9714,
											"end": 9717,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9714,
											"end": 9717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9714,
											"end": 9717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 9666,
											"end": 9915,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 9915,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 9666,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 9915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2537,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2487,
											"end": 2537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5531,
											"end": 5548,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3378,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3383,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3368,
											"end": 3447,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3436,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "CB1D3F7D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3406,
											"end": 3436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3436,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3368,
											"end": 3447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5637,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5577,
											"end": 5593,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5595,
											"end": 5612,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5624,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5636,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5576,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 5559,
											"end": 5637,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5637,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5559,
											"end": 5637,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5688,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 5677,
											"end": 5687,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5676,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5647,
											"end": 5688,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5688,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 5647,
											"end": 5688,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2617,
											"end": 2620,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2569,
											"end": 2620,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4649,
											"end": 4666,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3378,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3383,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "CB1D3F7D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4696,
											"end": 4712,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3561,
											"end": 3562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3548,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3525,
											"end": 3625,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A802CFBE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3525,
											"end": 3625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2500,
											"end": 2519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4821,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4770,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4781,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4782,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4799,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4800,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 4749,
											"end": 4821,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4821,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4831,
											"end": 4843,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4853,
											"end": 4869,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4883,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4846,
											"end": 4883,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4883,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 4884,
											"end": 4894,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4904,
											"end": 4908,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4911,
											"end": 4928,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4846,
											"end": 4929,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 4846,
											"end": 4929,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 4846,
											"end": 4929,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4831,
											"end": 4929,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4831,
											"end": 4929,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4944,
											"end": 4951,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4939,
											"end": 5037,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4939,
											"end": 5037,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5025,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "BC3FE12700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 4974,
											"end": 5026,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5026,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4939,
											"end": 5037,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4939,
											"end": 5037,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5119,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5084,
											"end": 5100,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5052,
											"end": 5120,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5052,
											"end": 5120,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5072,
											"end": 5082,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5052,
											"end": 5120,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5052,
											"end": 5120,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5052,
											"end": 5120,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "F1C0DD7E9B98BBFF859029005EF89B127AF049CD18DF1A8D79F0B7E019911E56"
										},
										{
											"begin": 5052,
											"end": 5120,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5052,
											"end": 5120,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5052,
											"end": 5120,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5052,
											"end": 5120,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5052,
											"end": 5120,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5052,
											"end": 5120,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5052,
											"end": 5120,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5052,
											"end": 5120,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5052,
											"end": 5120,
											"modifierDepth": 3,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 5127,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2542,
											"end": 2560,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3457,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 5127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7445,
											"end": 7488,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 7445,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7445,
											"end": 7488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2481,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2441,
											"end": 2481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9346,
											"end": 9353,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9367,
											"end": 9379,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9422,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9423,
											"end": 9429,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9447,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9388,
											"end": 9447,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9447,
											"name": "PUSH",
											"source": 9,
											"value": "FEAF968C"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 9388,
											"end": 9449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 9388,
											"end": 9449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9364,
											"end": 9449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9364,
											"end": 9449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9364,
											"end": 9449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9364,
											"end": 9449,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9364,
											"end": 9449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9364,
											"end": 9449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2435,
											"name": "PUSH",
											"source": 9,
											"value": "2540BE400"
										},
										{
											"begin": 9506,
											"end": 9511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9498,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 9498,
											"end": 9538,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9498,
											"end": 9538,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9498,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 9498,
											"end": 9538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9498,
											"end": 9538,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 9498,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2481,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9467,
											"end": 9481,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9467,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 9467,
											"end": 9493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9467,
											"end": 9493,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9467,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 9467,
											"end": 9493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9467,
											"end": 9493,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 9467,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 9466,
											"end": 9539,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9539,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9466,
											"end": 9539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9539,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 9466,
											"end": 9539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9459,
											"end": 9539,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9459,
											"end": 9539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9459,
											"end": 9539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2738,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5764,
											"end": 5780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3378,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3383,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "CB1D3F7D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2500,
											"end": 2519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5831,
											"end": 5847,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5815,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5826,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 5804,
											"end": 5847,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5847,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5857,
											"end": 5898,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 5887,
											"end": 5897,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5857,
											"end": 5886,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5857,
											"end": 5898,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5857,
											"end": 5898,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 5857,
											"end": 5898,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5908,
											"end": 5919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5927,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1137"
										},
										{
											"begin": 5922,
											"end": 5932,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5922,
											"end": 5932,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5932,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 5933,
											"end": 5943,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5945,
											"end": 5961,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 5922,
											"end": 5962,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 5922,
											"end": 5962,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 5922,
											"end": 5962,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5908,
											"end": 5962,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5908,
											"end": 5962,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5976,
											"end": 5982,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5972,
											"end": 6041,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 5972,
											"end": 6041,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6004,
											"end": 6030,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6004,
											"end": 6030,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6004,
											"end": 6030,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6F4E810B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6004,
											"end": 6030,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6004,
											"end": 6030,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6004,
											"end": 6030,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6004,
											"end": 6030,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6004,
											"end": 6030,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6004,
											"end": 6030,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6004,
											"end": 6030,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6004,
											"end": 6030,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6004,
											"end": 6030,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6004,
											"end": 6030,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6004,
											"end": 6030,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5972,
											"end": 6041,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 5972,
											"end": 6041,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5794,
											"end": 6047,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2542,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 6047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 4449,
											"end": 4465,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4467,
											"end": 4484,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4431,
											"end": 4485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4485,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 4431,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 4503,
											"end": 4519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 4495,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4495,
											"end": 4520,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 4495,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5263,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5271,
											"end": 5287,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 5263,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5263,
											"end": 5288,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5263,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 5315,
											"end": 5331,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5333,
											"end": 5350,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5298,
											"end": 5351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5351,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 5298,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6126,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3378,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3383,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "CB1D3F7D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3436,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6137,
											"end": 6183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 6146,
											"end": 6159,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6161,
											"end": 6171,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6182,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6137,
											"end": 6145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 6137,
											"end": 6183,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6137,
											"end": 6183,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 6137,
											"end": 6183,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 6223,
											"end": 6233,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 6193,
											"end": 6234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 6193,
											"end": 6234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10071,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10055,
											"end": 10061,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3561,
											"end": 3562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3541,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3549,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3563,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 3525,
											"end": 3625,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "PUSH",
											"source": 9,
											"value": "A802CFBE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3625,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 3525,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10092,
											"end": 10104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10135,
											"end": 10147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10148,
											"end": 10154,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10135,
											"end": 10155,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10113,
											"end": 10172,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FEAF968C"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 10113,
											"end": 10174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 10113,
											"end": 10174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10089,
											"end": 10174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10089,
											"end": 10174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10089,
											"end": 10174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10089,
											"end": 10174,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10089,
											"end": 10174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10089,
											"end": 10174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 10297,
											"end": 10304,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2540BE400"
										},
										{
											"begin": 10262,
											"end": 10267,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10254,
											"end": 10294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 10254,
											"end": 10294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10254,
											"end": 10294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10254,
											"end": 10294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 10254,
											"end": 10294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10254,
											"end": 10294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 10254,
											"end": 10294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10254,
											"end": 10304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 10254,
											"end": 10304,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10254,
											"end": 10304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10254,
											"end": 10304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 10254,
											"end": 10304,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10254,
											"end": 10304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 10254,
											"end": 10304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10253,
											"end": 10317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 10253,
											"end": 10317,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10253,
											"end": 10317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10253,
											"end": 10317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10253,
											"end": 10317,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10253,
											"end": 10317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 10253,
											"end": 10317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10246,
											"end": 10317,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10246,
											"end": 10317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10246,
											"end": 10317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7765,
											"end": 8130,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 7765,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7824,
											"end": 7831,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7868,
											"end": 7896,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 7923,
											"end": 7927,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7900,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 7900,
											"end": 7928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7900,
											"end": 7928,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 7900,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7843,
											"end": 7928,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7843,
											"end": 7928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7843,
											"end": 7928,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7843,
											"end": 7928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7938,
											"end": 7973,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2620,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2535,
											"end": 2537,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 7977,
											"end": 7997,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7977,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 7977,
											"end": 8021,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7977,
											"end": 8021,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7977,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 7977,
											"end": 8021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7977,
											"end": 8021,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 7977,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7976,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 7976,
											"end": 8046,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7976,
											"end": 8046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7976,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7976,
											"end": 8046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7976,
											"end": 8046,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 7976,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7938,
											"end": 8046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7938,
											"end": 8046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8108,
											"end": 8122,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2481,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8065,
											"end": 8092,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8065,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 8065,
											"end": 8104,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8065,
											"end": 8104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8065,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 8065,
											"end": 8104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8065,
											"end": 8104,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 8065,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8064,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 8064,
											"end": 8122,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8064,
											"end": 8122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8064,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8064,
											"end": 8122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8064,
											"end": 8122,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 8064,
											"end": 8122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8123,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 8130,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 8130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 8130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 8130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8752,
											"end": 9223,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 8752,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8928,
											"end": 8945,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8899,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8900,
											"end": 8905,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8878,
											"end": 8906,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8907,
											"end": 8923,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 8878,
											"end": 8945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8991,
											"end": 9007,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 8989,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8979,
											"end": 8984,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "PUSH",
											"source": 9,
											"value": "B292DB12B8DFA23B760EE5E3BD1D3BE184CD8F0EEEACD27CE120D4DE4E4721F6"
										},
										{
											"begin": 9009,
											"end": 9026,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 8960,
											"end": 9027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8960,
											"end": 9027,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 9038,
											"end": 9050,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9060,
											"end": 9076,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9086,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9053,
											"end": 9086,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9086,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 9087,
											"end": 9090,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9092,
											"end": 9109,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 9053,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 9053,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 9053,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9038,
											"end": 9110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9038,
											"end": 9110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9125,
											"end": 9132,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9120,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 9120,
											"end": 9217,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9189,
											"end": 9205,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "PUSH",
											"source": 9,
											"value": "2851F43200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 9155,
											"end": 9206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9206,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9120,
											"end": 9217,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 9120,
											"end": 9217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8868,
											"end": 9223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8752,
											"end": 9223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8752,
											"end": 9223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8752,
											"end": 9223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8752,
											"end": 9223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8752,
											"end": 9223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8746,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 8403,
											"end": 8746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8542,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8512,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8513,
											"end": 8524,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8525,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 8501,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8552,
											"end": 8564,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8567,
											"end": 8572,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1137"
										},
										{
											"begin": 8567,
											"end": 8585,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8567,
											"end": 8585,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8585,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 8586,
											"end": 8594,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 8608,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 8611,
											"end": 8624,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 8567,
											"end": 8625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 8567,
											"end": 8625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 8567,
											"end": 8625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8552,
											"end": 8625,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8552,
											"end": 8625,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8639,
											"end": 8646,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8635,
											"end": 8705,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 8635,
											"end": 8705,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8668,
											"end": 8694,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8668,
											"end": 8694,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8668,
											"end": 8694,
											"name": "PUSH",
											"source": 9,
											"value": "3A29AC6D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8668,
											"end": 8694,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8668,
											"end": 8694,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8668,
											"end": 8694,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8668,
											"end": 8694,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8668,
											"end": 8694,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8668,
											"end": 8694,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8668,
											"end": 8694,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8668,
											"end": 8694,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8668,
											"end": 8694,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8668,
											"end": 8694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8668,
											"end": 8694,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8635,
											"end": 8705,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 8635,
											"end": 8705,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8719,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1137"
										},
										{
											"begin": 8714,
											"end": 8724,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8714,
											"end": 8724,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8724,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 8725,
											"end": 8738,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 8714,
											"end": 8739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8714,
											"end": 8739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8491,
											"end": 8746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8397,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 8136,
											"end": 8397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8238,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 8255,
											"end": 8260,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 8241,
											"end": 8261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8241,
											"end": 8261,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 8241,
											"end": 8261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8261,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2738,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8275,
											"end": 8291,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8275,
											"end": 8311,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8363,
											"end": 8379,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "E580CC6100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 8333,
											"end": 8380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8380,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 8271,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8204,
											"end": 8397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7494,
											"end": 7759,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 7494,
											"end": 7759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7608,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7671,
											"end": 7682,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7683,
											"end": 7687,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7654,
											"end": 7688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7654,
											"end": 7688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7721,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 7747,
											"end": 7751,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7721,
											"end": 7746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 7721,
											"end": 7752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7721,
											"end": 7752,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 7721,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7698,
											"end": 7752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7698,
											"end": 7752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7494,
											"end": 7759,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7494,
											"end": 7759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7494,
											"end": 7759,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7494,
											"end": 7759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1288,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1341,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1327,
											"end": 1336,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1325,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1337,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1310,
											"end": 1342,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 1345,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1515,
											"end": 1524,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1511,
											"end": 1533,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 1490,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1436,
											"end": 1553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 1663,
											"end": 1670,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1643,
											"end": 1652,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 1618,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1563,
											"end": 1681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 1791,
											"end": 1798,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1782,
											"end": 1788,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1789,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 1746,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1691,
											"end": 1809,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1822,
											"end": 1940,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 1822,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1909,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 1927,
											"end": 1932,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1909,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 1909,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1909,
											"end": 1933,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 1909,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1904,
											"end": 1907,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1897,
											"end": 1934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1822,
											"end": 1940,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1822,
											"end": 1940,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1822,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1946,
											"end": 2168,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1946,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2043,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2079,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2062,
											"end": 2080,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2054,
											"end": 2080,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2054,
											"end": 2080,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2090,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 2158,
											"end": 2159,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2147,
											"end": 2156,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2160,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2090,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 2090,
											"end": 2161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2090,
											"end": 2161,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 2090,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1946,
											"end": 2168,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1946,
											"end": 2168,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1946,
											"end": 2168,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1946,
											"end": 2168,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1946,
											"end": 2168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2174,
											"end": 2234,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 2174,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2202,
											"end": 2205,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2228,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2174,
											"end": 2234,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2174,
											"end": 2234,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2174,
											"end": 2234,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2174,
											"end": 2234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2240,
											"end": 2382,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 2240,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2290,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 2341,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 2350,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 2368,
											"end": 2373,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2350,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 2350,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2350,
											"end": 2374,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 2350,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2341,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 2341,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2341,
											"end": 2375,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 2341,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2323,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 2323,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2323,
											"end": 2376,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 2323,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2376,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2376,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2240,
											"end": 2382,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2240,
											"end": 2382,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2240,
											"end": 2382,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2240,
											"end": 2382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2514,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 2388,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2438,
											"end": 2447,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 2502,
											"end": 2507,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2471,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 2471,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2471,
											"end": 2508,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 2471,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2458,
											"end": 2508,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2458,
											"end": 2508,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2514,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2514,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2514,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2678,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 2520,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2602,
											"end": 2611,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 2666,
											"end": 2671,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2635,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 2635,
											"end": 2672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2635,
											"end": 2672,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 2635,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2672,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2622,
											"end": 2672,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2678,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2678,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2879,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 2684,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 2866,
											"end": 2871,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 2803,
											"end": 2872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2872,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 2803,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2798,
											"end": 2801,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2791,
											"end": 2873,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2879,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2879,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 3171,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 2885,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3014,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3050,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3037,
											"end": 3046,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3025,
											"end": 3051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3025,
											"end": 3051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3061,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3159,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3146,
											"end": 3163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3137,
											"end": 3143,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3061,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 3061,
											"end": 3164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3061,
											"end": 3164,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 3061,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 3171,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 3171,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 3171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 3171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 3171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3506,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 3177,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3236,
											"end": 3242,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3287,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3273,
											"end": 3282,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3271,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3283,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3256,
											"end": 3288,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3291,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3291,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 3291,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3291,
											"end": 3370,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3291,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3411,
											"end": 3412,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3478,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3461,
											"end": 3470,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3457,
											"end": 3479,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 3436,
											"end": 3489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3489,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3489,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3382,
											"end": 3499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3506,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3506,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3506,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3506,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3512,
											"end": 3986,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 3512,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3580,
											"end": 3586,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3588,
											"end": 3594,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3639,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3625,
											"end": 3634,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 3623,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3635,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3608,
											"end": 3640,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3605,
											"end": 3724,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3605,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 3605,
											"end": 3724,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3643,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 3643,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 3643,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3643,
											"end": 3722,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 3643,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3605,
											"end": 3724,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 3605,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3764,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 3833,
											"end": 3840,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3822,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3831,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3788,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 3788,
											"end": 3841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3788,
											"end": 3841,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 3788,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3841,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3841,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3734,
											"end": 3851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3916,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 3961,
											"end": 3968,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 3958,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 3950,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 3959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 3916,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3969,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 3916,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3906,
											"end": 3969,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3906,
											"end": 3969,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3861,
											"end": 3979,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3512,
											"end": 3986,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3512,
											"end": 3986,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3512,
											"end": 3986,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3512,
											"end": 3986,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3512,
											"end": 3986,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3512,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3992,
											"end": 4321,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 3992,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4051,
											"end": 4057,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4102,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4088,
											"end": 4097,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4079,
											"end": 4086,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4075,
											"end": 4098,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4071,
											"end": 4103,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4187,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 4068,
											"end": 4187,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 4106,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 4106,
											"end": 4185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4185,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 4106,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4187,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 4068,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4227,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4251,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 4296,
											"end": 4303,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4276,
											"end": 4285,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4272,
											"end": 4294,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4251,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4251,
											"end": 4304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4251,
											"end": 4304,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 4251,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4241,
											"end": 4304,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4241,
											"end": 4304,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4197,
											"end": 4314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3992,
											"end": 4321,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3992,
											"end": 4321,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3992,
											"end": 4321,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3992,
											"end": 4321,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3992,
											"end": 4321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4946,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 4327,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4404,
											"end": 4410,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4418,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4426,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4471,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4457,
											"end": 4466,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 4455,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4444,
											"end": 4467,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4472,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4556,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 4437,
											"end": 4556,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4475,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 4475,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 4475,
											"end": 4554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4475,
											"end": 4554,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 4475,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4556,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 4437,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4595,
											"end": 4596,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 4665,
											"end": 4672,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 4662,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4645,
											"end": 4654,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4641,
											"end": 4663,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4620,
											"end": 4673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4673,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 4620,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4610,
											"end": 4673,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4610,
											"end": 4673,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4683,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4722,
											"end": 4724,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 4793,
											"end": 4800,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4784,
											"end": 4790,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4782,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4769,
											"end": 4791,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4748,
											"end": 4801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 4748,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4738,
											"end": 4801,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4738,
											"end": 4801,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4693,
											"end": 4811,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4850,
											"end": 4852,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 4921,
											"end": 4928,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4910,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4897,
											"end": 4919,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4876,
											"end": 4929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 4876,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4866,
											"end": 4929,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4866,
											"end": 4929,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4821,
											"end": 4939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4946,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4946,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4946,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4946,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4946,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4952,
											"end": 5132,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 4952,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5077,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4997,
											"end": 4998,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 5078,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5097,
											"end": 5101,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5094,
											"end": 5095,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5087,
											"end": 5102,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5125,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5118,
											"end": 5119,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5111,
											"end": 5126,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5548,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 5138,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5185,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 5219,
											"end": 5220,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5201,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 5201,
											"end": 5221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5201,
											"end": 5221,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 5201,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5196,
											"end": 5221,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5196,
											"end": 5221,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5235,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 5253,
											"end": 5254,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5235,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 5235,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5235,
											"end": 5255,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 5235,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5230,
											"end": 5255,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5230,
											"end": 5255,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5290,
											"end": 5291,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5287,
											"end": 5288,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5283,
											"end": 5292,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5312,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 5330,
											"end": 5341,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5312,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 5312,
											"end": 5342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5312,
											"end": 5342,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 5312,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5342,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5342,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5491,
											"end": 5492,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5482,
											"end": 5489,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5493,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5475,
											"end": 5476,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5472,
											"end": 5494,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5452,
											"end": 5453,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5425,
											"end": 5508,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5402,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 5402,
											"end": 5541,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5521,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 5521,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 5521,
											"end": 5539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5521,
											"end": 5539,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 5521,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5402,
											"end": 5541,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 5402,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5548,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5548,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5554,
											"end": 5734,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 5554,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5602,
											"end": 5679,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5599,
											"end": 5600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5592,
											"end": 5680,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5699,
											"end": 5703,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 5696,
											"end": 5697,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5689,
											"end": 5704,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5723,
											"end": 5727,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5720,
											"end": 5721,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5728,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5925,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5740,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 5815,
											"end": 5816,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 5797,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5792,
											"end": 5817,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5792,
											"end": 5817,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5831,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 5849,
											"end": 5850,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5831,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 5831,
											"end": 5851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5831,
											"end": 5851,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 5831,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5826,
											"end": 5851,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5826,
											"end": 5851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5870,
											"end": 5871,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5860,
											"end": 5895,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 5860,
											"end": 5895,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 5875,
											"end": 5893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5860,
											"end": 5895,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 5860,
											"end": 5895,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5917,
											"end": 5918,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5914,
											"end": 5915,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5919,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5905,
											"end": 5919,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5905,
											"end": 5919,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5925,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5925,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5931,
											"end": 6122,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 5931,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5971,
											"end": 5974,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 6008,
											"end": 6009,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5990,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 5990,
											"end": 6010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5990,
											"end": 6010,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 5990,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5985,
											"end": 6010,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5985,
											"end": 6010,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 6042,
											"end": 6043,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 6024,
											"end": 6044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 6024,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6019,
											"end": 6044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6067,
											"end": 6068,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6064,
											"end": 6065,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6069,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6053,
											"end": 6069,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6053,
											"end": 6069,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6088,
											"end": 6091,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6085,
											"end": 6086,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6092,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6079,
											"end": 6115,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6079,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 6079,
											"end": 6115,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6095,
											"end": 6113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 6095,
											"end": 6113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 6095,
											"end": 6113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6095,
											"end": 6113,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 6095,
											"end": 6113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6079,
											"end": 6115,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 6079,
											"end": 6115,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5931,
											"end": 6122,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5931,
											"end": 6122,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5931,
											"end": 6122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5931,
											"end": 6122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5931,
											"end": 6122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6128,
											"end": 6308,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 6128,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6176,
											"end": 6253,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6173,
											"end": 6174,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6166,
											"end": 6254,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6273,
											"end": 6277,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 6270,
											"end": 6271,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6263,
											"end": 6278,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6297,
											"end": 6301,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6294,
											"end": 6295,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6302,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6547,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 6314,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6353,
											"end": 6356,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6376,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 6394,
											"end": 6399,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6376,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 6376,
											"end": 6400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6376,
											"end": 6400,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 6376,
											"end": 6400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6400,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6422,
											"end": 6488,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6415,
											"end": 6420,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6412,
											"end": 6489,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6409,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 6409,
											"end": 6512,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 6492,
											"end": 6510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6409,
											"end": 6512,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 6409,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6539,
											"end": 6540,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6532,
											"end": 6537,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6528,
											"end": 6541,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6521,
											"end": 6541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6521,
											"end": 6541,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6547,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6547,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6547,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6671,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 6553,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6640,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 6658,
											"end": 6663,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6640,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 6640,
											"end": 6664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6640,
											"end": 6664,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 6640,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6635,
											"end": 6638,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6628,
											"end": 6665,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6677,
											"end": 7119,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 6677,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6826,
											"end": 6830,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6866,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6853,
											"end": 6862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6849,
											"end": 6867,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6841,
											"end": 6867,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6841,
											"end": 6867,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6877,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 6945,
											"end": 6946,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6943,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6930,
											"end": 6947,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6877,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 6877,
											"end": 6948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6877,
											"end": 6948,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 6877,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6958,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 7026,
											"end": 7028,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7011,
											"end": 7029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7002,
											"end": 7008,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6958,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 6958,
											"end": 7030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6958,
											"end": 7030,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 6958,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7040,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 7108,
											"end": 7110,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7097,
											"end": 7106,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7111,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7084,
											"end": 7090,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7040,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 7040,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7040,
											"end": 7112,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 7040,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6677,
											"end": 7119,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6677,
											"end": 7119,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6677,
											"end": 7119,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6677,
											"end": 7119,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6677,
											"end": 7119,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6677,
											"end": 7119,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6677,
											"end": 7119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7125,
											"end": 7215,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 7125,
											"end": 7215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7166,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7202,
											"end": 7207,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7195,
											"end": 7208,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7188,
											"end": 7209,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7177,
											"end": 7209,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7177,
											"end": 7209,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7125,
											"end": 7215,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7125,
											"end": 7215,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7125,
											"end": 7215,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7125,
											"end": 7215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7221,
											"end": 7337,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 7221,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7291,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 7306,
											"end": 7311,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7291,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 7291,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7291,
											"end": 7312,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 7291,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7284,
											"end": 7289,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7313,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 7271,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 7271,
											"end": 7331,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7327,
											"end": 7328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7324,
											"end": 7325,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7329,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7271,
											"end": 7331,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 7271,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7221,
											"end": 7337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7221,
											"end": 7337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7343,
											"end": 7480,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 7343,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7397,
											"end": 7402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7434,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7422,
											"end": 7435,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7413,
											"end": 7435,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7413,
											"end": 7435,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 7468,
											"end": 7473,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 7444,
											"end": 7474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7474,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 7444,
											"end": 7474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7343,
											"end": 7480,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7343,
											"end": 7480,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7343,
											"end": 7480,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7343,
											"end": 7480,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7343,
											"end": 7480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7831,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 7486,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7559,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7602,
											"end": 7604,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7590,
											"end": 7599,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7581,
											"end": 7588,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7577,
											"end": 7600,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7573,
											"end": 7605,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7570,
											"end": 7689,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7570,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 7570,
											"end": 7689,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7608,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 7608,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 7608,
											"end": 7687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7608,
											"end": 7687,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 7608,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7570,
											"end": 7689,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 7570,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7728,
											"end": 7729,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7753,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 7806,
											"end": 7813,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7804,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 7753,
											"end": 7814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7814,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 7753,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7743,
											"end": 7814,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7743,
											"end": 7814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7699,
											"end": 7824,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7831,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7831,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7831,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7831,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7837,
											"end": 8059,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 7837,
											"end": 8059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7930,
											"end": 7934,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7968,
											"end": 7970,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7953,
											"end": 7971,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7945,
											"end": 7971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7945,
											"end": 7971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7981,
											"end": 8052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 8049,
											"end": 8050,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8038,
											"end": 8047,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8034,
											"end": 8051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8025,
											"end": 8031,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7981,
											"end": 8052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 7981,
											"end": 8052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7981,
											"end": 8052,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 7981,
											"end": 8052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7837,
											"end": 8059,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7837,
											"end": 8059,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7837,
											"end": 8059,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7837,
											"end": 8059,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7837,
											"end": 8059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8065,
											"end": 8170,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 8065,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8101,
											"end": 8108,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8141,
											"end": 8163,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8134,
											"end": 8139,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8164,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8119,
											"end": 8164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8119,
											"end": 8164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8065,
											"end": 8170,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8065,
											"end": 8170,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8065,
											"end": 8170,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8065,
											"end": 8170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8176,
											"end": 8296,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 8176,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8248,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 8265,
											"end": 8270,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8248,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 8248,
											"end": 8271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8248,
											"end": 8271,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 8248,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8241,
											"end": 8246,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8238,
											"end": 8272,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 8228,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 8228,
											"end": 8290,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8286,
											"end": 8287,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8284,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8276,
											"end": 8288,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8228,
											"end": 8290,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 8228,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8176,
											"end": 8296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8176,
											"end": 8296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8302,
											"end": 8443,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 8302,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8358,
											"end": 8363,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8389,
											"end": 8395,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8383,
											"end": 8396,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8374,
											"end": 8396,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8374,
											"end": 8396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8405,
											"end": 8437,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 8431,
											"end": 8436,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8405,
											"end": 8437,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 8405,
											"end": 8437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8405,
											"end": 8437,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 8405,
											"end": 8437,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8302,
											"end": 8443,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8302,
											"end": 8443,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8302,
											"end": 8443,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8302,
											"end": 8443,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8302,
											"end": 8443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8449,
											"end": 8525,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 8449,
											"end": 8525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8485,
											"end": 8492,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8514,
											"end": 8519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8503,
											"end": 8519,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8503,
											"end": 8519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8449,
											"end": 8525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8449,
											"end": 8525,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8449,
											"end": 8525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8449,
											"end": 8525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8531,
											"end": 8651,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 8531,
											"end": 8651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8603,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 8620,
											"end": 8625,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8603,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 8603,
											"end": 8626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8603,
											"end": 8626,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 8603,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8596,
											"end": 8601,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8593,
											"end": 8627,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 8583,
											"end": 8645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 8583,
											"end": 8645,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8641,
											"end": 8642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8638,
											"end": 8639,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8631,
											"end": 8643,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8583,
											"end": 8645,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 8583,
											"end": 8645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8531,
											"end": 8651,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8531,
											"end": 8651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8657,
											"end": 8798,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 8657,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8713,
											"end": 8718,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8744,
											"end": 8750,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8738,
											"end": 8751,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8729,
											"end": 8751,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8729,
											"end": 8751,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8760,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 8786,
											"end": 8791,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8760,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 8760,
											"end": 8792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8760,
											"end": 8792,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 8760,
											"end": 8792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8657,
											"end": 8798,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8657,
											"end": 8798,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8657,
											"end": 8798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8657,
											"end": 8798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8657,
											"end": 8798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8804,
											"end": 8947,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 8804,
											"end": 8947,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8861,
											"end": 8866,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8892,
											"end": 8898,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8886,
											"end": 8899,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8877,
											"end": 8899,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8877,
											"end": 8899,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8908,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 8935,
											"end": 8940,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8908,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 8908,
											"end": 8941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8908,
											"end": 8941,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 8908,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8804,
											"end": 8947,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8804,
											"end": 8947,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8804,
											"end": 8947,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8804,
											"end": 8947,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8804,
											"end": 8947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8953,
											"end": 9924,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 8953,
											"end": 9924,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9064,
											"end": 9070,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9072,
											"end": 9078,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9080,
											"end": 9086,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9088,
											"end": 9094,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9137,
											"end": 9140,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 9125,
											"end": 9134,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9116,
											"end": 9123,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9112,
											"end": 9135,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9108,
											"end": 9141,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9105,
											"end": 9225,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9105,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 9105,
											"end": 9225,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9144,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 9144,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 9144,
											"end": 9223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9144,
											"end": 9223,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 9144,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9105,
											"end": 9225,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 9105,
											"end": 9225,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9264,
											"end": 9265,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9289,
											"end": 9352,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 9344,
											"end": 9351,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9341,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9324,
											"end": 9333,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9342,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9289,
											"end": 9352,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 9289,
											"end": 9352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9289,
											"end": 9352,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 9289,
											"end": 9352,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9279,
											"end": 9352,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 9279,
											"end": 9352,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9235,
											"end": 9362,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9401,
											"end": 9403,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9427,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 9482,
											"end": 9489,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9473,
											"end": 9479,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9462,
											"end": 9471,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 9458,
											"end": 9480,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9427,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 9427,
											"end": 9490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9427,
											"end": 9490,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 9427,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9417,
											"end": 9490,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9417,
											"end": 9490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9500,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9539,
											"end": 9541,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9565,
											"end": 9629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 9621,
											"end": 9628,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9612,
											"end": 9618,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9601,
											"end": 9610,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 9597,
											"end": 9619,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9565,
											"end": 9629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 9565,
											"end": 9629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9565,
											"end": 9629,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 9565,
											"end": 9629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9555,
											"end": 9629,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9555,
											"end": 9629,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9510,
											"end": 9639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9678,
											"end": 9680,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9704,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 9760,
											"end": 9767,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9751,
											"end": 9757,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9740,
											"end": 9749,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 9736,
											"end": 9758,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9704,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 9704,
											"end": 9768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9704,
											"end": 9768,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 9704,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9694,
											"end": 9768,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9694,
											"end": 9768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9649,
											"end": 9778,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9817,
											"end": 9820,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 9844,
											"end": 9907,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 9899,
											"end": 9906,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9890,
											"end": 9896,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9879,
											"end": 9888,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 9875,
											"end": 9897,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9907,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 9844,
											"end": 9907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9907,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 9844,
											"end": 9907,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9834,
											"end": 9907,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9834,
											"end": 9907,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9788,
											"end": 9917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8953,
											"end": 9924,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8953,
											"end": 9924,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8953,
											"end": 9924,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8953,
											"end": 9924,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8953,
											"end": 9924,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8953,
											"end": 9924,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8953,
											"end": 9924,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8953,
											"end": 9924,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8953,
											"end": 9924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 10262,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 9930,
											"end": 10262,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10051,
											"end": 10055,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10089,
											"end": 10091,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10078,
											"end": 10087,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10074,
											"end": 10092,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10066,
											"end": 10092,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10066,
											"end": 10092,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 10170,
											"end": 10171,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10168,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10155,
											"end": 10172,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10146,
											"end": 10152,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 10102,
											"end": 10173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10173,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 10102,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10183,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 10251,
											"end": 10253,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10236,
											"end": 10254,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10227,
											"end": 10233,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10183,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 10183,
											"end": 10255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10183,
											"end": 10255,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 10183,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 10262,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 10262,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 10262,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 10262,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 10262,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 10262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10268,
											"end": 10462,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 10268,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10308,
											"end": 10312,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10328,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 10346,
											"end": 10347,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10328,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 10328,
											"end": 10348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10328,
											"end": 10348,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 10328,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10323,
											"end": 10348,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10323,
											"end": 10348,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10362,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 10380,
											"end": 10381,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10362,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 10362,
											"end": 10382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10362,
											"end": 10382,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 10362,
											"end": 10382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10357,
											"end": 10382,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10357,
											"end": 10382,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10406,
											"end": 10407,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10403,
											"end": 10404,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10399,
											"end": 10408,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10391,
											"end": 10408,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10391,
											"end": 10408,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10430,
											"end": 10431,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10424,
											"end": 10428,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10421,
											"end": 10432,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10418,
											"end": 10455,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10418,
											"end": 10455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 10418,
											"end": 10455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 10435,
											"end": 10453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 10435,
											"end": 10453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10453,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 10435,
											"end": 10453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10418,
											"end": 10455,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 10418,
											"end": 10455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10268,
											"end": 10462,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10268,
											"end": 10462,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10268,
											"end": 10462,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10268,
											"end": 10462,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10268,
											"end": 10462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"lib/localDependencies/AggregatorV3Interface.sol",
								"src/DSCEngine.sol",
								"src/DecentralizedStableCoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADDITION_FEED_PRECISION()": "65079d77",
							"LIQUIDATION_BONUS()": "3574d4c4",
							"LIQUIDATION_PRECISION()": "9d45ac89",
							"LIQUIDATION_THRESHOLD()": "90a8ae9b",
							"MIN_HEALT_FACTOR()": "c601676c",
							"PRECISION()": "aaf5eb68",
							"burnDsc(uint256)": "f6876608",
							"depositCollateral(address,uint256)": "a5d5db0c",
							"depositCollateralAndMintDsc(address,uint256,uint256)": "e90db8a3",
							"getAccountCollateralValue(address)": "7d1a4450",
							"getHealthFactor()": "a5f352b7",
							"getTokenAmountFromUsd(address,uint256)": "afea2e48",
							"getUSDValue(address,uint256)": "fa76dcf2",
							"i_dsc()": "5e338bb3",
							"liquidate(address,address,uint256)": "26c01303",
							"mintDsc(uint256)": "c9b7c327",
							"redeemCollateral(address,uint256)": "9acd81b3",
							"redeemCollateralForDsc(address,uint256,uint256)": "f419ea9c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dscAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokenCollateral\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_priceFeed\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userHealthFactor\",\"type\":\"uint256\"}],\"name\":\"DSCEngine__BreaksHealthFactor\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"}],\"name\":\"DSCEngine__CollateralDepositFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenCollateral\",\"type\":\"address\"}],\"name\":\"DSCEngine__CollateralRedeemFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DSCEngine__DscAddressCantBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DSCEngine__DscBurnFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DSCEngine__DscMintFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DSCEngine__HealthFactorNotImproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DSCEngine__NeedsMoreThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DSCEngine__NotAllowedToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DSCEngine__TokenAddressesAndPriceFeedAddressesMustBeSameLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DSGEngine__HealtFactorOk\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenCollateral\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemeFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemeTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenCollateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralRedeemed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDITION_FEED_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDATION_BONUS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDATION_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDATION_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_HEALT_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountToBurn\",\"type\":\"uint256\"}],\"name\":\"burnDsc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenCollateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenCollateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountDscToMint\",\"type\":\"uint256\"}],\"name\":\"depositCollateralAndMintDsc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAccountCollateralValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralValueInUsd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHealthFactor\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"usdAmountInWei\",\"type\":\"uint256\"}],\"name\":\"getTokenAmountFromUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getUSDValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_dsc\",\"outputs\":[{\"internalType\":\"contract DecentralizedStableCoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenCollateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_debtToCover\",\"type\":\"uint256\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountDscToMint\",\"type\":\"uint256\"}],\"name\":\"mintDsc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenCollateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"}],\"name\":\"redeemCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenCollateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountDscToBurn\",\"type\":\"uint256\"}],\"name\":\"redeemCollateralForDsc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DSCEngine.sol\":\"DSCEngine\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"lib/localDependencies/AggregatorV3Interface.sol\":{\"keccak256\":\"0x134de4a121de5d7bf96256a7e08fd2f9079487123ea140ac33409533640de01f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2389849c289b0d6f2e150ba6171982d0bf485a5f279e1f25a98524b9ff57a492\",\"dweb:/ipfs/QmZYf4Y6PnkfTpYMjg4rGfUcdgjQ8AWJnkThwqpce5t2Jz\"]},\"src/DSCEngine.sol\":{\"keccak256\":\"0x44e0cc9a8175b240a8f72901daa3ca6617cf7fb452c020aee671f112550647ca\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9a5dcde73820fee5f74fc4385b6eff209566d6634ca479c34dcaee18797ac840\",\"dweb:/ipfs/QmRraiF5ZEZUChHBd8A1mPM9Lt1gFKrUPadBhwf8x8qv5Y\"]},\"src/DecentralizedStableCoin.sol\":{\"keccak256\":\"0x4a3e802d9667cbd25836b5e05a60f689dd8d3abe68772cea10cf661b672fe139\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://aa433a27ca82c4d0a313b24ca7e8cd3798e87fe3464b6c53c88ae4d0c4e8da01\",\"dweb:/ipfs/QmdhKNYk5PvqQ5J5GFHScNJDGVHPeL7msZwuwukqKXHFW2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 990,
								"contract": "src/DSCEngine.sol:DSCEngine",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1159,
								"contract": "src/DSCEngine.sol:DSCEngine",
								"label": "s_priceFeeds",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1165,
								"contract": "src/DSCEngine.sol:DSCEngine",
								"label": "s_collateralDeposited",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1169,
								"contract": "src/DSCEngine.sol:DSCEngine",
								"label": "s_DscMinted",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1172,
								"contract": "src/DSCEngine.sol:DSCEngine",
								"label": "s_collateralTokens",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/DecentralizedStableCoin.sol": {
				"DecentralizedStableCoin": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "DecentralizedStableCoin__AmountMustBeMoreThanZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DecentralizedStableCoin__BurnAmountExceedsBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DecentralizedStableCoin__NotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/DecentralizedStableCoin.sol\":655:1731  contract DecentralizedStableCoin is ERC20Burnable, Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"src/DecentralizedStableCoin.sol\":906:980  constructor() ERC20(\"DecentralizedStableCoin\", \"DSC\")Ownable(msg.sender){} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"src/DecentralizedStableCoin.sol\":967:977  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x17\n  dup2\n  mstore\n  0x20\n  add\n  0x446563656e7472616c697a6564537461626c65436f696e000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4453430000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"src/DecentralizedStableCoin.sol\":655:1731  contract DecentralizedStableCoin is ERC20Burnable, Ownable{... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_18:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_19:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_20:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_21:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_46:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_48\n  tag_20\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":714:798   */\ntag_47:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_22:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_23:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_24:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_25:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_53\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_24\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1429:1468   */\n  tag_54\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_24\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_26:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_27:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_28:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_58\n    /* \"#utility.yul\":1818:1852   */\n  tag_59\n    /* \"#utility.yul\":1827:1851   */\n  tag_60\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1818:1852   */\n  tag_27\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1800:1853   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_29:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_30:\n    /* \"#utility.yul\":2056:2095   */\n  tag_63\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2117:2208   */\n  tag_64\n    /* \"#utility.yul\":2166:2207   */\n  tag_65\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_25\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_31:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_32:\n    /* \"#utility.yul\":2377:2409   */\n  tag_68\n  tag_31\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2418:2483   */\n  tag_69\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_30\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_33:\n    /* \"#utility.yul\":2555:2675   */\ntag_71:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_74\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_32\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_71)\ntag_73:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_34:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_77\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2906:2935   */\n  tag_78\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_23\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_79:\n    /* \"#utility.yul\":3133:3213   */\n  tag_80\n    /* \"#utility.yul\":3189:3211   */\n  tag_81\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_23\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_33\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_76:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_35:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_36:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_84\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_35\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_37:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_86\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_36\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_88\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_18\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_90\n  tag_19\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4038:4094   */\ntag_89:\n    /* \"#utility.yul\":4118:4156   */\n  tag_91\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_21\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4203:4270   */\n  tag_92\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_34\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_94\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_95:\n    /* \"#utility.yul\":5144:5211   */\n  tag_96\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_37\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_93)\n    /* \"#utility.yul\":4365:4983   */\ntag_94:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_97\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_22\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_98:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_98)\ntag_100:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_102\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_36\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_101:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_93:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_38:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_39:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_105\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_38\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_40:\n    /* \"#utility.yul\":5555:5579   */\n  tag_107\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_39\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_109\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_40\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/DecentralizedStableCoin.sol\":655:1731  contract DecentralizedStableCoin is ERC20Burnable, Ownable{... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/DecentralizedStableCoin.sol\":655:1731  contract DecentralizedStableCoin is ERC20Burnable, Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x23b872dd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DecentralizedStableCoin.sol\":1372:1728  function mint (address _to, uint256 _amount) public onlyOwner returns(bool){... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/DecentralizedStableCoin.sol\":988:1364  function burn(uint256 _amount) public override onlyOwner {... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_83\n      jump\t// in\n    tag_84:\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_86\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_85)\n    tag_86:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_87:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_87\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"src/DecentralizedStableCoin.sol\":1372:1728  function mint (address _to, uint256 _amount) public onlyOwner returns(bool){... */\n    tag_46:\n        /* \"src/DecentralizedStableCoin.sol\":1442:1446  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_102:\n        /* \"src/DecentralizedStableCoin.sol\":1477:1478  0 */\n      0x00\n        /* \"src/DecentralizedStableCoin.sol\":1462:1479  _to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/DecentralizedStableCoin.sol\":1462:1465  _to */\n      dup4\n        /* \"src/DecentralizedStableCoin.sol\":1462:1479  _to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/DecentralizedStableCoin.sol\":1458:1556  if (_to == address(0)) {... */\n      tag_105\n      jumpi\n        /* \"src/DecentralizedStableCoin.sol\":1503:1544  DecentralizedStableCoin__NotZeroAddress() */\n      mload(0x40)\n      0xf3c190e900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DecentralizedStableCoin.sol\":1458:1556  if (_to == address(0)) {... */\n    tag_105:\n        /* \"src/DecentralizedStableCoin.sol\":1581:1582  0 */\n      0x00\n        /* \"src/DecentralizedStableCoin.sol\":1570:1577  _amount */\n      dup3\n        /* \"src/DecentralizedStableCoin.sol\":1570:1582  _amount <= 0 */\n      gt\n        /* \"src/DecentralizedStableCoin.sol\":1566:1669  if (_amount <= 0) {... */\n      tag_106\n      jumpi\n        /* \"src/DecentralizedStableCoin.sol\":1606:1657  DecentralizedStableCoin__AmountMustBeMoreThanZero() */\n      mload(0x40)\n      0xae8ba12300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DecentralizedStableCoin.sol\":1566:1669  if (_amount <= 0) {... */\n    tag_106:\n        /* \"src/DecentralizedStableCoin.sol\":1679:1698  _mint(_to, _amount) */\n      tag_107\n        /* \"src/DecentralizedStableCoin.sol\":1685:1688  _to */\n      dup4\n        /* \"src/DecentralizedStableCoin.sol\":1690:1697  _amount */\n      dup4\n        /* \"src/DecentralizedStableCoin.sol\":1679:1684  _mint */\n      tag_108\n        /* \"src/DecentralizedStableCoin.sol\":1679:1698  _mint(_to, _amount) */\n      jump\t// in\n    tag_107:\n        /* \"src/DecentralizedStableCoin.sol\":1716:1720  true */\n      0x01\n        /* \"src/DecentralizedStableCoin.sol\":1709:1720  return true */\n      swap1\n      pop\n        /* \"src/DecentralizedStableCoin.sol\":1372:1728  function mint (address _to, uint256 _amount) public onlyOwner returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/DecentralizedStableCoin.sol\":988:1364  function burn(uint256 _amount) public override onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_110:\n        /* \"src/DecentralizedStableCoin.sol\":1056:1071  uint256 balance */\n      0x00\n        /* \"src/DecentralizedStableCoin.sol\":1074:1095  balanceOf(msg.sender) */\n      tag_112\n        /* \"src/DecentralizedStableCoin.sol\":1084:1094  msg.sender */\n      caller\n        /* \"src/DecentralizedStableCoin.sol\":1074:1083  balanceOf */\n      tag_55\n        /* \"src/DecentralizedStableCoin.sol\":1074:1095  balanceOf(msg.sender) */\n      jump\t// in\n    tag_112:\n        /* \"src/DecentralizedStableCoin.sol\":1056:1095  uint256 balance = balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"src/DecentralizedStableCoin.sol\":1121:1122  0 */\n      0x00\n        /* \"src/DecentralizedStableCoin.sol\":1110:1117  _amount */\n      dup3\n        /* \"src/DecentralizedStableCoin.sol\":1110:1122  _amount <= 0 */\n      gt\n        /* \"src/DecentralizedStableCoin.sol\":1106:1209  if (_amount <= 0) {... */\n      tag_113\n      jumpi\n        /* \"src/DecentralizedStableCoin.sol\":1146:1197  DecentralizedStableCoin__AmountMustBeMoreThanZero() */\n      mload(0x40)\n      0xae8ba12300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DecentralizedStableCoin.sol\":1106:1209  if (_amount <= 0) {... */\n    tag_113:\n        /* \"src/DecentralizedStableCoin.sol\":1233:1240  _amount */\n      dup2\n        /* \"src/DecentralizedStableCoin.sol\":1223:1230  balance */\n      dup2\n        /* \"src/DecentralizedStableCoin.sol\":1223:1240  balance < _amount */\n      lt\n        /* \"src/DecentralizedStableCoin.sol\":1219:1327  if (balance < _amount) {... */\n      iszero\n      tag_114\n      jumpi\n        /* \"src/DecentralizedStableCoin.sol\":1264:1315  DecentralizedStableCoin__BurnAmountExceedsBalance() */\n      mload(0x40)\n      0xfe9c6abb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/DecentralizedStableCoin.sol\":1219:1327  if (balance < _amount) {... */\n    tag_114:\n        /* \"src/DecentralizedStableCoin.sol\":1337:1356  super.burn(_amount) */\n      tag_115\n        /* \"src/DecentralizedStableCoin.sol\":1348:1355  _amount */\n      dup3\n        /* \"src/DecentralizedStableCoin.sol\":1337:1347  super.burn */\n      tag_116\n        /* \"src/DecentralizedStableCoin.sol\":1337:1356  super.burn(_amount) */\n      jump\t// in\n    tag_115:\n        /* \"src/DecentralizedStableCoin.sol\":1045:1364  {... */\n      pop\n        /* \"src/DecentralizedStableCoin.sol\":988:1364  function burn(uint256 _amount) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_130\n      swap1\n      tag_83\n      jump\t// in\n    tag_130:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_83\n      jump\t// in\n    tag_131:\n      dup1\n      iszero\n      tag_132\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_133\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_132)\n    tag_133:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_134:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_134\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7977:7978  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7965  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8029:8030  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8002:8032  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8067  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8077:8078  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8081:8086  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8059  _update */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_187\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_192)\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_196)\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_197\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_198:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_199:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_200:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_201:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_202:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_227\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_198\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":711:782   */\n      tag_228\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_199\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_229\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_200\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":881:910   */\n      tag_230\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_201\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_24:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_232\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_202\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_204:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_206:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_207:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_238\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_206\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_208:\n        /* \"#utility.yul\":1876:1900   */\n      tag_240\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_207\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_241\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_241:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_209:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_243\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_208\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_210:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_211:\n        /* \"#utility.yul\":2232:2256   */\n      tag_246\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_210\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_247:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_212:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_249\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_211\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_27:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_252\n      tag_204\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2525:2644   */\n    tag_251:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_253\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_209\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_254\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_212\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_213:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_214:\n        /* \"#utility.yul\":3089:3110   */\n      tag_257\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_213\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_30:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_259\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_214\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_215:\n        /* \"#utility.yul\":3426:3450   */\n      tag_261\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_210\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_34:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_263\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_215\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_37:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_266\n      tag_204\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3801:3920   */\n    tag_265:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_267\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_209\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_268\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_209\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_269\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_212\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_216:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_217:\n        /* \"#utility.yul\":4491:4513   */\n      tag_272\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_216\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_43:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_274\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_217\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_50:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_277\n      tag_204\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4822:4941   */\n    tag_276:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_278\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_212\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_54:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_281\n      tag_204\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":5157:5276   */\n    tag_280:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_282\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_209\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_218:\n        /* \"#utility.yul\":5503:5527   */\n      tag_284\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_207\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_65:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_286\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_218\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_75:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      0x00\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_289\n      tag_204\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":5861:5980   */\n    tag_288:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_290\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_209\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_291\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_209\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_219:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_83:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_294:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_296\n      tag_219\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":6664:6748   */\n    tag_295:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:7202   */\n    tag_154:\n        /* \"#utility.yul\":6909:6913   */\n      0x00\n        /* \"#utility.yul\":6947:6949   */\n      0x60\n        /* \"#utility.yul\":6936:6945   */\n      dup3\n        /* \"#utility.yul\":6932:6950   */\n      add\n        /* \"#utility.yul\":6924:6950   */\n      swap1\n      pop\n        /* \"#utility.yul\":6960:7031   */\n      tag_298\n        /* \"#utility.yul\":7028:7029   */\n      0x00\n        /* \"#utility.yul\":7017:7026   */\n      dup4\n        /* \"#utility.yul\":7013:7030   */\n      add\n        /* \"#utility.yul\":7004:7010   */\n      dup7\n        /* \"#utility.yul\":6960:7031   */\n      tag_218\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":7041:7113   */\n      tag_299\n        /* \"#utility.yul\":7109:7111   */\n      0x20\n        /* \"#utility.yul\":7098:7107   */\n      dup4\n        /* \"#utility.yul\":7094:7112   */\n      add\n        /* \"#utility.yul\":7085:7091   */\n      dup6\n        /* \"#utility.yul\":7041:7113   */\n      tag_215\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":7123:7195   */\n      tag_300\n        /* \"#utility.yul\":7191:7193   */\n      0x40\n        /* \"#utility.yul\":7180:7189   */\n      dup4\n        /* \"#utility.yul\":7176:7194   */\n      add\n        /* \"#utility.yul\":7167:7173   */\n      dup5\n        /* \"#utility.yul\":7123:7195   */\n      tag_215\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":6760:7202   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7208:7388   */\n    tag_220:\n        /* \"#utility.yul\":7256:7333   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7253:7254   */\n      0x00\n        /* \"#utility.yul\":7246:7334   */\n      mstore\n        /* \"#utility.yul\":7353:7357   */\n      0x11\n        /* \"#utility.yul\":7350:7351   */\n      0x04\n        /* \"#utility.yul\":7343:7358   */\n      mstore\n        /* \"#utility.yul\":7377:7381   */\n      0x24\n        /* \"#utility.yul\":7374:7375   */\n      0x00\n        /* \"#utility.yul\":7367:7382   */\n      revert\n        /* \"#utility.yul\":7394:7585   */\n    tag_191:\n        /* \"#utility.yul\":7434:7437   */\n      0x00\n        /* \"#utility.yul\":7453:7473   */\n      tag_303\n        /* \"#utility.yul\":7471:7472   */\n      dup3\n        /* \"#utility.yul\":7453:7473   */\n      tag_210\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7448:7473   */\n      swap2\n      pop\n        /* \"#utility.yul\":7487:7507   */\n      tag_304\n        /* \"#utility.yul\":7505:7506   */\n      dup4\n        /* \"#utility.yul\":7487:7507   */\n      tag_210\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7482:7507   */\n      swap3\n      pop\n        /* \"#utility.yul\":7530:7531   */\n      dup3\n        /* \"#utility.yul\":7527:7528   */\n      dup3\n        /* \"#utility.yul\":7523:7532   */\n      add\n        /* \"#utility.yul\":7516:7532   */\n      swap1\n      pop\n        /* \"#utility.yul\":7551:7554   */\n      dup1\n        /* \"#utility.yul\":7548:7549   */\n      dup3\n        /* \"#utility.yul\":7545:7555   */\n      gt\n        /* \"#utility.yul\":7542:7578   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":7558:7576   */\n      tag_306\n      tag_220\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7542:7578   */\n    tag_305:\n        /* \"#utility.yul\":7394:7585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201a04c4f724e0387bd78fcc1d53528f5769f48992d7e4e7b7e569af4013ab236764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1867": {
									"entryPoint": null,
									"id": 1867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 292,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 923,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5817:11",
										"nodeType": "YulBlock",
										"src": "0:5817:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:11",
													"nodeType": "YulBlock",
													"src": "66:40:11",
													"statements": [
														{
															"nativeSrc": "77:22:11",
															"nodeType": "YulAssignment",
															"src": "77:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:11"
																},
																"nativeSrc": "87:12:11",
																"nodeType": "YulFunctionCall",
																"src": "87:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:11",
														"nodeType": "YulTypedName",
														"src": "49:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:11",
														"nodeType": "YulTypedName",
														"src": "59:6:11",
														"type": ""
													}
												],
												"src": "7:99:11"
											},
											{
												"body": {
													"nativeSrc": "140:152:11",
													"nodeType": "YulBlock",
													"src": "140:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:11",
																		"nodeType": "YulLiteral",
																		"src": "157:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:11",
																		"nodeType": "YulLiteral",
																		"src": "160:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:11"
																},
																"nativeSrc": "150:88:11",
																"nodeType": "YulFunctionCall",
																"src": "150:88:11"
															},
															"nativeSrc": "150:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:11",
																		"nodeType": "YulLiteral",
																		"src": "254:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:11",
																		"nodeType": "YulLiteral",
																		"src": "257:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:11"
																},
																"nativeSrc": "247:15:11",
																"nodeType": "YulFunctionCall",
																"src": "247:15:11"
															},
															"nativeSrc": "247:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:11",
																		"nodeType": "YulLiteral",
																		"src": "278:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:11",
																		"nodeType": "YulLiteral",
																		"src": "281:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:11"
																},
																"nativeSrc": "271:15:11",
																"nodeType": "YulFunctionCall",
																"src": "271:15:11"
															},
															"nativeSrc": "271:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:11"
											},
											{
												"body": {
													"nativeSrc": "326:152:11",
													"nodeType": "YulBlock",
													"src": "326:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:11",
																		"nodeType": "YulLiteral",
																		"src": "343:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:11",
																		"nodeType": "YulLiteral",
																		"src": "346:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:11"
																},
																"nativeSrc": "336:88:11",
																"nodeType": "YulFunctionCall",
																"src": "336:88:11"
															},
															"nativeSrc": "336:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:11",
																		"nodeType": "YulLiteral",
																		"src": "440:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:11",
																		"nodeType": "YulLiteral",
																		"src": "443:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:11"
																},
																"nativeSrc": "433:15:11",
																"nodeType": "YulFunctionCall",
																"src": "433:15:11"
															},
															"nativeSrc": "433:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:11",
																		"nodeType": "YulLiteral",
																		"src": "464:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:11",
																		"nodeType": "YulLiteral",
																		"src": "467:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:11"
																},
																"nativeSrc": "457:15:11",
																"nodeType": "YulFunctionCall",
																"src": "457:15:11"
															},
															"nativeSrc": "457:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:11"
											},
											{
												"body": {
													"nativeSrc": "535:269:11",
													"nodeType": "YulBlock",
													"src": "535:269:11",
													"statements": [
														{
															"nativeSrc": "545:22:11",
															"nodeType": "YulAssignment",
															"src": "545:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:11",
																		"nodeType": "YulLiteral",
																		"src": "565:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:11"
																},
																"nativeSrc": "555:12:11",
																"nodeType": "YulFunctionCall",
																"src": "555:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:11"
																}
															]
														},
														{
															"nativeSrc": "576:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:11",
																		"nodeType": "YulLiteral",
																		"src": "612:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:11"
																},
																"nativeSrc": "602:12:11",
																"nodeType": "YulFunctionCall",
																"src": "602:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:11",
																	"nodeType": "YulTypedName",
																	"src": "580:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:11",
																"nodeType": "YulBlock",
																"src": "653:51:11",
																"statements": [
																	{
																		"nativeSrc": "667:27:11",
																		"nodeType": "YulAssignment",
																		"src": "667:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:11",
																					"nodeType": "YulLiteral",
																					"src": "689:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:11"
																			},
																			"nativeSrc": "677:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:11"
																},
																"nativeSrc": "626:26:11",
																"nodeType": "YulFunctionCall",
																"src": "626:26:11"
															},
															"nativeSrc": "623:81:11",
															"nodeType": "YulIf",
															"src": "623:81:11"
														},
														{
															"body": {
																"nativeSrc": "756:42:11",
																"nodeType": "YulBlock",
																"src": "756:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:11"
																			},
																			"nativeSrc": "770:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:11"
																		},
																		"nativeSrc": "770:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:11",
																				"nodeType": "YulLiteral",
																				"src": "751:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:11"
																		},
																		"nativeSrc": "740:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:11"
																},
																"nativeSrc": "717:38:11",
																"nodeType": "YulFunctionCall",
																"src": "717:38:11"
															},
															"nativeSrc": "714:84:11",
															"nodeType": "YulIf",
															"src": "714:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:11",
														"nodeType": "YulTypedName",
														"src": "519:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:11",
														"nodeType": "YulTypedName",
														"src": "528:6:11",
														"type": ""
													}
												],
												"src": "484:320:11"
											},
											{
												"body": {
													"nativeSrc": "864:87:11",
													"nodeType": "YulBlock",
													"src": "864:87:11",
													"statements": [
														{
															"nativeSrc": "874:11:11",
															"nodeType": "YulAssignment",
															"src": "874:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:11",
																"nodeType": "YulIdentifier",
																"src": "882:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:11",
																		"nodeType": "YulLiteral",
																		"src": "902:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:11"
																},
																"nativeSrc": "895:14:11",
																"nodeType": "YulFunctionCall",
																"src": "895:14:11"
															},
															"nativeSrc": "895:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:11"
														},
														{
															"nativeSrc": "918:26:11",
															"nodeType": "YulAssignment",
															"src": "918:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:11",
																		"nodeType": "YulLiteral",
																		"src": "936:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:11",
																		"nodeType": "YulLiteral",
																		"src": "939:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:11"
																},
																"nativeSrc": "926:18:11",
																"nodeType": "YulFunctionCall",
																"src": "926:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:11",
														"nodeType": "YulTypedName",
														"src": "851:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:11",
														"nodeType": "YulTypedName",
														"src": "859:4:11",
														"type": ""
													}
												],
												"src": "810:141:11"
											},
											{
												"body": {
													"nativeSrc": "1001:49:11",
													"nodeType": "YulBlock",
													"src": "1001:49:11",
													"statements": [
														{
															"nativeSrc": "1011:33:11",
															"nodeType": "YulAssignment",
															"src": "1011:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:11"
																		},
																		"nativeSrc": "1025:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:11"
																},
																"nativeSrc": "1021:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:11",
														"nodeType": "YulTypedName",
														"src": "984:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:11",
														"nodeType": "YulTypedName",
														"src": "994:6:11",
														"type": ""
													}
												],
												"src": "957:93:11"
											},
											{
												"body": {
													"nativeSrc": "1109:54:11",
													"nodeType": "YulBlock",
													"src": "1109:54:11",
													"statements": [
														{
															"nativeSrc": "1119:37:11",
															"nodeType": "YulAssignment",
															"src": "1119:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:11"
																},
																"nativeSrc": "1140:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:11",
														"nodeType": "YulTypedName",
														"src": "1084:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:11",
														"nodeType": "YulTypedName",
														"src": "1090:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:11",
														"nodeType": "YulTypedName",
														"src": "1100:8:11",
														"type": ""
													}
												],
												"src": "1056:107:11"
											},
											{
												"body": {
													"nativeSrc": "1245:317:11",
													"nodeType": "YulBlock",
													"src": "1245:317:11",
													"statements": [
														{
															"nativeSrc": "1255:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:11"
																},
																"nativeSrc": "1272:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:11",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:11",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:11"
																},
																"nativeSrc": "1311:97:11",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:11",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:11",
															"nodeType": "YulAssignment",
															"src": "1417:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:11"
																},
																"nativeSrc": "1429:39:11",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:11"
																}
															]
														},
														{
															"nativeSrc": "1477:30:11",
															"nodeType": "YulAssignment",
															"src": "1477:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:11"
																		},
																		"nativeSrc": "1497:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:11"
																},
																"nativeSrc": "1486:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:11"
																}
															]
														},
														{
															"nativeSrc": "1516:40:11",
															"nodeType": "YulAssignment",
															"src": "1516:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:11"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:11"
																		},
																		"nativeSrc": "1536:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:11"
																},
																"nativeSrc": "1526:30:11",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:11",
														"nodeType": "YulTypedName",
														"src": "1206:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:11",
														"nodeType": "YulTypedName",
														"src": "1213:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:11",
														"nodeType": "YulTypedName",
														"src": "1225:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:11",
														"nodeType": "YulTypedName",
														"src": "1238:6:11",
														"type": ""
													}
												],
												"src": "1169:393:11"
											},
											{
												"body": {
													"nativeSrc": "1613:32:11",
													"nodeType": "YulBlock",
													"src": "1613:32:11",
													"statements": [
														{
															"nativeSrc": "1623:16:11",
															"nodeType": "YulAssignment",
															"src": "1623:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:11",
																"nodeType": "YulIdentifier",
																"src": "1634:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:11",
														"nodeType": "YulTypedName",
														"src": "1595:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:11",
														"nodeType": "YulTypedName",
														"src": "1605:7:11",
														"type": ""
													}
												],
												"src": "1568:77:11"
											},
											{
												"body": {
													"nativeSrc": "1683:28:11",
													"nodeType": "YulBlock",
													"src": "1683:28:11",
													"statements": [
														{
															"nativeSrc": "1693:12:11",
															"nodeType": "YulAssignment",
															"src": "1693:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:11",
																"nodeType": "YulIdentifier",
																"src": "1700:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:11",
														"nodeType": "YulTypedName",
														"src": "1669:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:11",
														"nodeType": "YulTypedName",
														"src": "1679:3:11",
														"type": ""
													}
												],
												"src": "1651:60:11"
											},
											{
												"body": {
													"nativeSrc": "1777:82:11",
													"nodeType": "YulBlock",
													"src": "1777:82:11",
													"statements": [
														{
															"nativeSrc": "1787:66:11",
															"nodeType": "YulAssignment",
															"src": "1787:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:11"
																				},
																				"nativeSrc": "1827:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:11"
																		},
																		"nativeSrc": "1818:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:11"
																},
																"nativeSrc": "1800:53:11",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:11",
														"nodeType": "YulTypedName",
														"src": "1757:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:11",
														"nodeType": "YulTypedName",
														"src": "1767:9:11",
														"type": ""
													}
												],
												"src": "1717:142:11"
											},
											{
												"body": {
													"nativeSrc": "1912:28:11",
													"nodeType": "YulBlock",
													"src": "1912:28:11",
													"statements": [
														{
															"nativeSrc": "1922:12:11",
															"nodeType": "YulAssignment",
															"src": "1922:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:11",
																"nodeType": "YulIdentifier",
																"src": "1929:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:11",
														"nodeType": "YulTypedName",
														"src": "1898:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:11",
														"nodeType": "YulTypedName",
														"src": "1908:3:11",
														"type": ""
													}
												],
												"src": "1865:75:11"
											},
											{
												"body": {
													"nativeSrc": "2022:193:11",
													"nodeType": "YulBlock",
													"src": "2022:193:11",
													"statements": [
														{
															"nativeSrc": "2032:63:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:11"
																},
																"nativeSrc": "2056:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:11",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:11"
																				},
																				"nativeSrc": "2145:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:11",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:11",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:11"
																				},
																				"nativeSrc": "2166:41:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:11"
																		},
																		"nativeSrc": "2117:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:11"
																},
																"nativeSrc": "2104:105:11",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:11"
															},
															"nativeSrc": "2104:105:11",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:11",
														"nodeType": "YulTypedName",
														"src": "1999:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:11",
														"nodeType": "YulTypedName",
														"src": "2005:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:11",
														"nodeType": "YulTypedName",
														"src": "2013:7:11",
														"type": ""
													}
												],
												"src": "1946:269:11"
											},
											{
												"body": {
													"nativeSrc": "2270:24:11",
													"nodeType": "YulBlock",
													"src": "2270:24:11",
													"statements": [
														{
															"nativeSrc": "2280:8:11",
															"nodeType": "YulAssignment",
															"src": "2280:8:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:11",
																"nodeType": "YulLiteral",
																"src": "2287:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:11",
														"nodeType": "YulTypedName",
														"src": "2266:3:11",
														"type": ""
													}
												],
												"src": "2221:73:11"
											},
											{
												"body": {
													"nativeSrc": "2353:136:11",
													"nodeType": "YulBlock",
													"src": "2353:136:11",
													"statements": [
														{
															"nativeSrc": "2363:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:11"
																},
																"nativeSrc": "2377:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:11"
																},
																"nativeSrc": "2418:65:11",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:11"
															},
															"nativeSrc": "2418:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:11",
														"nodeType": "YulTypedName",
														"src": "2339:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:11",
														"nodeType": "YulTypedName",
														"src": "2345:6:11",
														"type": ""
													}
												],
												"src": "2300:189:11"
											},
											{
												"body": {
													"nativeSrc": "2545:136:11",
													"nodeType": "YulBlock",
													"src": "2545:136:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:11",
																"nodeType": "YulBlock",
																"src": "2612:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:11",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:11"
																			},
																			"nativeSrc": "2626:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:11"
																		},
																		"nativeSrc": "2626:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:11"
																},
																"nativeSrc": "2562:14:11",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:11"
															},
															"nativeSrc": "2555:120:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:11",
																"nodeType": "YulBlock",
																"src": "2577:26:11",
																"statements": [
																	{
																		"nativeSrc": "2579:22:11",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:11"
																			},
																			"nativeSrc": "2588:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:11",
																"nodeType": "YulBlock",
																"src": "2559:2:11",
																"statements": []
															},
															"src": "2555:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:11",
														"nodeType": "YulTypedName",
														"src": "2533:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:11",
														"nodeType": "YulTypedName",
														"src": "2540:3:11",
														"type": ""
													}
												],
												"src": "2495:186:11"
											},
											{
												"body": {
													"nativeSrc": "2766:464:11",
													"nodeType": "YulBlock",
													"src": "2766:464:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:11",
																"nodeType": "YulBlock",
																"src": "2792:431:11",
																"statements": [
																	{
																		"nativeSrc": "2806:54:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:11",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:11"
																			},
																			"nativeSrc": "2822:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:11",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:11",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:11"
																					},
																					"nativeSrc": "2906:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:11"
																			},
																			"nativeSrc": "2892:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:11",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:11",
																			"nodeType": "YulBlock",
																			"src": "3093:27:11",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:11",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:11",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:11",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:11"
																			},
																			"nativeSrc": "3074:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:11"
																		},
																		"nativeSrc": "3071:49:11",
																		"nodeType": "YulIf",
																		"src": "3071:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:11",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:11",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:11"
																							},
																							"nativeSrc": "3189:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:11"
																					},
																					"nativeSrc": "3175:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:11",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:11"
																			},
																			"nativeSrc": "3133:80:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:11"
																		},
																		"nativeSrc": "3133:80:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:11"
																},
																"nativeSrc": "2780:11:11",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:11"
															},
															"nativeSrc": "2777:446:11",
															"nodeType": "YulIf",
															"src": "2777:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:11",
														"nodeType": "YulTypedName",
														"src": "2742:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:11",
														"nodeType": "YulTypedName",
														"src": "2749:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:11",
														"nodeType": "YulTypedName",
														"src": "2754:10:11",
														"type": ""
													}
												],
												"src": "2687:543:11"
											},
											{
												"body": {
													"nativeSrc": "3299:54:11",
													"nodeType": "YulBlock",
													"src": "3299:54:11",
													"statements": [
														{
															"nativeSrc": "3309:37:11",
															"nodeType": "YulAssignment",
															"src": "3309:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:11"
																},
																"nativeSrc": "3330:16:11",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:11",
														"nodeType": "YulTypedName",
														"src": "3274:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:11",
														"nodeType": "YulTypedName",
														"src": "3280:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:11",
														"nodeType": "YulTypedName",
														"src": "3290:8:11",
														"type": ""
													}
												],
												"src": "3236:117:11"
											},
											{
												"body": {
													"nativeSrc": "3410:118:11",
													"nodeType": "YulBlock",
													"src": "3410:118:11",
													"statements": [
														{
															"nativeSrc": "3420:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:11"
																				},
																				"nativeSrc": "3465:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:11"
																				},
																				"nativeSrc": "3480:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:11"
																		},
																		"nativeSrc": "3436:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:11"
																},
																"nativeSrc": "3432:56:11",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:11",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:11",
															"nodeType": "YulAssignment",
															"src": "3497:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:11"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:11"
																},
																"nativeSrc": "3507:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:11",
														"nodeType": "YulTypedName",
														"src": "3387:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:11",
														"nodeType": "YulTypedName",
														"src": "3393:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:11",
														"nodeType": "YulTypedName",
														"src": "3403:6:11",
														"type": ""
													}
												],
												"src": "3359:169:11"
											},
											{
												"body": {
													"nativeSrc": "3614:214:11",
													"nodeType": "YulBlock",
													"src": "3614:214:11",
													"statements": [
														{
															"nativeSrc": "3747:37:11",
															"nodeType": "YulAssignment",
															"src": "3747:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:11"
																},
																"nativeSrc": "3755:29:11",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:11"
																}
															]
														},
														{
															"nativeSrc": "3793:29:11",
															"nodeType": "YulAssignment",
															"src": "3793:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:11"
																		},
																		"nativeSrc": "3810:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:11"
																},
																"nativeSrc": "3801:21:11",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:11",
														"nodeType": "YulTypedName",
														"src": "3595:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:11",
														"nodeType": "YulTypedName",
														"src": "3601:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:11",
														"nodeType": "YulTypedName",
														"src": "3609:4:11",
														"type": ""
													}
												],
												"src": "3533:295:11"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:11",
													"nodeType": "YulBlock",
													"src": "3925:1303:11",
													"statements": [
														{
															"nativeSrc": "3936:51:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:11"
																},
																"nativeSrc": "3950:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:11",
																"nodeType": "YulBlock",
																"src": "4072:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:11"
																			},
																			"nativeSrc": "4074:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:11"
																		},
																		"nativeSrc": "4074:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:11",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:11"
																},
																"nativeSrc": "4041:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:11"
															},
															"nativeSrc": "4038:56:11",
															"nodeType": "YulIf",
															"src": "4038:56:11"
														},
														{
															"nativeSrc": "4104:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:11"
																		},
																		"nativeSrc": "4144:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:11"
																},
																"nativeSrc": "4118:38:11",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:11"
																},
																"nativeSrc": "4203:67:11",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:11"
															},
															"nativeSrc": "4203:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:11"
														},
														{
															"nativeSrc": "4280:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:11",
																"nodeType": "YulLiteral",
																"src": "4297:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:11",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:11",
															"nodeType": "YulAssignment",
															"src": "4308:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:11",
																"nodeType": "YulLiteral",
																"src": "4321:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:11",
																		"nodeType": "YulBlock",
																		"src": "4372:611:11",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:11",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:11"
																							},
																							"nativeSrc": "4413:9:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:11"
																					},
																					"nativeSrc": "4401:22:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:11",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:11"
																					},
																					"nativeSrc": "4451:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:11",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:11",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:11",
																					"nodeType": "YulBlock",
																					"src": "4569:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:11"
																												},
																												"nativeSrc": "4608:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:11"
																										},
																										"nativeSrc": "4602:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:11"
																								},
																								"nativeSrc": "4587:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:11"
																							},
																							"nativeSrc": "4587:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:11"
																						},
																						{
																							"nativeSrc": "4646:24:11",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:11",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:11"
																								},
																								"nativeSrc": "4656:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:11",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:11",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:11"
																								},
																								"nativeSrc": "4700:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:11"
																					},
																					"nativeSrc": "4532:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:11"
																				},
																				"nativeSrc": "4524:208:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:11",
																					"nodeType": "YulBlock",
																					"src": "4547:21:11",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:11",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:11",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:11"
																								},
																								"nativeSrc": "4554:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:11",
																					"nodeType": "YulBlock",
																					"src": "4528:3:11",
																					"statements": []
																				},
																				"src": "4524:208:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:11",
																					"nodeType": "YulBlock",
																					"src": "4768:156:11",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:11"
																										},
																										"nativeSrc": "4809:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:11"
																								},
																								"nativeSrc": "4803:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:11",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:11",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:11"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:11",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:11"
																												},
																												"nativeSrc": "4891:17:11",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:11",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:11"
																										},
																										"nativeSrc": "4861:48:11",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:11"
																								},
																								"nativeSrc": "4846:64:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:11"
																							},
																							"nativeSrc": "4846:64:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:11"
																					},
																					"nativeSrc": "4748:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:11"
																				},
																				"nativeSrc": "4745:179:11",
																				"nodeType": "YulIf",
																				"src": "4745:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:11",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:11"
																									},
																									"nativeSrc": "4954:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:11",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:11"
																							},
																							"nativeSrc": "4950:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:11"
																					},
																					"nativeSrc": "4937:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:11"
																				},
																				"nativeSrc": "4937:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:11"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:11",
																	"nodeType": "YulCase",
																	"src": "4365:618:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:11",
																		"nodeType": "YulBlock",
																		"src": "5000:222:11",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:11",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:11",
																					"nodeType": "YulBlock",
																					"src": "5051:67:11",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:11",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:11"
																										},
																										"nativeSrc": "5084:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:11"
																								},
																								"nativeSrc": "5078:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:11"
																				},
																				"nativeSrc": "5041:77:11",
																				"nodeType": "YulIf",
																				"src": "5041:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:11"
																							},
																							"nativeSrc": "5144:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:11"
																					},
																					"nativeSrc": "5131:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:11"
																				},
																				"nativeSrc": "5131:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:11"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:11",
																	"nodeType": "YulCase",
																	"src": "4992:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:11"
																},
																"nativeSrc": "4342:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:11"
															},
															"nativeSrc": "4335:887:11",
															"nodeType": "YulSwitch",
															"src": "4335:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:11",
														"nodeType": "YulTypedName",
														"src": "3914:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:11",
														"nodeType": "YulTypedName",
														"src": "3920:3:11",
														"type": ""
													}
												],
												"src": "3833:1395:11"
											},
											{
												"body": {
													"nativeSrc": "5279:81:11",
													"nodeType": "YulBlock",
													"src": "5279:81:11",
													"statements": [
														{
															"nativeSrc": "5289:65:11",
															"nodeType": "YulAssignment",
															"src": "5289:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:11",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:11"
																},
																"nativeSrc": "5300:54:11",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:11",
														"nodeType": "YulTypedName",
														"src": "5261:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:11",
														"nodeType": "YulTypedName",
														"src": "5271:7:11",
														"type": ""
													}
												],
												"src": "5234:126:11"
											},
											{
												"body": {
													"nativeSrc": "5411:51:11",
													"nodeType": "YulBlock",
													"src": "5411:51:11",
													"statements": [
														{
															"nativeSrc": "5421:35:11",
															"nodeType": "YulAssignment",
															"src": "5421:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:11"
																},
																"nativeSrc": "5432:24:11",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:11",
														"nodeType": "YulTypedName",
														"src": "5393:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:11",
														"nodeType": "YulTypedName",
														"src": "5403:7:11",
														"type": ""
													}
												],
												"src": "5366:96:11"
											},
											{
												"body": {
													"nativeSrc": "5533:53:11",
													"nodeType": "YulBlock",
													"src": "5533:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:11"
																		},
																		"nativeSrc": "5555:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:11"
																},
																"nativeSrc": "5543:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:11"
															},
															"nativeSrc": "5543:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:11",
														"nodeType": "YulTypedName",
														"src": "5521:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:11",
														"nodeType": "YulTypedName",
														"src": "5528:3:11",
														"type": ""
													}
												],
												"src": "5468:118:11"
											},
											{
												"body": {
													"nativeSrc": "5690:124:11",
													"nodeType": "YulBlock",
													"src": "5690:124:11",
													"statements": [
														{
															"nativeSrc": "5700:26:11",
															"nodeType": "YulAssignment",
															"src": "5700:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:11"
																},
																"nativeSrc": "5708:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:11"
																		},
																		"nativeSrc": "5789:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:11"
																},
																"nativeSrc": "5736:71:11",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:11"
															},
															"nativeSrc": "5736:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:11",
														"nodeType": "YulTypedName",
														"src": "5662:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:11",
														"nodeType": "YulTypedName",
														"src": "5674:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:11",
														"nodeType": "YulTypedName",
														"src": "5685:4:11",
														"type": ""
													}
												],
												"src": "5592:222:11"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50336040518060400160405280601781526020017f446563656e7472616c697a6564537461626c65436f696e0000000000000000008152506040518060400160405280600381526020017f4453430000000000000000000000000000000000000000000000000000000000815250816003908161008c9190610424565b50806004908161009c9190610424565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361010f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101069190610532565b60405180910390fd5b61011e8161012460201b60201c565b5061054b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061026257607f821691505b6020821081036102755761027461021e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102d77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261029c565b6102e1868361029c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61032561032061031b846102f9565b610302565b6102f9565b9050919050565b5f819050919050565b61033e8361030b565b61035261034a8261032c565b8484546102a8565b825550505050565b5f5f905090565b61036961035a565b610374818484610335565b505050565b5b818110156103975761038c5f82610361565b60018101905061037a565b5050565b601f8211156103dc576103ad8161027b565b6103b68461028d565b810160208510156103c5578190505b6103d96103d18561028d565b830182610379565b50505b505050565b5f82821c905092915050565b5f6103fc5f19846008026103e1565b1980831691505092915050565b5f61041483836103ed565b9150826002028217905092915050565b61042d826101e7565b67ffffffffffffffff811115610446576104456101f1565b5b610450825461024b565b61045b82828561039b565b5f60209050601f83116001811461048c575f841561047a578287015190505b6104848582610409565b8655506104eb565b601f19841661049a8661027b565b5f5b828110156104c15784890151825560018201915060208501945060208101905061049c565b868310156104de57848901516104da601f8916826103ed565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61051c826104f3565b9050919050565b61052c81610512565b82525050565b5f6020820190506105455f830184610523565b92915050565b6113a5806105585f395ff3fe608060405234801561000f575f5ffd5b50600436106100f3575f3560e01c806370a082311161009557806395d89b411161006457806395d89b4114610271578063a9059cbb1461028f578063dd62ed3e146102bf578063f2fde38b146102ef576100f3565b806370a08231146101fd578063715018a61461022d57806379cc6790146102375780638da5cb5b14610253576100f3565b806323b872dd116100d157806323b872dd14610163578063313ce5671461019357806340c10f19146101b157806342966c68146101e1576100f3565b806306fdde03146100f7578063095ea7b31461011557806318160ddd14610145575b5f5ffd5b6100ff61030b565b60405161010c9190610ff3565b60405180910390f35b61012f600480360381019061012a91906110a4565b61039b565b60405161013c91906110fc565b60405180910390f35b61014d6103bd565b60405161015a9190611124565b60405180910390f35b61017d6004803603810190610178919061113d565b6103c6565b60405161018a91906110fc565b60405180910390f35b61019b6103f4565b6040516101a891906111a8565b60405180910390f35b6101cb60048036038101906101c691906110a4565b6103fc565b6040516101d891906110fc565b60405180910390f35b6101fb60048036038101906101f691906111c1565b6104b7565b005b610217600480360381019061021291906111ec565b61054b565b6040516102249190611124565b60405180910390f35b610235610590565b005b610251600480360381019061024c91906110a4565b6105a3565b005b61025b6105c3565b6040516102689190611226565b60405180910390f35b6102796105eb565b6040516102869190610ff3565b60405180910390f35b6102a960048036038101906102a491906110a4565b61067b565b6040516102b691906110fc565b60405180910390f35b6102d960048036038101906102d4919061123f565b61069d565b6040516102e69190611124565b60405180910390f35b610309600480360381019061030491906111ec565b61071f565b005b60606003805461031a906112aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610346906112aa565b80156103915780601f1061036857610100808354040283529160200191610391565b820191905f5260205f20905b81548152906001019060200180831161037457829003601f168201915b5050505050905090565b5f5f6103a56107a3565b90506103b28185856107aa565b600191505092915050565b5f600254905090565b5f5f6103d06107a3565b90506103dd8582856107bc565b6103e885858561084f565b60019150509392505050565b5f6012905090565b5f61040561093f565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361046a576040517ff3c190e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f82116104a3576040517fae8ba12300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104ad83836109c6565b6001905092915050565b6104bf61093f565b5f6104c93361054b565b90505f8211610504576040517fae8ba12300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181101561053e576040517ffe9c6abb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61054782610a45565b5050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61059861093f565b6105a15f610a59565b565b6105b5826105af6107a3565b836107bc565b6105bf8282610b1c565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105fa906112aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610626906112aa565b80156106715780601f1061064857610100808354040283529160200191610671565b820191905f5260205f20905b81548152906001019060200180831161065457829003601f168201915b5050505050905090565b5f5f6106856107a3565b905061069281858561084f565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61072761093f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610797575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161078e9190611226565b60405180910390fd5b6107a081610a59565b50565b5f33905090565b6107b78383836001610b9b565b505050565b5f6107c7848461069d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610849578181101561083a578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610831939291906112da565b60405180910390fd5b61084884848484035f610b9b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108bf575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108b69190611226565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361092f575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109269190611226565b60405180910390fd5b61093a838383610d6a565b505050565b6109476107a3565b73ffffffffffffffffffffffffffffffffffffffff166109656105c3565b73ffffffffffffffffffffffffffffffffffffffff16146109c4576109886107a3565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109bb9190611226565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a36575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a2d9190611226565b60405180910390fd5b610a415f8383610d6a565b5050565b610a56610a506107a3565b82610b1c565b50565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b8c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b839190611226565b60405180910390fd5b610b97825f83610d6a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c0b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c029190611226565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c7b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c729190611226565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610d64578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d5b9190611124565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610dba578060025f828254610dae919061133c565b92505081905550610e88565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e43578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e3a939291906112da565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ecf578060025f8282540392505081905550610f19565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f769190611124565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610fc582610f83565b610fcf8185610f8d565b9350610fdf818560208601610f9d565b610fe881610fab565b840191505092915050565b5f6020820190508181035f83015261100b8184610fbb565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61104082611017565b9050919050565b61105081611036565b811461105a575f5ffd5b50565b5f8135905061106b81611047565b92915050565b5f819050919050565b61108381611071565b811461108d575f5ffd5b50565b5f8135905061109e8161107a565b92915050565b5f5f604083850312156110ba576110b9611013565b5b5f6110c78582860161105d565b92505060206110d885828601611090565b9150509250929050565b5f8115159050919050565b6110f6816110e2565b82525050565b5f60208201905061110f5f8301846110ed565b92915050565b61111e81611071565b82525050565b5f6020820190506111375f830184611115565b92915050565b5f5f5f6060848603121561115457611153611013565b5b5f6111618682870161105d565b93505060206111728682870161105d565b925050604061118386828701611090565b9150509250925092565b5f60ff82169050919050565b6111a28161118d565b82525050565b5f6020820190506111bb5f830184611199565b92915050565b5f602082840312156111d6576111d5611013565b5b5f6111e384828501611090565b91505092915050565b5f6020828403121561120157611200611013565b5b5f61120e8482850161105d565b91505092915050565b61122081611036565b82525050565b5f6020820190506112395f830184611217565b92915050565b5f5f6040838503121561125557611254611013565b5b5f6112628582860161105d565b92505060206112738582860161105d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806112c157607f821691505b6020821081036112d4576112d361127d565b5b50919050565b5f6060820190506112ed5f830186611217565b6112fa6020830185611115565b6113076040830184611115565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61134682611071565b915061135183611071565b92508282019050808211156113695761136861130f565b5b9291505056fea26469706673582212201a04c4f724e0387bd78fcc1d53528f5769f48992d7e4e7b7e569af4013ab236764736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446563656E7472616C697A6564537461626C65436F696E000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4453430000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x424 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x424 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E DUP2 PUSH2 0x124 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x54B JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x262 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x275 JUMPI PUSH2 0x274 PUSH2 0x21E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2D7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x29C JUMP JUMPDEST PUSH2 0x2E1 DUP7 DUP4 PUSH2 0x29C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x325 PUSH2 0x320 PUSH2 0x31B DUP5 PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH2 0x2F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33E DUP4 PUSH2 0x30B JUMP JUMPDEST PUSH2 0x352 PUSH2 0x34A DUP3 PUSH2 0x32C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x369 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x374 DUP2 DUP5 DUP5 PUSH2 0x335 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH2 0x38C PUSH0 DUP3 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x37A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3DC JUMPI PUSH2 0x3AD DUP2 PUSH2 0x27B JUMP JUMPDEST PUSH2 0x3B6 DUP5 PUSH2 0x28D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3C5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3D9 PUSH2 0x3D1 DUP6 PUSH2 0x28D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x379 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3FC PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3E1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x414 DUP4 DUP4 PUSH2 0x3ED JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42D DUP3 PUSH2 0x1E7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x446 JUMPI PUSH2 0x445 PUSH2 0x1F1 JUMP JUMPDEST JUMPDEST PUSH2 0x450 DUP3 SLOAD PUSH2 0x24B JUMP JUMPDEST PUSH2 0x45B DUP3 DUP3 DUP6 PUSH2 0x39B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x48C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x47A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x484 DUP6 DUP3 PUSH2 0x409 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x49A DUP7 PUSH2 0x27B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x49C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4DE JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4DA PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3ED JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x51C DUP3 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52C DUP2 PUSH2 0x512 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x545 PUSH0 DUP4 ADD DUP5 PUSH2 0x523 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13A5 DUP1 PUSH2 0x558 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2EF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x253 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1E1 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x11C1 JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x590 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x5A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25B PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x69D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31A SWAP1 PUSH2 0x12AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x346 SWAP1 PUSH2 0x12AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x391 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x368 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x391 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x374 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3A5 PUSH2 0x7A3 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B2 DUP2 DUP6 DUP6 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3D0 PUSH2 0x7A3 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DD DUP6 DUP3 DUP6 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x3E8 DUP6 DUP6 DUP6 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x405 PUSH2 0x93F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x46A JUMPI PUSH1 0x40 MLOAD PUSH32 0xF3C190E900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE8BA12300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AD DUP4 DUP4 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x93F JUMP JUMPDEST PUSH0 PUSH2 0x4C9 CALLER PUSH2 0x54B JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE8BA12300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH32 0xFE9C6ABB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x547 DUP3 PUSH2 0xA45 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x598 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x5A1 PUSH0 PUSH2 0xA59 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5B5 DUP3 PUSH2 0x5AF PUSH2 0x7A3 JUMP JUMPDEST DUP4 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x5BF DUP3 DUP3 PUSH2 0xB1C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5FA SWAP1 PUSH2 0x12AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x626 SWAP1 PUSH2 0x12AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x671 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x648 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x671 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x654 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x685 PUSH2 0x7A3 JUMP JUMPDEST SWAP1 POP PUSH2 0x692 DUP2 DUP6 DUP6 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x727 PUSH2 0x93F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x797 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78E SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A0 DUP2 PUSH2 0xA59 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7B7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB9B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7C7 DUP5 DUP5 PUSH2 0x69D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x849 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x83A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x848 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xB9B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8BF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93A DUP4 DUP4 DUP4 PUSH2 0xD6A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x947 PUSH2 0x7A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x965 PUSH2 0x5C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C4 JUMPI PUSH2 0x988 PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BB SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA41 PUSH0 DUP4 DUP4 PUSH2 0xD6A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA56 PUSH2 0xA50 PUSH2 0x7A3 JUMP JUMPDEST DUP3 PUSH2 0xB1C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB83 SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB97 DUP3 PUSH0 DUP4 PUSH2 0xD6A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC0B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC02 SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC7B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC72 SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD64 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDBA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x133C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE88 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE43 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF19 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFC5 DUP3 PUSH2 0xF83 JUMP JUMPDEST PUSH2 0xFCF DUP2 DUP6 PUSH2 0xF8D JUMP JUMPDEST SWAP4 POP PUSH2 0xFDF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF9D JUMP JUMPDEST PUSH2 0xFE8 DUP2 PUSH2 0xFAB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x100B DUP2 DUP5 PUSH2 0xFBB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1040 DUP3 PUSH2 0x1017 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1050 DUP2 PUSH2 0x1036 JUMP JUMPDEST DUP2 EQ PUSH2 0x105A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x106B DUP2 PUSH2 0x1047 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1083 DUP2 PUSH2 0x1071 JUMP JUMPDEST DUP2 EQ PUSH2 0x108D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x109E DUP2 PUSH2 0x107A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10BA JUMPI PUSH2 0x10B9 PUSH2 0x1013 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C7 DUP6 DUP3 DUP7 ADD PUSH2 0x105D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10D8 DUP6 DUP3 DUP7 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F6 DUP2 PUSH2 0x10E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x110F PUSH0 DUP4 ADD DUP5 PUSH2 0x10ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x111E DUP2 PUSH2 0x1071 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1137 PUSH0 DUP4 ADD DUP5 PUSH2 0x1115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1154 JUMPI PUSH2 0x1153 PUSH2 0x1013 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1161 DUP7 DUP3 DUP8 ADD PUSH2 0x105D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1172 DUP7 DUP3 DUP8 ADD PUSH2 0x105D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1183 DUP7 DUP3 DUP8 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A2 DUP2 PUSH2 0x118D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11BB PUSH0 DUP4 ADD DUP5 PUSH2 0x1199 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D6 JUMPI PUSH2 0x11D5 PUSH2 0x1013 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11E3 DUP5 DUP3 DUP6 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1201 JUMPI PUSH2 0x1200 PUSH2 0x1013 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x120E DUP5 DUP3 DUP6 ADD PUSH2 0x105D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1220 DUP2 PUSH2 0x1036 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1239 PUSH0 DUP4 ADD DUP5 PUSH2 0x1217 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1255 JUMPI PUSH2 0x1254 PUSH2 0x1013 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1262 DUP6 DUP3 DUP7 ADD PUSH2 0x105D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1273 DUP6 DUP3 DUP7 ADD PUSH2 0x105D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12C1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12D4 JUMPI PUSH2 0x12D3 PUSH2 0x127D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12ED PUSH0 DUP4 ADD DUP7 PUSH2 0x1217 JUMP JUMPDEST PUSH2 0x12FA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x1307 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1115 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1346 DUP3 PUSH2 0x1071 JUMP JUMPDEST SWAP2 POP PUSH2 0x1351 DUP4 PUSH2 0x1071 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1369 JUMPI PUSH2 0x1368 PUSH2 0x130F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE DIV 0xC4 0xF7 0x24 RJUMP 0x387B 0xD7 DUP16 0xCC SAR MSTORE8 MSTORE DUP16 JUMPI PUSH10 0xF48992D7E4E7B7E569AF BLOCKHASH SGT 0xAB 0x23 PUSH8 0x64736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "655:1076:10:-:0;;;906:74;;;;;;;;;;967:10;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;655:1076:10;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;655:1076:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1962,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2971,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 2844,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2367,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2502,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": 1955,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1980,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2649,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2127,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3434,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1693,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 923,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1355,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_922": {
									"entryPoint": 1443,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1905": {
									"entryPoint": 1207,
									"id": 1905,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_901": {
									"entryPoint": 2629,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1012,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1943": {
									"entryPoint": 1020,
									"id": 1943,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_345": {
									"entryPoint": 779,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1475,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1424,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1515,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 957,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 966,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1823,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1659,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4826,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3997,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4879,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4733,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4115,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7588:11",
										"nodeType": "YulBlock",
										"src": "0:7588:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:11",
													"nodeType": "YulBlock",
													"src": "66:40:11",
													"statements": [
														{
															"nativeSrc": "77:22:11",
															"nodeType": "YulAssignment",
															"src": "77:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:11"
																},
																"nativeSrc": "87:12:11",
																"nodeType": "YulFunctionCall",
																"src": "87:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:11",
														"nodeType": "YulTypedName",
														"src": "49:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:11",
														"nodeType": "YulTypedName",
														"src": "59:6:11",
														"type": ""
													}
												],
												"src": "7:99:11"
											},
											{
												"body": {
													"nativeSrc": "208:73:11",
													"nodeType": "YulBlock",
													"src": "208:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:11"
																},
																"nativeSrc": "218:19:11",
																"nodeType": "YulFunctionCall",
																"src": "218:19:11"
															},
															"nativeSrc": "218:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:11"
														},
														{
															"nativeSrc": "246:29:11",
															"nodeType": "YulAssignment",
															"src": "246:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:11",
																		"nodeType": "YulLiteral",
																		"src": "270:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:11"
																},
																"nativeSrc": "261:14:11",
																"nodeType": "YulFunctionCall",
																"src": "261:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:11",
														"nodeType": "YulTypedName",
														"src": "180:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:11",
														"nodeType": "YulTypedName",
														"src": "185:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:11",
														"nodeType": "YulTypedName",
														"src": "196:11:11",
														"type": ""
													}
												],
												"src": "112:169:11"
											},
											{
												"body": {
													"nativeSrc": "349:77:11",
													"nodeType": "YulBlock",
													"src": "349:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:11"
																},
																"nativeSrc": "360:23:11",
																"nodeType": "YulFunctionCall",
																"src": "360:23:11"
															},
															"nativeSrc": "360:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:11"
																		},
																		"nativeSrc": "399:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:11",
																		"nodeType": "YulLiteral",
																		"src": "417:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:11"
																},
																"nativeSrc": "392:27:11",
																"nodeType": "YulFunctionCall",
																"src": "392:27:11"
															},
															"nativeSrc": "392:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:11",
														"nodeType": "YulTypedName",
														"src": "331:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:11",
														"nodeType": "YulTypedName",
														"src": "336:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:11",
														"nodeType": "YulTypedName",
														"src": "341:6:11",
														"type": ""
													}
												],
												"src": "287:139:11"
											},
											{
												"body": {
													"nativeSrc": "480:54:11",
													"nodeType": "YulBlock",
													"src": "480:54:11",
													"statements": [
														{
															"nativeSrc": "490:38:11",
															"nodeType": "YulAssignment",
															"src": "490:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:11",
																				"nodeType": "YulLiteral",
																				"src": "515:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:11"
																		},
																		"nativeSrc": "504:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:11",
																				"nodeType": "YulLiteral",
																				"src": "524:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:11"
																		},
																		"nativeSrc": "520:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:11"
																},
																"nativeSrc": "500:28:11",
																"nodeType": "YulFunctionCall",
																"src": "500:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:11",
														"nodeType": "YulTypedName",
														"src": "463:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:11",
														"nodeType": "YulTypedName",
														"src": "473:6:11",
														"type": ""
													}
												],
												"src": "432:102:11"
											},
											{
												"body": {
													"nativeSrc": "632:285:11",
													"nodeType": "YulBlock",
													"src": "632:285:11",
													"statements": [
														{
															"nativeSrc": "642:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:11"
																},
																"nativeSrc": "656:39:11",
																"nodeType": "YulFunctionCall",
																"src": "656:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:11",
																	"nodeType": "YulTypedName",
																	"src": "646:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:11",
															"nodeType": "YulAssignment",
															"src": "704:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:11"
																},
																"nativeSrc": "711:71:11",
																"nodeType": "YulFunctionCall",
																"src": "711:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:11",
																				"nodeType": "YulLiteral",
																				"src": "837:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:11"
																		},
																		"nativeSrc": "826:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:11"
																},
																"nativeSrc": "791:65:11",
																"nodeType": "YulFunctionCall",
																"src": "791:65:11"
															},
															"nativeSrc": "791:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:11"
														},
														{
															"nativeSrc": "865:46:11",
															"nodeType": "YulAssignment",
															"src": "865:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:11"
																		},
																		"nativeSrc": "881:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:11"
																},
																"nativeSrc": "872:39:11",
																"nodeType": "YulFunctionCall",
																"src": "872:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:11",
														"nodeType": "YulTypedName",
														"src": "613:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:11",
														"nodeType": "YulTypedName",
														"src": "620:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:11",
														"nodeType": "YulTypedName",
														"src": "628:3:11",
														"type": ""
													}
												],
												"src": "540:377:11"
											},
											{
												"body": {
													"nativeSrc": "1041:195:11",
													"nodeType": "YulBlock",
													"src": "1041:195:11",
													"statements": [
														{
															"nativeSrc": "1051:26:11",
															"nodeType": "YulAssignment",
															"src": "1051:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:11"
																},
																"nativeSrc": "1059:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:11"
																		},
																		"nativeSrc": "1094:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:11"
																		},
																		"nativeSrc": "1113:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:11"
																},
																"nativeSrc": "1087:47:11",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:11"
															},
															"nativeSrc": "1087:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:11"
														},
														{
															"nativeSrc": "1143:86:11",
															"nodeType": "YulAssignment",
															"src": "1143:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:11"
																},
																"nativeSrc": "1151:78:11",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:11",
														"nodeType": "YulTypedName",
														"src": "1013:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:11",
														"nodeType": "YulTypedName",
														"src": "1025:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:11",
														"nodeType": "YulTypedName",
														"src": "1036:4:11",
														"type": ""
													}
												],
												"src": "923:313:11"
											},
											{
												"body": {
													"nativeSrc": "1282:35:11",
													"nodeType": "YulBlock",
													"src": "1282:35:11",
													"statements": [
														{
															"nativeSrc": "1292:19:11",
															"nodeType": "YulAssignment",
															"src": "1292:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:11"
																},
																"nativeSrc": "1302:9:11",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:11",
														"nodeType": "YulTypedName",
														"src": "1275:6:11",
														"type": ""
													}
												],
												"src": "1242:75:11"
											},
											{
												"body": {
													"nativeSrc": "1412:28:11",
													"nodeType": "YulBlock",
													"src": "1412:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:11"
																},
																"nativeSrc": "1422:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:11"
															},
															"nativeSrc": "1422:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:11"
											},
											{
												"body": {
													"nativeSrc": "1535:28:11",
													"nodeType": "YulBlock",
													"src": "1535:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:11"
																},
																"nativeSrc": "1545:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:11"
															},
															"nativeSrc": "1545:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:11"
											},
											{
												"body": {
													"nativeSrc": "1614:81:11",
													"nodeType": "YulBlock",
													"src": "1614:81:11",
													"statements": [
														{
															"nativeSrc": "1624:65:11",
															"nodeType": "YulAssignment",
															"src": "1624:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:11",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:11"
																},
																"nativeSrc": "1635:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:11",
														"nodeType": "YulTypedName",
														"src": "1596:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:11",
														"nodeType": "YulTypedName",
														"src": "1606:7:11",
														"type": ""
													}
												],
												"src": "1569:126:11"
											},
											{
												"body": {
													"nativeSrc": "1746:51:11",
													"nodeType": "YulBlock",
													"src": "1746:51:11",
													"statements": [
														{
															"nativeSrc": "1756:35:11",
															"nodeType": "YulAssignment",
															"src": "1756:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:11"
																},
																"nativeSrc": "1767:24:11",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:11",
														"nodeType": "YulTypedName",
														"src": "1728:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:11",
														"nodeType": "YulTypedName",
														"src": "1738:7:11",
														"type": ""
													}
												],
												"src": "1701:96:11"
											},
											{
												"body": {
													"nativeSrc": "1846:79:11",
													"nodeType": "YulBlock",
													"src": "1846:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:11",
																"nodeType": "YulBlock",
																"src": "1903:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:11"
																			},
																			"nativeSrc": "1905:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:11"
																		},
																		"nativeSrc": "1905:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:11"
																				},
																				"nativeSrc": "1876:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:11"
																		},
																		"nativeSrc": "1866:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:11"
																},
																"nativeSrc": "1859:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:11"
															},
															"nativeSrc": "1856:63:11",
															"nodeType": "YulIf",
															"src": "1856:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:11",
														"nodeType": "YulTypedName",
														"src": "1839:5:11",
														"type": ""
													}
												],
												"src": "1803:122:11"
											},
											{
												"body": {
													"nativeSrc": "1983:87:11",
													"nodeType": "YulBlock",
													"src": "1983:87:11",
													"statements": [
														{
															"nativeSrc": "1993:29:11",
															"nodeType": "YulAssignment",
															"src": "1993:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:11"
																},
																"nativeSrc": "2002:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:11"
																},
																"nativeSrc": "2031:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:11"
															},
															"nativeSrc": "2031:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:11",
														"nodeType": "YulTypedName",
														"src": "1961:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:11",
														"nodeType": "YulTypedName",
														"src": "1969:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:11",
														"nodeType": "YulTypedName",
														"src": "1977:5:11",
														"type": ""
													}
												],
												"src": "1931:139:11"
											},
											{
												"body": {
													"nativeSrc": "2121:32:11",
													"nodeType": "YulBlock",
													"src": "2121:32:11",
													"statements": [
														{
															"nativeSrc": "2131:16:11",
															"nodeType": "YulAssignment",
															"src": "2131:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:11",
																"nodeType": "YulIdentifier",
																"src": "2142:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:11",
														"nodeType": "YulTypedName",
														"src": "2103:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:11",
														"nodeType": "YulTypedName",
														"src": "2113:7:11",
														"type": ""
													}
												],
												"src": "2076:77:11"
											},
											{
												"body": {
													"nativeSrc": "2202:79:11",
													"nodeType": "YulBlock",
													"src": "2202:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:11",
																"nodeType": "YulBlock",
																"src": "2259:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:11"
																			},
																			"nativeSrc": "2261:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:11"
																		},
																		"nativeSrc": "2261:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:11"
																				},
																				"nativeSrc": "2232:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:11"
																		},
																		"nativeSrc": "2222:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:11"
																},
																"nativeSrc": "2215:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:11"
															},
															"nativeSrc": "2212:63:11",
															"nodeType": "YulIf",
															"src": "2212:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:11",
														"nodeType": "YulTypedName",
														"src": "2195:5:11",
														"type": ""
													}
												],
												"src": "2159:122:11"
											},
											{
												"body": {
													"nativeSrc": "2339:87:11",
													"nodeType": "YulBlock",
													"src": "2339:87:11",
													"statements": [
														{
															"nativeSrc": "2349:29:11",
															"nodeType": "YulAssignment",
															"src": "2349:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:11"
																},
																"nativeSrc": "2358:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:11"
																},
																"nativeSrc": "2387:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:11"
															},
															"nativeSrc": "2387:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:11",
														"nodeType": "YulTypedName",
														"src": "2317:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:11",
														"nodeType": "YulTypedName",
														"src": "2325:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:11",
														"nodeType": "YulTypedName",
														"src": "2333:5:11",
														"type": ""
													}
												],
												"src": "2287:139:11"
											},
											{
												"body": {
													"nativeSrc": "2515:391:11",
													"nodeType": "YulBlock",
													"src": "2515:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:11",
																"nodeType": "YulBlock",
																"src": "2561:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:11"
																			},
																			"nativeSrc": "2563:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:11"
																		},
																		"nativeSrc": "2563:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:11"
																		},
																		"nativeSrc": "2532:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:11"
																},
																"nativeSrc": "2528:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:11"
															},
															"nativeSrc": "2525:119:11",
															"nodeType": "YulIf",
															"src": "2525:119:11"
														},
														{
															"nativeSrc": "2654:117:11",
															"nodeType": "YulBlock",
															"src": "2654:117:11",
															"statements": [
																{
																	"nativeSrc": "2669:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:11"
																				},
																				"nativeSrc": "2729:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:11"
																		},
																		"nativeSrc": "2708:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:11",
															"nodeType": "YulBlock",
															"src": "2781:118:11",
															"statements": [
																{
																	"nativeSrc": "2796:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:11"
																				},
																				"nativeSrc": "2857:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:11"
																		},
																		"nativeSrc": "2836:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:11",
														"nodeType": "YulTypedName",
														"src": "2477:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:11",
														"nodeType": "YulTypedName",
														"src": "2488:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:11",
														"nodeType": "YulTypedName",
														"src": "2500:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:11",
														"nodeType": "YulTypedName",
														"src": "2508:6:11",
														"type": ""
													}
												],
												"src": "2432:474:11"
											},
											{
												"body": {
													"nativeSrc": "2954:48:11",
													"nodeType": "YulBlock",
													"src": "2954:48:11",
													"statements": [
														{
															"nativeSrc": "2964:32:11",
															"nodeType": "YulAssignment",
															"src": "2964:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:11"
																		},
																		"nativeSrc": "2982:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:11"
																},
																"nativeSrc": "2975:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:11",
														"nodeType": "YulTypedName",
														"src": "2936:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:11",
														"nodeType": "YulTypedName",
														"src": "2946:7:11",
														"type": ""
													}
												],
												"src": "2912:90:11"
											},
											{
												"body": {
													"nativeSrc": "3067:50:11",
													"nodeType": "YulBlock",
													"src": "3067:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:11"
																		},
																		"nativeSrc": "3089:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:11"
																},
																"nativeSrc": "3077:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:11"
															},
															"nativeSrc": "3077:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:11",
														"nodeType": "YulTypedName",
														"src": "3055:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:11",
														"nodeType": "YulTypedName",
														"src": "3062:3:11",
														"type": ""
													}
												],
												"src": "3008:109:11"
											},
											{
												"body": {
													"nativeSrc": "3215:118:11",
													"nodeType": "YulBlock",
													"src": "3215:118:11",
													"statements": [
														{
															"nativeSrc": "3225:26:11",
															"nodeType": "YulAssignment",
															"src": "3225:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:11"
																},
																"nativeSrc": "3233:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:11"
																		},
																		"nativeSrc": "3308:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:11"
																},
																"nativeSrc": "3261:65:11",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:11"
															},
															"nativeSrc": "3261:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:11",
														"nodeType": "YulTypedName",
														"src": "3187:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:11",
														"nodeType": "YulTypedName",
														"src": "3199:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:11",
														"nodeType": "YulTypedName",
														"src": "3210:4:11",
														"type": ""
													}
												],
												"src": "3123:210:11"
											},
											{
												"body": {
													"nativeSrc": "3404:53:11",
													"nodeType": "YulBlock",
													"src": "3404:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:11"
																		},
																		"nativeSrc": "3426:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:11"
																},
																"nativeSrc": "3414:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:11"
															},
															"nativeSrc": "3414:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:11",
														"nodeType": "YulTypedName",
														"src": "3392:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:11",
														"nodeType": "YulTypedName",
														"src": "3399:3:11",
														"type": ""
													}
												],
												"src": "3339:118:11"
											},
											{
												"body": {
													"nativeSrc": "3561:124:11",
													"nodeType": "YulBlock",
													"src": "3561:124:11",
													"statements": [
														{
															"nativeSrc": "3571:26:11",
															"nodeType": "YulAssignment",
															"src": "3571:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:11"
																},
																"nativeSrc": "3579:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:11"
																		},
																		"nativeSrc": "3660:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:11"
																},
																"nativeSrc": "3607:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:11"
															},
															"nativeSrc": "3607:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:11",
														"nodeType": "YulTypedName",
														"src": "3533:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:11",
														"nodeType": "YulTypedName",
														"src": "3545:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:11",
														"nodeType": "YulTypedName",
														"src": "3556:4:11",
														"type": ""
													}
												],
												"src": "3463:222:11"
											},
											{
												"body": {
													"nativeSrc": "3791:519:11",
													"nodeType": "YulBlock",
													"src": "3791:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:11",
																"nodeType": "YulBlock",
																"src": "3837:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:11"
																			},
																			"nativeSrc": "3839:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:11"
																		},
																		"nativeSrc": "3839:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:11"
																		},
																		"nativeSrc": "3808:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:11"
																},
																"nativeSrc": "3804:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:11"
															},
															"nativeSrc": "3801:119:11",
															"nodeType": "YulIf",
															"src": "3801:119:11"
														},
														{
															"nativeSrc": "3930:117:11",
															"nodeType": "YulBlock",
															"src": "3930:117:11",
															"statements": [
																{
																	"nativeSrc": "3945:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:11"
																				},
																				"nativeSrc": "4005:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:11"
																		},
																		"nativeSrc": "3984:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:11",
															"nodeType": "YulBlock",
															"src": "4057:118:11",
															"statements": [
																{
																	"nativeSrc": "4072:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:11"
																				},
																				"nativeSrc": "4133:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:11"
																		},
																		"nativeSrc": "4112:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:11",
															"nodeType": "YulBlock",
															"src": "4185:118:11",
															"statements": [
																{
																	"nativeSrc": "4200:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:11"
																				},
																				"nativeSrc": "4261:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:11"
																		},
																		"nativeSrc": "4240:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:11",
														"nodeType": "YulTypedName",
														"src": "3745:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:11",
														"nodeType": "YulTypedName",
														"src": "3756:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:11",
														"nodeType": "YulTypedName",
														"src": "3768:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:11",
														"nodeType": "YulTypedName",
														"src": "3776:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:11",
														"nodeType": "YulTypedName",
														"src": "3784:6:11",
														"type": ""
													}
												],
												"src": "3691:619:11"
											},
											{
												"body": {
													"nativeSrc": "4359:43:11",
													"nodeType": "YulBlock",
													"src": "4359:43:11",
													"statements": [
														{
															"nativeSrc": "4369:27:11",
															"nodeType": "YulAssignment",
															"src": "4369:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:11"
																},
																"nativeSrc": "4380:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:11",
														"nodeType": "YulTypedName",
														"src": "4341:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:11",
														"nodeType": "YulTypedName",
														"src": "4351:7:11",
														"type": ""
													}
												],
												"src": "4316:86:11"
											},
											{
												"body": {
													"nativeSrc": "4469:51:11",
													"nodeType": "YulBlock",
													"src": "4469:51:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:11",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:11"
																		},
																		"nativeSrc": "4491:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:11"
																},
																"nativeSrc": "4479:35:11",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:11"
															},
															"nativeSrc": "4479:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:11"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:11",
														"nodeType": "YulTypedName",
														"src": "4457:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:11",
														"nodeType": "YulTypedName",
														"src": "4464:3:11",
														"type": ""
													}
												],
												"src": "4408:112:11"
											},
											{
												"body": {
													"nativeSrc": "4620:120:11",
													"nodeType": "YulBlock",
													"src": "4620:120:11",
													"statements": [
														{
															"nativeSrc": "4630:26:11",
															"nodeType": "YulAssignment",
															"src": "4630:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:11"
																},
																"nativeSrc": "4638:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:11"
																		},
																		"nativeSrc": "4715:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:11"
																},
																"nativeSrc": "4666:67:11",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:11"
															},
															"nativeSrc": "4666:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:11",
														"nodeType": "YulTypedName",
														"src": "4592:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:11",
														"nodeType": "YulTypedName",
														"src": "4604:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:11",
														"nodeType": "YulTypedName",
														"src": "4615:4:11",
														"type": ""
													}
												],
												"src": "4526:214:11"
											},
											{
												"body": {
													"nativeSrc": "4812:263:11",
													"nodeType": "YulBlock",
													"src": "4812:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:11",
																"nodeType": "YulBlock",
																"src": "4858:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:11"
																			},
																			"nativeSrc": "4860:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:11"
																		},
																		"nativeSrc": "4860:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:11"
																		},
																		"nativeSrc": "4829:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:11"
																},
																"nativeSrc": "4825:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:11"
															},
															"nativeSrc": "4822:119:11",
															"nodeType": "YulIf",
															"src": "4822:119:11"
														},
														{
															"nativeSrc": "4951:117:11",
															"nodeType": "YulBlock",
															"src": "4951:117:11",
															"statements": [
																{
																	"nativeSrc": "4966:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:11"
																				},
																				"nativeSrc": "5026:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5005:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:11"
																		},
																		"nativeSrc": "5005:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4746:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:11",
														"nodeType": "YulTypedName",
														"src": "4782:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:11",
														"nodeType": "YulTypedName",
														"src": "4793:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:11",
														"nodeType": "YulTypedName",
														"src": "4805:6:11",
														"type": ""
													}
												],
												"src": "4746:329:11"
											},
											{
												"body": {
													"nativeSrc": "5147:263:11",
													"nodeType": "YulBlock",
													"src": "5147:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:11",
																"nodeType": "YulBlock",
																"src": "5193:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:11"
																			},
																			"nativeSrc": "5195:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:11"
																		},
																		"nativeSrc": "5195:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:11"
																		},
																		"nativeSrc": "5164:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:11"
																},
																"nativeSrc": "5160:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:11"
															},
															"nativeSrc": "5157:119:11",
															"nodeType": "YulIf",
															"src": "5157:119:11"
														},
														{
															"nativeSrc": "5286:117:11",
															"nodeType": "YulBlock",
															"src": "5286:117:11",
															"statements": [
																{
																	"nativeSrc": "5301:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:11"
																				},
																				"nativeSrc": "5361:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:11"
																		},
																		"nativeSrc": "5340:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:11",
														"nodeType": "YulTypedName",
														"src": "5117:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:11",
														"nodeType": "YulTypedName",
														"src": "5128:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:11",
														"nodeType": "YulTypedName",
														"src": "5140:6:11",
														"type": ""
													}
												],
												"src": "5081:329:11"
											},
											{
												"body": {
													"nativeSrc": "5481:53:11",
													"nodeType": "YulBlock",
													"src": "5481:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:11"
																		},
																		"nativeSrc": "5503:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:11"
																},
																"nativeSrc": "5491:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:11"
															},
															"nativeSrc": "5491:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:11",
														"nodeType": "YulTypedName",
														"src": "5469:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:11",
														"nodeType": "YulTypedName",
														"src": "5476:3:11",
														"type": ""
													}
												],
												"src": "5416:118:11"
											},
											{
												"body": {
													"nativeSrc": "5638:124:11",
													"nodeType": "YulBlock",
													"src": "5638:124:11",
													"statements": [
														{
															"nativeSrc": "5648:26:11",
															"nodeType": "YulAssignment",
															"src": "5648:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:11"
																},
																"nativeSrc": "5656:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:11"
																		},
																		"nativeSrc": "5737:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:11"
																},
																"nativeSrc": "5684:71:11",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:11"
															},
															"nativeSrc": "5684:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:11",
														"nodeType": "YulTypedName",
														"src": "5610:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:11",
														"nodeType": "YulTypedName",
														"src": "5622:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:11",
														"nodeType": "YulTypedName",
														"src": "5633:4:11",
														"type": ""
													}
												],
												"src": "5540:222:11"
											},
											{
												"body": {
													"nativeSrc": "5851:391:11",
													"nodeType": "YulBlock",
													"src": "5851:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:11",
																"nodeType": "YulBlock",
																"src": "5897:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:11"
																			},
																			"nativeSrc": "5899:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:11"
																		},
																		"nativeSrc": "5899:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:11"
																		},
																		"nativeSrc": "5868:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:11"
																},
																"nativeSrc": "5864:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:11"
															},
															"nativeSrc": "5861:119:11",
															"nodeType": "YulIf",
															"src": "5861:119:11"
														},
														{
															"nativeSrc": "5990:117:11",
															"nodeType": "YulBlock",
															"src": "5990:117:11",
															"statements": [
																{
																	"nativeSrc": "6005:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:11"
																				},
																				"nativeSrc": "6065:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:11"
																		},
																		"nativeSrc": "6044:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:11",
															"nodeType": "YulBlock",
															"src": "6117:118:11",
															"statements": [
																{
																	"nativeSrc": "6132:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:11"
																				},
																				"nativeSrc": "6193:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:11"
																		},
																		"nativeSrc": "6172:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:11",
														"nodeType": "YulTypedName",
														"src": "5813:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:11",
														"nodeType": "YulTypedName",
														"src": "5824:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:11",
														"nodeType": "YulTypedName",
														"src": "5836:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:11",
														"nodeType": "YulTypedName",
														"src": "5844:6:11",
														"type": ""
													}
												],
												"src": "5768:474:11"
											},
											{
												"body": {
													"nativeSrc": "6276:152:11",
													"nodeType": "YulBlock",
													"src": "6276:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:11",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:11"
																},
																"nativeSrc": "6286:88:11",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:11"
															},
															"nativeSrc": "6286:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:11"
																},
																"nativeSrc": "6383:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:11"
															},
															"nativeSrc": "6383:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:11"
																},
																"nativeSrc": "6407:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:11"
															},
															"nativeSrc": "6407:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:11"
											},
											{
												"body": {
													"nativeSrc": "6485:269:11",
													"nodeType": "YulBlock",
													"src": "6485:269:11",
													"statements": [
														{
															"nativeSrc": "6495:22:11",
															"nodeType": "YulAssignment",
															"src": "6495:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:11"
																},
																"nativeSrc": "6505:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:11"
																}
															]
														},
														{
															"nativeSrc": "6526:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:11"
																},
																"nativeSrc": "6552:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:11",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:11",
																"nodeType": "YulBlock",
																"src": "6603:51:11",
																"statements": [
																	{
																		"nativeSrc": "6617:27:11",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:11",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:11"
																			},
																			"nativeSrc": "6627:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:11"
																},
																"nativeSrc": "6576:26:11",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:11"
															},
															"nativeSrc": "6573:81:11",
															"nodeType": "YulIf",
															"src": "6573:81:11"
														},
														{
															"body": {
																"nativeSrc": "6706:42:11",
																"nodeType": "YulBlock",
																"src": "6706:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:11"
																			},
																			"nativeSrc": "6720:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:11"
																		},
																		"nativeSrc": "6720:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:11"
																		},
																		"nativeSrc": "6690:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:11"
																},
																"nativeSrc": "6667:38:11",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:11"
															},
															"nativeSrc": "6664:84:11",
															"nodeType": "YulIf",
															"src": "6664:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:11",
														"nodeType": "YulTypedName",
														"src": "6469:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:11",
														"nodeType": "YulTypedName",
														"src": "6478:6:11",
														"type": ""
													}
												],
												"src": "6434:320:11"
											},
											{
												"body": {
													"nativeSrc": "6914:288:11",
													"nodeType": "YulBlock",
													"src": "6914:288:11",
													"statements": [
														{
															"nativeSrc": "6924:26:11",
															"nodeType": "YulAssignment",
															"src": "6924:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6936:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6936:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6947:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6947:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6932:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6932:3:11"
																},
																"nativeSrc": "6932:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6932:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6924:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6924:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7004:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7004:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7017:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7017:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7028:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7028:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7013:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7013:3:11"
																		},
																		"nativeSrc": "7013:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7013:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6960:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6960:43:11"
																},
																"nativeSrc": "6960:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6960:71:11"
															},
															"nativeSrc": "6960:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6960:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7085:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7085:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7098:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7098:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7109:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7109:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7094:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7094:3:11"
																		},
																		"nativeSrc": "7094:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7094:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7041:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7041:43:11"
																},
																"nativeSrc": "7041:72:11",
																"nodeType": "YulFunctionCall",
																"src": "7041:72:11"
															},
															"nativeSrc": "7041:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "7041:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7167:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7167:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7180:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7180:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7191:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7191:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7176:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7176:3:11"
																		},
																		"nativeSrc": "7176:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7176:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7123:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7123:43:11"
																},
																"nativeSrc": "7123:72:11",
																"nodeType": "YulFunctionCall",
																"src": "7123:72:11"
															},
															"nativeSrc": "7123:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "7123:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6760:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6870:9:11",
														"nodeType": "YulTypedName",
														"src": "6870:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6882:6:11",
														"nodeType": "YulTypedName",
														"src": "6882:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6890:6:11",
														"nodeType": "YulTypedName",
														"src": "6890:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6898:6:11",
														"nodeType": "YulTypedName",
														"src": "6898:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6909:4:11",
														"nodeType": "YulTypedName",
														"src": "6909:4:11",
														"type": ""
													}
												],
												"src": "6760:442:11"
											},
											{
												"body": {
													"nativeSrc": "7236:152:11",
													"nodeType": "YulBlock",
													"src": "7236:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7253:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7253:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7256:77:11",
																		"nodeType": "YulLiteral",
																		"src": "7256:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7246:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7246:6:11"
																},
																"nativeSrc": "7246:88:11",
																"nodeType": "YulFunctionCall",
																"src": "7246:88:11"
															},
															"nativeSrc": "7246:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "7246:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7350:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7350:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7353:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7353:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7343:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7343:6:11"
																},
																"nativeSrc": "7343:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7343:15:11"
															},
															"nativeSrc": "7343:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7343:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7374:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7374:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7377:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7377:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7367:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7367:6:11"
																},
																"nativeSrc": "7367:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7367:15:11"
															},
															"nativeSrc": "7367:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7367:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7208:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7208:180:11"
											},
											{
												"body": {
													"nativeSrc": "7438:147:11",
													"nodeType": "YulBlock",
													"src": "7438:147:11",
													"statements": [
														{
															"nativeSrc": "7448:25:11",
															"nodeType": "YulAssignment",
															"src": "7448:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7471:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7471:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7453:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7453:17:11"
																},
																"nativeSrc": "7453:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7453:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7448:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "7448:1:11"
																}
															]
														},
														{
															"nativeSrc": "7482:25:11",
															"nodeType": "YulAssignment",
															"src": "7482:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7505:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7505:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7487:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7487:17:11"
																},
																"nativeSrc": "7487:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7487:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7482:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "7482:1:11"
																}
															]
														},
														{
															"nativeSrc": "7516:16:11",
															"nodeType": "YulAssignment",
															"src": "7516:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7527:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7527:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7530:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7530:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7523:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7523:3:11"
																},
																"nativeSrc": "7523:9:11",
																"nodeType": "YulFunctionCall",
																"src": "7523:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7516:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7516:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7556:22:11",
																"nodeType": "YulBlock",
																"src": "7556:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7558:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7558:16:11"
																			},
																			"nativeSrc": "7558:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7558:18:11"
																		},
																		"nativeSrc": "7558:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7558:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7548:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7548:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7551:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7551:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7545:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7545:2:11"
																},
																"nativeSrc": "7545:10:11",
																"nodeType": "YulFunctionCall",
																"src": "7545:10:11"
															},
															"nativeSrc": "7542:36:11",
															"nodeType": "YulIf",
															"src": "7542:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7394:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7425:1:11",
														"nodeType": "YulTypedName",
														"src": "7425:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7428:1:11",
														"nodeType": "YulTypedName",
														"src": "7428:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7434:3:11",
														"nodeType": "YulTypedName",
														"src": "7434:3:11",
														"type": ""
													}
												],
												"src": "7394:191:11"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100f3575f3560e01c806370a082311161009557806395d89b411161006457806395d89b4114610271578063a9059cbb1461028f578063dd62ed3e146102bf578063f2fde38b146102ef576100f3565b806370a08231146101fd578063715018a61461022d57806379cc6790146102375780638da5cb5b14610253576100f3565b806323b872dd116100d157806323b872dd14610163578063313ce5671461019357806340c10f19146101b157806342966c68146101e1576100f3565b806306fdde03146100f7578063095ea7b31461011557806318160ddd14610145575b5f5ffd5b6100ff61030b565b60405161010c9190610ff3565b60405180910390f35b61012f600480360381019061012a91906110a4565b61039b565b60405161013c91906110fc565b60405180910390f35b61014d6103bd565b60405161015a9190611124565b60405180910390f35b61017d6004803603810190610178919061113d565b6103c6565b60405161018a91906110fc565b60405180910390f35b61019b6103f4565b6040516101a891906111a8565b60405180910390f35b6101cb60048036038101906101c691906110a4565b6103fc565b6040516101d891906110fc565b60405180910390f35b6101fb60048036038101906101f691906111c1565b6104b7565b005b610217600480360381019061021291906111ec565b61054b565b6040516102249190611124565b60405180910390f35b610235610590565b005b610251600480360381019061024c91906110a4565b6105a3565b005b61025b6105c3565b6040516102689190611226565b60405180910390f35b6102796105eb565b6040516102869190610ff3565b60405180910390f35b6102a960048036038101906102a491906110a4565b61067b565b6040516102b691906110fc565b60405180910390f35b6102d960048036038101906102d4919061123f565b61069d565b6040516102e69190611124565b60405180910390f35b610309600480360381019061030491906111ec565b61071f565b005b60606003805461031a906112aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610346906112aa565b80156103915780601f1061036857610100808354040283529160200191610391565b820191905f5260205f20905b81548152906001019060200180831161037457829003601f168201915b5050505050905090565b5f5f6103a56107a3565b90506103b28185856107aa565b600191505092915050565b5f600254905090565b5f5f6103d06107a3565b90506103dd8582856107bc565b6103e885858561084f565b60019150509392505050565b5f6012905090565b5f61040561093f565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361046a576040517ff3c190e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f82116104a3576040517fae8ba12300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104ad83836109c6565b6001905092915050565b6104bf61093f565b5f6104c93361054b565b90505f8211610504576040517fae8ba12300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181101561053e576040517ffe9c6abb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61054782610a45565b5050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61059861093f565b6105a15f610a59565b565b6105b5826105af6107a3565b836107bc565b6105bf8282610b1c565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105fa906112aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610626906112aa565b80156106715780601f1061064857610100808354040283529160200191610671565b820191905f5260205f20905b81548152906001019060200180831161065457829003601f168201915b5050505050905090565b5f5f6106856107a3565b905061069281858561084f565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61072761093f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610797575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161078e9190611226565b60405180910390fd5b6107a081610a59565b50565b5f33905090565b6107b78383836001610b9b565b505050565b5f6107c7848461069d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610849578181101561083a578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610831939291906112da565b60405180910390fd5b61084884848484035f610b9b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108bf575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108b69190611226565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361092f575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109269190611226565b60405180910390fd5b61093a838383610d6a565b505050565b6109476107a3565b73ffffffffffffffffffffffffffffffffffffffff166109656105c3565b73ffffffffffffffffffffffffffffffffffffffff16146109c4576109886107a3565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109bb9190611226565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a36575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a2d9190611226565b60405180910390fd5b610a415f8383610d6a565b5050565b610a56610a506107a3565b82610b1c565b50565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b8c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b839190611226565b60405180910390fd5b610b97825f83610d6a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c0b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c029190611226565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c7b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c729190611226565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610d64578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d5b9190611124565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610dba578060025f828254610dae919061133c565b92505081905550610e88565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e43578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e3a939291906112da565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ecf578060025f8282540392505081905550610f19565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f769190611124565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610fc582610f83565b610fcf8185610f8d565b9350610fdf818560208601610f9d565b610fe881610fab565b840191505092915050565b5f6020820190508181035f83015261100b8184610fbb565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61104082611017565b9050919050565b61105081611036565b811461105a575f5ffd5b50565b5f8135905061106b81611047565b92915050565b5f819050919050565b61108381611071565b811461108d575f5ffd5b50565b5f8135905061109e8161107a565b92915050565b5f5f604083850312156110ba576110b9611013565b5b5f6110c78582860161105d565b92505060206110d885828601611090565b9150509250929050565b5f8115159050919050565b6110f6816110e2565b82525050565b5f60208201905061110f5f8301846110ed565b92915050565b61111e81611071565b82525050565b5f6020820190506111375f830184611115565b92915050565b5f5f5f6060848603121561115457611153611013565b5b5f6111618682870161105d565b93505060206111728682870161105d565b925050604061118386828701611090565b9150509250925092565b5f60ff82169050919050565b6111a28161118d565b82525050565b5f6020820190506111bb5f830184611199565b92915050565b5f602082840312156111d6576111d5611013565b5b5f6111e384828501611090565b91505092915050565b5f6020828403121561120157611200611013565b5b5f61120e8482850161105d565b91505092915050565b61122081611036565b82525050565b5f6020820190506112395f830184611217565b92915050565b5f5f6040838503121561125557611254611013565b5b5f6112628582860161105d565b92505060206112738582860161105d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806112c157607f821691505b6020821081036112d4576112d361127d565b5b50919050565b5f6060820190506112ed5f830186611217565b6112fa6020830185611115565b6113076040830184611115565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61134682611071565b915061135183611071565b92508282019050808211156113695761136861130f565b5b9291505056fea26469706673582212201a04c4f724e0387bd78fcc1d53528f5769f48992d7e4e7b7e569af4013ab236764736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2EF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x253 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1E1 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x11C1 JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x590 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x5A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25B PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x69D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31A SWAP1 PUSH2 0x12AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x346 SWAP1 PUSH2 0x12AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x391 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x368 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x391 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x374 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3A5 PUSH2 0x7A3 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B2 DUP2 DUP6 DUP6 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3D0 PUSH2 0x7A3 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DD DUP6 DUP3 DUP6 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x3E8 DUP6 DUP6 DUP6 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x405 PUSH2 0x93F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x46A JUMPI PUSH1 0x40 MLOAD PUSH32 0xF3C190E900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE8BA12300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AD DUP4 DUP4 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x93F JUMP JUMPDEST PUSH0 PUSH2 0x4C9 CALLER PUSH2 0x54B JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAE8BA12300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH32 0xFE9C6ABB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x547 DUP3 PUSH2 0xA45 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x598 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x5A1 PUSH0 PUSH2 0xA59 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5B5 DUP3 PUSH2 0x5AF PUSH2 0x7A3 JUMP JUMPDEST DUP4 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x5BF DUP3 DUP3 PUSH2 0xB1C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5FA SWAP1 PUSH2 0x12AA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x626 SWAP1 PUSH2 0x12AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x671 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x648 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x671 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x654 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x685 PUSH2 0x7A3 JUMP JUMPDEST SWAP1 POP PUSH2 0x692 DUP2 DUP6 DUP6 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x727 PUSH2 0x93F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x797 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78E SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A0 DUP2 PUSH2 0xA59 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7B7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB9B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7C7 DUP5 DUP5 PUSH2 0x69D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x849 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x83A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x848 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xB9B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8BF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93A DUP4 DUP4 DUP4 PUSH2 0xD6A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x947 PUSH2 0x7A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x965 PUSH2 0x5C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C4 JUMPI PUSH2 0x988 PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BB SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA41 PUSH0 DUP4 DUP4 PUSH2 0xD6A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA56 PUSH2 0xA50 PUSH2 0x7A3 JUMP JUMPDEST DUP3 PUSH2 0xB1C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB83 SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB97 DUP3 PUSH0 DUP4 PUSH2 0xD6A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC0B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC02 SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC7B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC72 SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD64 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDBA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x133C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE88 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE43 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF19 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFC5 DUP3 PUSH2 0xF83 JUMP JUMPDEST PUSH2 0xFCF DUP2 DUP6 PUSH2 0xF8D JUMP JUMPDEST SWAP4 POP PUSH2 0xFDF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF9D JUMP JUMPDEST PUSH2 0xFE8 DUP2 PUSH2 0xFAB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x100B DUP2 DUP5 PUSH2 0xFBB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1040 DUP3 PUSH2 0x1017 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1050 DUP2 PUSH2 0x1036 JUMP JUMPDEST DUP2 EQ PUSH2 0x105A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x106B DUP2 PUSH2 0x1047 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1083 DUP2 PUSH2 0x1071 JUMP JUMPDEST DUP2 EQ PUSH2 0x108D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x109E DUP2 PUSH2 0x107A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10BA JUMPI PUSH2 0x10B9 PUSH2 0x1013 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C7 DUP6 DUP3 DUP7 ADD PUSH2 0x105D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10D8 DUP6 DUP3 DUP7 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F6 DUP2 PUSH2 0x10E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x110F PUSH0 DUP4 ADD DUP5 PUSH2 0x10ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x111E DUP2 PUSH2 0x1071 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1137 PUSH0 DUP4 ADD DUP5 PUSH2 0x1115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1154 JUMPI PUSH2 0x1153 PUSH2 0x1013 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1161 DUP7 DUP3 DUP8 ADD PUSH2 0x105D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1172 DUP7 DUP3 DUP8 ADD PUSH2 0x105D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1183 DUP7 DUP3 DUP8 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A2 DUP2 PUSH2 0x118D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11BB PUSH0 DUP4 ADD DUP5 PUSH2 0x1199 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D6 JUMPI PUSH2 0x11D5 PUSH2 0x1013 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11E3 DUP5 DUP3 DUP6 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1201 JUMPI PUSH2 0x1200 PUSH2 0x1013 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x120E DUP5 DUP3 DUP6 ADD PUSH2 0x105D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1220 DUP2 PUSH2 0x1036 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1239 PUSH0 DUP4 ADD DUP5 PUSH2 0x1217 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1255 JUMPI PUSH2 0x1254 PUSH2 0x1013 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1262 DUP6 DUP3 DUP7 ADD PUSH2 0x105D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1273 DUP6 DUP3 DUP7 ADD PUSH2 0x105D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12C1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12D4 JUMPI PUSH2 0x12D3 PUSH2 0x127D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12ED PUSH0 DUP4 ADD DUP7 PUSH2 0x1217 JUMP JUMPDEST PUSH2 0x12FA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x1307 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1115 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1346 DUP3 PUSH2 0x1071 JUMP JUMPDEST SWAP2 POP PUSH2 0x1351 DUP4 PUSH2 0x1071 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1369 JUMPI PUSH2 0x1368 PUSH2 0x130F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE DIV 0xC4 0xF7 0x24 RJUMP 0x387B 0xD7 DUP16 0xCC SAR MSTORE8 MSTORE DUP16 JUMPI PUSH10 0xF48992D7E4E7B7E569AF BLOCKHASH SGT 0xAB 0x23 PUSH8 0x64736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "655:1076:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1372:356:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;988:376;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2933:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;1372:356:10:-;1442:4;1531:13:0;:11;:13::i;:::-;1477:1:10::1;1462:17;;:3;:17;;::::0;1458:98:::1;;1503:41;;;;;;;;;;;;;;1458:98;1581:1;1570:7;:12;1566:103;;1606:51;;;;;;;;;;;;;;1566:103;1679:19;1685:3;1690:7;1679:5;:19::i;:::-;1716:4;1709:11;;1372:356:::0;;;;:::o;988:376::-;1531:13:0;:11;:13::i;:::-;1056:15:10::1;1074:21;1084:10;1074:9;:21::i;:::-;1056:39;;1121:1;1110:7;:12;1106:103;;1146:51;;;;;;;;;;;;;;1106:103;1233:7;1223;:17;1219:108;;;1264:51;;;;;;;;;;;;;;1219:108;1337:19;1348:7;1337:10;:19::i;:::-;1045:319;988:376:::0;:::o;2933:116:2:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:4:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3244:178::-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;3455:140::-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8630:128:2:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7362:208:2:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;618:87:4:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7888:206:2:-;7977:1;7958:21;;:7;:21;;;7954:89;;8029:1;8002:30;;;;;;;;;;;:::i;:::-;;;;;;;;7954:89;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;:::-;7888:206;;:::o;9605:432::-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:442::-;6909:4;6947:2;6936:9;6932:18;6924:26;;6960:71;7028:1;7017:9;7013:17;7004:6;6960:71;:::i;:::-;7041:72;7109:2;7098:9;7094:18;7085:6;7041:72;:::i;:::-;7123;7191:2;7180:9;7176:18;7167:6;7123:72;:::i;:::-;6760:442;;;;;;:::o;7208:180::-;7256:77;7253:1;7246:88;7353:4;7350:1;7343:15;7377:4;7374:1;7367:15;7394:191;7434:3;7453:20;7471:1;7453:20;:::i;:::-;7448:25;;7487:20;7505:1;7487:20;:::i;:::-;7482:25;;7530:1;7527;7523:9;7516:16;;7551:3;7548:1;7545:10;7542:36;;;7558:18;;:::i;:::-;7542:36;7394:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1005800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "383",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 655,
									"end": 1731,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 655,
									"end": 1731,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 655,
									"end": 1731,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 906,
									"end": 980,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 906,
									"end": 980,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 906,
									"end": 980,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 906,
									"end": 980,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 906,
									"end": 980,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 906,
									"end": 980,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 980,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 980,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 906,
									"end": 980,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 906,
									"end": 980,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 906,
									"end": 980,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 967,
									"end": 977,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "446563656E7472616C697A6564537461626C65436F696E000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "4453430000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 655,
									"end": 1731,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 655,
									"end": 1731,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 655,
									"end": 1731,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 655,
									"end": 1731,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 655,
									"end": 1731,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 655,
									"end": 1731,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 655,
									"end": 1731,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 655,
									"end": 1731,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 655,
									"end": 1731,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 655,
									"end": 1731,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 655,
									"end": 1731,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201a04c4f724e0387bd78fcc1d53528f5769f48992d7e4e7b7e569af4013ab236764736f6c634300081e0033",
									".code": [
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "79CC6790"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "42966C68"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 1731,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1372,
											"end": 1728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1372,
											"end": 1728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1372,
											"end": 1728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 988,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 988,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1446,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1462,
											"end": 1479,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1465,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1462,
											"end": 1479,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1479,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1458,
											"end": 1556,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1544,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "F3C190E900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1503,
											"end": 1544,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1544,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1503,
											"end": 1544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1544,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1544,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1544,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1544,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1544,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1458,
											"end": 1556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1577,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1582,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1669,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1566,
											"end": 1669,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1657,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "AE8BA12300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1606,
											"end": 1657,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1657,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1606,
											"end": 1657,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1657,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1657,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1657,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1657,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1657,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1657,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1669,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1566,
											"end": 1669,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1698,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1685,
											"end": 1688,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1697,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1684,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1679,
											"end": 1698,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1698,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1679,
											"end": 1698,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1716,
											"end": 1720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1709,
											"end": 1720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1372,
											"end": 1728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1056,
											"end": 1071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1084,
											"end": 1094,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1074,
											"end": 1095,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1074,
											"end": 1095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1074,
											"end": 1095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1117,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1110,
											"end": 1122,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 1209,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1106,
											"end": 1209,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 1197,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "AE8BA12300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1146,
											"end": 1197,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1197,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1146,
											"end": 1197,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 1197,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1197,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1197,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1197,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1197,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1106,
											"end": 1209,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1106,
											"end": 1209,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1233,
											"end": 1240,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1230,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1240,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1219,
											"end": 1327,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1219,
											"end": 1327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1219,
											"end": 1327,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1315,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FE9C6ABB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1264,
											"end": 1315,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1315,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1264,
											"end": 1315,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1315,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1315,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1315,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1315,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1315,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1219,
											"end": 1327,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1219,
											"end": 1327,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 1348,
											"end": 1355,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 1337,
											"end": 1356,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 1337,
											"end": 1356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1364,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7451,
											"end": 7452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7439,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 7476,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 7528,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7362,
											"end": 7570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7977,
											"end": 7978,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8029,
											"end": 8030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 8002,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8086,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8052,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 8052,
											"end": 8087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7888,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6909,
											"end": 6913,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6949,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6936,
											"end": 6945,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6924,
											"end": 6950,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6924,
											"end": 6950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 7028,
											"end": 7029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7013,
											"end": 7030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7004,
											"end": 7010,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 6960,
											"end": 7031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 7109,
											"end": 7111,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7098,
											"end": 7107,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 7041,
											"end": 7113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 7191,
											"end": 7193,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7180,
											"end": 7189,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7167,
											"end": 7173,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 7123,
											"end": 7195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6760,
											"end": 7202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7208,
											"end": 7388,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 7208,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7256,
											"end": 7333,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7253,
											"end": 7254,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7334,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7357,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 7350,
											"end": 7351,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7343,
											"end": 7358,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7377,
											"end": 7381,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7374,
											"end": 7375,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7382,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7434,
											"end": 7437,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 7471,
											"end": 7472,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 7453,
											"end": 7473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7448,
											"end": 7473,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7448,
											"end": 7473,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 7487,
											"end": 7507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7482,
											"end": 7507,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7482,
											"end": 7507,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7527,
											"end": 7528,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7523,
											"end": 7532,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7516,
											"end": 7532,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7516,
											"end": 7532,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7551,
											"end": 7554,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7548,
											"end": 7549,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7545,
											"end": 7555,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 7558,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"lib/localDependencies/AggregatorV3Interface.sol",
								"src/DSCEngine.sol",
								"src/DecentralizedStableCoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DecentralizedStableCoin__AmountMustBeMoreThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DecentralizedStableCoin__BurnAmountExceedsBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DecentralizedStableCoin__NotZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DecentralizedStableCoin.sol\":\"DecentralizedStableCoin\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/DecentralizedStableCoin.sol\":{\"keccak256\":\"0x4a3e802d9667cbd25836b5e05a60f689dd8d3abe68772cea10cf661b672fe139\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://aa433a27ca82c4d0a313b24ca7e8cd3798e87fe3464b6c53c88ae4d0c4e8da01\",\"dweb:/ipfs/QmdhKNYk5PvqQ5J5GFHScNJDGVHPeL7msZwuwukqKXHFW2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "src/DecentralizedStableCoin.sol:DecentralizedStableCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "src/DecentralizedStableCoin.sol:DecentralizedStableCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "src/DecentralizedStableCoin.sol:DecentralizedStableCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "src/DecentralizedStableCoin.sol:DecentralizedStableCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "src/DecentralizedStableCoin.sol:DecentralizedStableCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "src/DecentralizedStableCoin.sol:DecentralizedStableCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 980,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								979
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 950,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 980,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2864:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2881:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2874:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2855:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:2"
									},
									"scope": 799,
									"src": "2803:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3007:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3024:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3034:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3017:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2952:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2998:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:2"
									},
									"scope": 799,
									"src": "2933:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3319:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3329:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3345:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3377:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3384:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3388:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3367:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3404:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3262:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3274:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3313:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:2"
									},
									"scope": 799,
									"src": "3244:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3544:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3561:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3573:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3580:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3554:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3474:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3489:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3535:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:2"
									},
									"scope": 799,
									"src": "3455:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3981:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "3991:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4007:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4038:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4045:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4054:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4070:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3919:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3936:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3975:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:2"
									},
									"scope": 799,
									"src": "3902:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4773:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4783:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4801:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4839:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4845:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4854:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4823:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4880:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4886:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4890:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4870:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4906:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4702:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4716:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4728:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4767:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:2"
									},
									"scope": 799,
									"src": "4680:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5366:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5380:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5376:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5400:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5421:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5414:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5475:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5471:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5493:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5514:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5507:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5580:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5584:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5566:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5316:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5330:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:2"
									},
									"scope": 799,
									"src": "5297:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5987:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6001:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6175:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6189:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6211:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6221:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6244:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6258:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6240:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6265:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6315:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6321:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6334:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6290:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6475:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6485:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6493:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6507:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "5997:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6021:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6137:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6153:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6551:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6766:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6925:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "6935:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6942:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6547:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6569:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6714:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6730:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "6996:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7002:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7006:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "6987:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "6982:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5929:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5943:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5955:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:2"
									},
									"scope": 799,
									"src": "5912:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7418:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7432:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7428:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7455:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7476:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7469:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7557:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7377:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7394:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:2"
									},
									"scope": 799,
									"src": "7362:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "7944:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "7958:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "7954:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "7981:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8002:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "7995:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8060:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8081:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8052:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7920:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:2"
									},
									"scope": 799,
									"src": "7888:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8704:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8723:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8739:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8714:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8648:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8663:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8680:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:2"
									},
									"scope": 799,
									"src": "8630:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9703:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9717:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9713:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9738:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9759:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9752:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9815:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9811:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9838:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9859:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9852:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9910:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9922:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9929:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "9940:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "9959:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "9955:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "9970:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9998:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10005:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10014:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "9989:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "9984:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9623:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9638:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9670:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:2"
									},
									"scope": 799,
									"src": "9605:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10408:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10418:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10455:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10462:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10445:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10484:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10480:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10522:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10540:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10559:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10536:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10566:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10618:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10627:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10645:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10591:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10716:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10723:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10732:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10751:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10707:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10359:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10376:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:2"
									},
									"scope": 799,
									"src": "10319:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9691:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10693:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "215:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "397:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "406:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "428:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:3"
									},
									"src": "391:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "628:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "637:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "660:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "685:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:3"
									},
									"src": "622:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "822:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:3"
									},
									"scope": 877,
									"src": "776:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "972:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:3"
									},
									"scope": 877,
									"src": "913:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1223:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1235:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 877,
									"src": "1205:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 877,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2327:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:3"
									},
									"scope": 877,
									"src": "2310:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2713:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2727:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2739:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2772:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:3"
									},
									"scope": 877,
									"src": "2691:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "205:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2675:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 980,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 950,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 949,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 949,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 945,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 949,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 950,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 957,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 956,
												"id": 959,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 979,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 966,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 965,
												"id": 968,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 963,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 979,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 974,
												"id": 976,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 979,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1048
						]
					},
					"id": 1049,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 982,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:7",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1048,
							"linearizedBaseContracts": [
								1048
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 985,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "1818:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 983,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 984,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 988,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "1864:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 986,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 987,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 990,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "1907:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 989,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:7",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 993,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:7"
									},
									"src": "1994:37:7"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "2051:38:7",
										"statements": [
											{
												"expression": {
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 996,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2061:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 997,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "2071:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:7"
											}
										]
									},
									"id": 1001,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:7"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:7"
									},
									"scope": 1048,
									"src": "2037:52:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "2490:79:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1004,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "2500:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:7"
											},
											{
												"id": 1007,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1008,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "2542:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:7"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:7",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1012,
									"name": "nonReentrant",
									"nameLocation": "2475:12:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:7"
									},
									"src": "2466:103:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "2614:268:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1015,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2702:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1016,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2713:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1022,
												"nodeType": "IfStatement",
												"src": "2698:86:7",
												"trueBody": {
													"id": 1021,
													"nodeType": "Block",
													"src": "2722:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1018,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "2743:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1020,
															"nodeType": "RevertStatement",
															"src": "2736:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1023,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2858:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1024,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2868:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:7"
											}
										]
									},
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:7"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:7"
									},
									"scope": 1048,
									"src": "2575:307:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "2926:170:7",
										"statements": [
											{
												"expression": {
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1031,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "3068:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1032,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "3078:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:7"
											}
										]
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:7"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:7"
									},
									"scope": 1048,
									"src": "2888:208:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "3339:42:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "3356:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1043,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "3367:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1045,
												"nodeType": "Return",
												"src": "3349:25:7"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:7",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:7"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3333:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:7"
									},
									"scope": 1048,
									"src": "3275:106:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1049,
							"src": "1030:2353:7",
							"usedErrors": [
								993
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:7"
				},
				"id": 7
			},
			"lib/localDependencies/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "lib/localDependencies/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							1094
						]
					},
					"id": 1095,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1050,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1094,
							"linearizedBaseContracts": [
								1094
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "70:21:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 1055,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "108:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "116:2:8"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "142:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1052,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "142:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "141:7:8"
									},
									"scope": 1094,
									"src": "99:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 1060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "164:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:2:8"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "201:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1057,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "201:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "200:15:8"
									},
									"scope": 1094,
									"src": "155:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "231:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "238:2:8"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "264:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "263:9:8"
									},
									"scope": 1094,
									"src": "222:51:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 1080,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "290:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "310:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "303:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1066,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "303:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "302:17:8"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "391:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "384:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1069,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "420:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "413:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1071,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "413:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "449:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "441:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "441:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "481:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "473:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "512:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "505:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1077,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "505:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:169:8"
									},
									"scope": 1094,
									"src": "281:258:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 1093,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "556:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "571:2:8"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "645:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "638:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1082,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "638:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "674:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "667:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1084,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "667:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "703:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "695:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "735:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "727:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "766:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "759:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1090,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "759:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:169:8"
									},
									"scope": 1094,
									"src": "547:246:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1095,
							"src": "60:736:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:763:8"
				},
				"id": 8
			},
			"src/DSCEngine.sol": {
				"ast": {
					"absolutePath": "src/DSCEngine.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							1094
						],
						"DSCEngine": [
							1838
						],
						"DecentralizedStableCoin": [
							1944
						],
						"IERC20": [
							877
						],
						"ReentrancyGuard": [
							1048
						]
					},
					"id": 1839,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1096,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1098,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1839,
							"sourceUnit": 1049,
							"src": "488:84:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1097,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1048,
										"src": "497:15:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1100,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1839,
							"sourceUnit": 878,
							"src": "573:72:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1099,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "582:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/DecentralizedStableCoin.sol",
							"file": "./DecentralizedStableCoin.sol",
							"id": 1102,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1839,
							"sourceUnit": 1945,
							"src": "646:72:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1101,
										"name": "DecentralizedStableCoin",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1944,
										"src": "655:23:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/localDependencies/AggregatorV3Interface.sol",
							"file": "lib/localDependencies/AggregatorV3Interface.sol",
							"id": 1104,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1839,
							"sourceUnit": 1095,
							"src": "826:86:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1103,
										"name": "AggregatorV3Interface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1094,
										"src": "834:21:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1105,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1732:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1048,
										"src": "1732:15:9"
									},
									"id": 1106,
									"nodeType": "InheritanceSpecifier",
									"src": "1732:15:9"
								}
							],
							"canonicalName": "DSCEngine",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1838,
							"linearizedBaseContracts": [
								1838,
								1048
							],
							"name": "DSCEngine",
							"nameLocation": "1719:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "cb1d3f7d",
									"id": 1108,
									"name": "DSCEngine__NeedsMoreThanZero",
									"nameLocation": "1761:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1789:2:9"
									},
									"src": "1755:37:9"
								},
								{
									"errorSelector": "b5c5c126",
									"id": 1110,
									"name": "DSCEngine__TokenAddressesAndPriceFeedAddressesMustBeSameLength",
									"nameLocation": "1803:62:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:9"
									},
									"src": "1797:71:9"
								},
								{
									"errorSelector": "ef8f9dd1",
									"id": 1112,
									"name": "DSCEngine__DscAddressCantBeZero",
									"nameLocation": "1879:31:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1910:2:9"
									},
									"src": "1873:40:9"
								},
								{
									"errorSelector": "a802cfbe",
									"id": 1114,
									"name": "DSCEngine__NotAllowedToken",
									"nameLocation": "1924:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1950:2:9"
									},
									"src": "1918:35:9"
								},
								{
									"errorSelector": "bc3fe127",
									"id": 1118,
									"name": "DSCEngine__CollateralDepositFailed",
									"nameLocation": "1964:34:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "2007:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "1999:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:25:9"
									},
									"src": "1958:66:9"
								},
								{
									"errorSelector": "2851f432",
									"id": 1122,
									"name": "DSCEngine__CollateralRedeemFailed",
									"nameLocation": "2035:33:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "tokenCollateral",
												"nameLocation": "2077:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "2069:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:25:9"
									},
									"src": "2029:65:9"
								},
								{
									"errorSelector": "e580cc61",
									"id": 1126,
									"name": "DSCEngine__BreaksHealthFactor",
									"nameLocation": "2105:29:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "userHealthFactor",
												"nameLocation": "2143:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2135:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:26:9"
									},
									"src": "2099:62:9"
								},
								{
									"errorSelector": "6f4e810b",
									"id": 1128,
									"name": "DSCEngine__DscMintFailed",
									"nameLocation": "2172:24:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2196:2:9"
									},
									"src": "2166:33:9"
								},
								{
									"errorSelector": "3a29ac6d",
									"id": 1130,
									"name": "DSCEngine__DscBurnFailed",
									"nameLocation": "2210:24:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2234:2:9"
									},
									"src": "2204:33:9"
								},
								{
									"errorSelector": "4dc824ba",
									"id": 1132,
									"name": "DSGEngine__HealtFactorOk",
									"nameLocation": "2248:24:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2272:2:9"
									},
									"src": "2242:33:9"
								},
								{
									"errorSelector": "7c283620",
									"id": 1134,
									"name": "DSCEngine__HealthFactorNotImproved",
									"nameLocation": "2286:34:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2320:2:9"
									},
									"src": "2280:43:9"
								},
								{
									"constant": false,
									"functionSelector": "5e338bb3",
									"id": 1137,
									"mutability": "immutable",
									"name": "i_dsc",
									"nameLocation": "2370:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "2329:46:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_DecentralizedStableCoin_$1944",
										"typeString": "contract DecentralizedStableCoin"
									},
									"typeName": {
										"id": 1136,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1135,
											"name": "DecentralizedStableCoin",
											"nameLocations": [
												"2329:23:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1944,
											"src": "2329:23:9"
										},
										"referencedDeclaration": 1944,
										"src": "2329:23:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DecentralizedStableCoin_$1944",
											"typeString": "contract DecentralizedStableCoin"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "65079d77",
									"id": 1140,
									"mutability": "constant",
									"name": "ADDITION_FEED_PRECISION",
									"nameLocation": "2405:23:9",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "2381:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1138,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2381:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653130",
										"id": 1139,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2431:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000_by_1",
											"typeString": "int_const 10000000000"
										},
										"value": "1e10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "aaf5eb68",
									"id": 1143,
									"mutability": "constant",
									"name": "PRECISION",
									"nameLocation": "2465:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "2441:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1141,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2441:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1142,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2477:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "90a8ae9b",
									"id": 1146,
									"mutability": "constant",
									"name": "LIQUIDATION_THRESHOLD",
									"nameLocation": "2511:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "2487:50:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1144,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2487:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 1145,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2535:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "9d45ac89",
									"id": 1149,
									"mutability": "constant",
									"name": "LIQUIDATION_PRECISION",
									"nameLocation": "2593:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "2569:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1147,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2569:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 1148,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2617:3:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3574d4c4",
									"id": 1152,
									"mutability": "constant",
									"name": "LIQUIDATION_BONUS",
									"nameLocation": "2650:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "2626:46:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1150,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2626:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2670:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c601676c",
									"id": 1155,
									"mutability": "constant",
									"name": "MIN_HEALT_FACTOR",
									"nameLocation": "2715:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "2691:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1153,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2691:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2734:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1159,
									"mutability": "mutable",
									"name": "s_priceFeeds",
									"nameLocation": "2798:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "2746:64:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 1158,
										"keyName": "token",
										"keyNameLocation": "2762:5:9",
										"keyType": {
											"id": 1156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2754:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2746:43:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "priceFeed",
										"valueNameLocation": "2779:9:9",
										"valueType": {
											"id": 1157,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2771:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1165,
									"mutability": "mutable",
									"name": "s_collateralDeposited",
									"nameLocation": "2900:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "2816:105:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1164,
										"keyName": "user",
										"keyNameLocation": "2832:4:9",
										"keyType": {
											"id": 1160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2824:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2816:75:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1163,
											"keyName": "tokenCollateral",
											"keyNameLocation": "2856:15:9",
											"keyType": {
												"id": 1161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2848:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2840:50:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "amount",
											"valueNameLocation": "2883:6:9",
											"valueType": {
												"id": 1162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2875:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1169,
									"mutability": "mutable",
									"name": "s_DscMinted",
									"nameLocation": "2984:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "2927:68:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1168,
										"keyName": "user",
										"keyNameLocation": "2943:4:9",
										"keyType": {
											"id": 1166,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2935:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2927:48:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "amountDscMinted",
										"valueNameLocation": "2959:15:9",
										"valueType": {
											"id": 1167,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2951:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1172,
									"mutability": "mutable",
									"name": "s_collateralTokens",
									"nameLocation": "3019:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "3001:36:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3001:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1171,
										"nodeType": "ArrayTypeName",
										"src": "3001:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "f1c0dd7e9b98bbff859029005ef89b127af049cd18df1a8d79f0b7e019911e56",
									"id": 1180,
									"name": "CollateralDeposited",
									"nameLocation": "3055:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"indexed": true,
												"mutability": "mutable",
												"name": "depositer",
												"nameLocation": "3091:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "3075:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3075:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenCollateral",
												"nameLocation": "3118:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "3102:31:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3102:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"indexed": true,
												"mutability": "mutable",
												"name": "collateralAmount",
												"nameLocation": "3151:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "3135:32:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:94:9"
									},
									"src": "3049:120:9"
								},
								{
									"anonymous": false,
									"eventSelector": "b292db12b8dfa23b760ee5e3bd1d3be184cd8f0eeeacd27ce120d4de4e4721f6",
									"id": 1190,
									"name": "CollateralRedeemed",
									"nameLocation": "3180:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"indexed": true,
												"mutability": "mutable",
												"name": "redeemeFrom",
												"nameLocation": "3215:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "3199:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3199:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"indexed": true,
												"mutability": "mutable",
												"name": "redeemeTo",
												"nameLocation": "3244:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "3228:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3228:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenCollateral",
												"nameLocation": "3271:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "3255:31:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3255:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateralAmount",
												"nameLocation": "3296:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "3288:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3288:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3198:115:9"
									},
									"src": "3174:140:9"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "3358:106:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1194,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "3372:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3382:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3372:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1201,
												"nodeType": "IfStatement",
												"src": "3368:79:9",
												"trueBody": {
													"id": 1200,
													"nodeType": "Block",
													"src": "3385:62:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1197,
																	"name": "DSCEngine__NeedsMoreThanZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "3406:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3406:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1199,
															"nodeType": "RevertStatement",
															"src": "3399:37:9"
														}
													]
												}
											},
											{
												"id": 1202,
												"nodeType": "PlaceholderStatement",
												"src": "3456:1:9"
											}
										]
									},
									"id": 1204,
									"name": "moreThanZero",
									"nameLocation": "3329:12:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3350:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3342:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3342:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3341:16:9"
									},
									"src": "3320:144:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "3515:127:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1208,
															"name": "s_priceFeeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "3529:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1210,
														"indexExpression": {
															"id": 1209,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "3542:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3529:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3561:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3553:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1211,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3553:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3553:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3529:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1220,
												"nodeType": "IfStatement",
												"src": "3525:100:9",
												"trueBody": {
													"id": 1219,
													"nodeType": "Block",
													"src": "3565:60:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1216,
																	"name": "DSCEngine__NotAllowedToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "3586:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3586:28:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1218,
															"nodeType": "RevertStatement",
															"src": "3579:35:9"
														}
													]
												}
											},
											{
												"id": 1221,
												"nodeType": "PlaceholderStatement",
												"src": "3634:1:9"
											}
										]
									},
									"id": 1223,
									"name": "isAllowedCollateral",
									"nameLocation": "3479:19:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3507:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "3499:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:16:9"
									},
									"src": "3470:172:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "3775:516:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1234,
															"name": "_tokenCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "3789:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3806:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3789:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1236,
															"name": "_priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "3816:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3827:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3816:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3789:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1243,
												"nodeType": "IfStatement",
												"src": "3785:146:9",
												"trueBody": {
													"id": 1242,
													"nodeType": "Block",
													"src": "3835:96:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1239,
																	"name": "DSCEngine__TokenAddressesAndPriceFeedAddressesMustBeSameLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "3856:62:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3856:64:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1241,
															"nodeType": "RevertStatement",
															"src": "3849:71:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1244,
														"name": "_dscAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "3944:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3967:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3959:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1245,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3959:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3959:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3944:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1254,
												"nodeType": "IfStatement",
												"src": "3940:96:9",
												"trueBody": {
													"id": 1253,
													"nodeType": "Block",
													"src": "3971:65:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1250,
																	"name": "DSCEngine__DscAddressCantBeZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "3992:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3992:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1252,
															"nodeType": "RevertStatement",
															"src": "3985:40:9"
														}
													]
												}
											},
											{
												"body": {
													"id": 1284,
													"nodeType": "Block",
													"src": "4099:132:9",
													"statements": [
														{
															"expression": {
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1266,
																		"name": "s_priceFeeds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "4113:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 1270,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1267,
																			"name": "_tokenCollateral",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1228,
																			"src": "4126:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1269,
																		"indexExpression": {
																			"id": 1268,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1256,
																			"src": "4143:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4126:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4113:33:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1271,
																		"name": "_priceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "4149:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 1273,
																	"indexExpression": {
																		"id": 1272,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "4160:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4149:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4113:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1275,
															"nodeType": "ExpressionStatement",
															"src": "4113:49:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1279,
																			"name": "_tokenCollateral",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1228,
																			"src": "4200:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1281,
																		"indexExpression": {
																			"id": 1280,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1256,
																			"src": "4217:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4200:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1276,
																		"name": "s_collateralTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1172,
																		"src": "4176:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4195:4:9",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "4176:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4176:44:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1283,
															"nodeType": "ExpressionStatement",
															"src": "4176:44:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1259,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "4065:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1260,
															"name": "_tokenCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "4069:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4086:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4069:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4065:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1285,
												"initializationExpression": {
													"assignments": [
														1256
													],
													"declarations": [
														{
															"constant": false,
															"id": 1256,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4058:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1285,
															"src": "4050:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1255,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4050:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1258,
													"initialValue": {
														"hexValue": "30",
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4062:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4050:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4094:3:9",
														"subExpression": {
															"id": 1263,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "4094:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1265,
													"nodeType": "ExpressionStatement",
													"src": "4094:3:9"
												},
												"nodeType": "ForStatement",
												"src": "4045:186:9"
											},
											{
												"expression": {
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1286,
														"name": "i_dsc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "4240:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_DecentralizedStableCoin_$1944",
															"typeString": "contract DecentralizedStableCoin"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1288,
																"name": "_dscAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1225,
																"src": "4272:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1287,
															"name": "DecentralizedStableCoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "4248:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DecentralizedStableCoin_$1944_$",
																"typeString": "type(contract DecentralizedStableCoin)"
															}
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4248:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_DecentralizedStableCoin_$1944",
															"typeString": "contract DecentralizedStableCoin"
														}
													},
													"src": "4240:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_DecentralizedStableCoin_$1944",
														"typeString": "contract DecentralizedStableCoin"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "4240:44:9"
											}
										]
									},
									"id": 1293,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "_dscAddress",
												"nameLocation": "3677:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3669:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3669:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "_tokenCollateral",
												"nameLocation": "3715:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3698:33:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1226,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3698:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1227,
													"nodeType": "ArrayTypeName",
													"src": "3698:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "_priceFeed",
												"nameLocation": "3758:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3741:27:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1229,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3741:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1230,
													"nodeType": "ArrayTypeName",
													"src": "3741:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3659:115:9"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3775:0:9"
									},
									"scope": 1838,
									"src": "3648:643:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "4421:106:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1303,
															"name": "_tokenCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "4449:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1304,
															"name": "_collateralAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "4467:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1302,
														"name": "depositCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "4431:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "4431:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1308,
															"name": "_amountDscToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "4503:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1307,
														"name": "mintDsc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "4495:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4495:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "4495:25:9"
											}
										]
									},
									"functionSelector": "e90db8a3",
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositCollateralAndMintDsc",
									"nameLocation": "4306:27:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "_tokenCollateral",
												"nameLocation": "4342:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "4334:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4334:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "_collateralAmount",
												"nameLocation": "4368:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "4360:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4360:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "_amountDscToMint",
												"nameLocation": "4395:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "4387:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4387:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4333:79:9"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4421:0:9"
									},
									"scope": 1838,
									"src": "4297:230:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "4739:388:9",
										"statements": [
											{
												"expression": {
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1327,
																"name": "s_collateralDeposited",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "4749:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1331,
															"indexExpression": {
																"expression": {
																	"id": 1328,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4771:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4775:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4771:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4749:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1332,
														"indexExpression": {
															"id": 1330,
															"name": "_tokenCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "4783:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4749:51:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1333,
														"name": "_collateralAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "4804:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4749:72:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "4749:72:9"
											},
											{
												"assignments": [
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1337,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4836:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1366,
														"src": "4831:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1336,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4831:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1350,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1342,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4884:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4888:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4884:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1346,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4904:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DSCEngine_$1838",
																		"typeString": "contract DSCEngine"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DSCEngine_$1838",
																		"typeString": "contract DSCEngine"
																	}
																],
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4896:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1344,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4896:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4896:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1348,
															"name": "_collateralAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "4911:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1339,
																	"name": "_tokenCollateral",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1314,
																	"src": "4853:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1338,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "4846:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4846:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4871:12:9",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "4846:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4846:83:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4831:98:9"
											},
											{
												"condition": {
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4943:8:9",
													"subExpression": {
														"id": 1351,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "4944:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1358,
												"nodeType": "IfStatement",
												"src": "4939:98:9",
												"trueBody": {
													"id": 1357,
													"nodeType": "Block",
													"src": "4953:84:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1354,
																		"name": "_tokenCollateral",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1314,
																		"src": "5009:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1353,
																	"name": "DSCEngine__CollateralDepositFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "4974:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4974:52:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1356,
															"nodeType": "RevertStatement",
															"src": "4967:59:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1360,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5072:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5076:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5072:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1362,
															"name": "_tokenCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "5084:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1363,
															"name": "_collateralAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "5102:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1359,
														"name": "CollateralDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "5052:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5052:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "EmitStatement",
												"src": "5047:73:9"
											}
										]
									},
									"functionSelector": "a5d5db0c",
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1319,
													"name": "_collateralAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1316,
													"src": "4649:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1320,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1318,
												"name": "moreThanZero",
												"nameLocations": [
													"4636:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1204,
												"src": "4636:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4636:31:9"
										},
										{
											"arguments": [
												{
													"id": 1322,
													"name": "_tokenCollateral",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1314,
													"src": "4696:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1323,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1321,
												"name": "isAllowedCollateral",
												"nameLocations": [
													"4676:19:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "4676:19:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4676:37:9"
										},
										{
											"id": 1325,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1324,
												"name": "nonReentrant",
												"nameLocations": [
													"4722:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1012,
												"src": "4722:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4722:12:9"
										}
									],
									"name": "depositCollateral",
									"nameLocation": "4542:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "_tokenCollateral",
												"nameLocation": "4568:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "4560:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4560:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "_collateralAmount",
												"nameLocation": "4594:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "4586:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4586:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4559:53:9"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4739:0:9"
									},
									"scope": 1838,
									"src": "4533:594:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "5253:160:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1377,
															"name": "_amountDscToBurn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "5271:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1376,
														"name": "burnDsc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "5263:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5263:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "5263:25:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1381,
															"name": "_tokenCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "5315:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1382,
															"name": "_collateralAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "5333:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1380,
														"name": "redeemCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "5298:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5298:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "5298:53:9"
											}
										]
									},
									"functionSelector": "f419ea9c",
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemCollateralForDsc",
									"nameLocation": "5142:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "_tokenCollateral",
												"nameLocation": "5173:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "5165:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5165:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "_collateralAmount",
												"nameLocation": "5199:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "5191:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5191:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "_amountDscToBurn",
												"nameLocation": "5226:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "5218:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5164:79:9"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5253:0:9"
									},
									"scope": 1838,
									"src": "5133:280:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "5549:146:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1399,
															"name": "_tokenCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "5577:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1400,
															"name": "_collateralAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "5595:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1401,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5614:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5618:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5614:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1403,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5626:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5630:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5626:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1398,
														"name": "_redeemCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "5559:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address,address)"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5559:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "5559:78:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1408,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5677:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5681:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5677:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1407,
														"name": "_revertIfHealthFactorIsBroken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "5647:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5647:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "5647:41:9"
											}
										]
									},
									"functionSelector": "9acd81b3",
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1393,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1392,
												"name": "nonReentrant",
												"nameLocations": [
													"5505:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1012,
												"src": "5505:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5505:12:9"
										},
										{
											"arguments": [
												{
													"id": 1395,
													"name": "_collateralAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1390,
													"src": "5531:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1394,
												"name": "moreThanZero",
												"nameLocations": [
													"5518:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1204,
												"src": "5518:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5518:31:9"
										}
									],
									"name": "redeemCollateral",
									"nameLocation": "5428:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "_tokenCollateral",
												"nameLocation": "5453:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "5445:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "_collateralAmount",
												"nameLocation": "5479:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "5471:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5471:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5444:53:9"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5549:0:9"
									},
									"scope": 1838,
									"src": "5419:276:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "5794:253:9",
										"statements": [
											{
												"expression": {
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1423,
															"name": "s_DscMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "5804:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1426,
														"indexExpression": {
															"expression": {
																"id": 1424,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5816:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5820:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5816:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5804:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1427,
														"name": "_amountDscToMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "5831:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5804:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "5804:43:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1431,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5887:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5891:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5887:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1430,
														"name": "_revertIfHealthFactorIsBroken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "5857:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5857:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "5857:41:9"
											},
											{
												"assignments": [
													1436
												],
												"declarations": [
													{
														"constant": false,
														"id": 1436,
														"mutability": "mutable",
														"name": "minted",
														"nameLocation": "5913:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "5908:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1435,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5908:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1443,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1439,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5933:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5937:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5933:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1441,
															"name": "_amountDscToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "5945:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1437,
															"name": "i_dsc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "5922:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_DecentralizedStableCoin_$1944",
																"typeString": "contract DecentralizedStableCoin"
															}
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5928:4:9",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1943,
														"src": "5922:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5922:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5908:54:9"
											},
											{
												"condition": {
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5975:7:9",
													"subExpression": {
														"id": 1444,
														"name": "minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "5976:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1450,
												"nodeType": "IfStatement",
												"src": "5972:69:9",
												"trueBody": {
													"id": 1449,
													"nodeType": "Block",
													"src": "5983:58:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1446,
																	"name": "DSCEngine__DscMintFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1128,
																	"src": "6004:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6004:26:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1448,
															"nodeType": "RevertStatement",
															"src": "5997:33:9"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c9b7c327",
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1418,
													"name": "_amountDscToMint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1415,
													"src": "5764:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1419,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1417,
												"name": "moreThanZero",
												"nameLocations": [
													"5751:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1204,
												"src": "5751:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5751:30:9"
										},
										{
											"id": 1421,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1420,
												"name": "nonReentrant",
												"nameLocations": [
													"5782:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1012,
												"src": "5782:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5782:12:9"
										}
									],
									"name": "mintDsc",
									"nameLocation": "5710:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "_amountDscToMint",
												"nameLocation": "5726:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "5718:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5718:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5717:26:9"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5794:0:9"
									},
									"scope": 1838,
									"src": "5701:346:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "6127:151:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1461,
															"name": "_amountToBurn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "6146:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1462,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6161:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6165:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6161:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1464,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6172:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6176:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6172:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1460,
														"name": "_burnDsc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "6137:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (uint256,address,address)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6137:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "6137:46:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1469,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6223:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6227:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6223:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1468,
														"name": "_revertIfHealthFactorIsBroken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "6193:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6193:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "6193:41:9"
											}
										]
									},
									"functionSelector": "f6876608",
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1457,
													"name": "_amountToBurn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1454,
													"src": "6113:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1456,
												"name": "moreThanZero",
												"nameLocations": [
													"6100:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1204,
												"src": "6100:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6100:27:9"
										}
									],
									"name": "burnDsc",
									"nameLocation": "6062:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "_amountToBurn",
												"nameLocation": "6078:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "6070:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6070:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6069:23:9"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6127:0:9"
									},
									"scope": 1838,
									"src": "6053:225:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "6415:1024:9",
										"statements": [
											{
												"assignments": [
													1489
												],
												"declarations": [
													{
														"constant": false,
														"id": 1489,
														"mutability": "mutable",
														"name": "startingUserHealtFactor",
														"nameLocation": "6433:23:9",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "6425:31:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1488,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6425:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1493,
												"initialValue": {
													"arguments": [
														{
															"id": 1491,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "6473:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1490,
														"name": "_healthFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "6459:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6459:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6425:54:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1494,
														"name": "startingUserHealtFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "6492:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1495,
														"name": "MIN_HEALT_FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "6519:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6492:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1501,
												"nodeType": "IfStatement",
												"src": "6489:105:9",
												"trueBody": {
													"id": 1500,
													"nodeType": "Block",
													"src": "6536:58:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1497,
																	"name": "DSGEngine__HealtFactorOk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "6557:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6557:26:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1499,
															"nodeType": "RevertStatement",
															"src": "6550:33:9"
														}
													]
												}
											},
											{
												"assignments": [
													1503
												],
												"declarations": [
													{
														"constant": false,
														"id": 1503,
														"mutability": "mutable",
														"name": "tokenAmountFromDebtCovered",
														"nameLocation": "6612:26:9",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "6604:34:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1502,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6604:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1508,
												"initialValue": {
													"arguments": [
														{
															"id": 1505,
															"name": "_tokenCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "6663:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1506,
															"name": "_debtToCover",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "6681:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1504,
														"name": "getTokenAmountFromUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "6641:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6641:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6604:90:9"
											},
											{
												"assignments": [
													1510
												],
												"declarations": [
													{
														"constant": false,
														"id": 1510,
														"mutability": "mutable",
														"name": "bonusCollateral",
														"nameLocation": "6778:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "6770:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1509,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6770:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1517,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1511,
																	"name": "tokenAmountFromDebtCovered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "6797:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1512,
																	"name": "LIQUIDATION_BONUS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "6826:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6797:46:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1514,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6796:48:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1515,
														"name": "LIQUIDATION_PRECISION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "6847:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6796:72:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6770:98:9"
											},
											{
												"assignments": [
													1519
												],
												"declarations": [
													{
														"constant": false,
														"id": 1519,
														"mutability": "mutable",
														"name": "totalCollateralToRedeem",
														"nameLocation": "6948:23:9",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "6940:31:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6940:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1523,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1520,
														"name": "tokenAmountFromDebtCovered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "6974:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1521,
														"name": "bonusCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "7003:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6974:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6940:78:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1525,
															"name": "_tokenCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "7046:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1526,
															"name": "totalCollateralToRedeem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "7064:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1527,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "7089:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1528,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7096:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7100:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7096:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1524,
														"name": "_redeemCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "7028:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address,address)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7028:79:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "7028:79:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1533,
															"name": "_debtToCover",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "7155:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1534,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "7169:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1535,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7176:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7180:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7176:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1532,
														"name": "_burnDsc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "7146:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (uint256,address,address)"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7146:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "7146:41:9"
											},
											{
												"assignments": [
													1540
												],
												"declarations": [
													{
														"constant": false,
														"id": 1540,
														"mutability": "mutable",
														"name": "endingUserHealthFactor",
														"nameLocation": "7206:22:9",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "7198:30:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1539,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7198:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1544,
												"initialValue": {
													"arguments": [
														{
															"id": 1542,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "7245:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1541,
														"name": "_healthFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "7231:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7231:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7198:53:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1545,
														"name": "endingUserHealthFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "7264:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1546,
														"name": "startingUserHealtFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "7290:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7264:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1552,
												"nodeType": "IfStatement",
												"src": "7261:121:9",
												"trueBody": {
													"id": 1551,
													"nodeType": "Block",
													"src": "7314:68:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1548,
																	"name": "DSCEngine__HealthFactorNotImproved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "7335:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7335:36:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1550,
															"nodeType": "RevertStatement",
															"src": "7328:43:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1554,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7421:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7425:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7421:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1553,
														"name": "_revertIfHealthFactorIsBroken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "7391:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7391:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "7391:41:9"
											}
										]
									},
									"functionSelector": "26c01303",
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1483,
													"name": "_debtToCover",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1480,
													"src": "6389:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1484,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1482,
												"name": "moreThanZero",
												"nameLocations": [
													"6376:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1204,
												"src": "6376:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6376:26:9"
										},
										{
											"id": 1486,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1485,
												"name": "nonReentrant",
												"nameLocations": [
													"6403:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1012,
												"src": "6403:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6403:12:9"
										}
									],
									"name": "liquidate",
									"nameLocation": "6293:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "_tokenCollateral",
												"nameLocation": "6311:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6303:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6303:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6338:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6330:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6330:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "_debtToCover",
												"nameLocation": "6353:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6345:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6345:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6302:64:9"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6415:0:9"
									},
									"scope": 1838,
									"src": "6284:1155:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "7486:2:9",
										"statements": []
									},
									"functionSelector": "a5f352b7",
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHealthFactor",
									"nameLocation": "7454:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7469:2:9"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7486:0:9"
									},
									"scope": 1838,
									"src": "7445:43:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "7644:115:9",
										"statements": [
											{
												"expression": {
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1572,
														"name": "totalDscMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "7654:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1573,
															"name": "s_DscMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "7671:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1575,
														"indexExpression": {
															"id": 1574,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "7683:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7671:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7654:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "7654:34:9"
											},
											{
												"expression": {
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1578,
														"name": "collateralValueInUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "7698:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1580,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "7747:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1579,
															"name": "getAccountCollateralValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "7721:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7721:31:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7698:54:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "7698:54:9"
											}
										]
									},
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAccountInformation",
									"nameLocation": "7503:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7534:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "7526:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7526:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7525:14:9"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "totalDscMinted",
												"nameLocation": "7594:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "7586:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7586:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "collateralValueInUsd",
												"nameLocation": "7618:20:9",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "7610:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7610:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7585:54:9"
									},
									"scope": 1838,
									"src": "7494:265:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1617,
										"nodeType": "Block",
										"src": "7833:297:9",
										"statements": [
											{
												"assignments": [
													1593,
													1595
												],
												"declarations": [
													{
														"constant": false,
														"id": 1593,
														"mutability": "mutable",
														"name": "totalDscMinted",
														"nameLocation": "7852:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1617,
														"src": "7844:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1592,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7844:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1595,
														"mutability": "mutable",
														"name": "collateralValueInUsd",
														"nameLocation": "7876:20:9",
														"nodeType": "VariableDeclaration",
														"scope": 1617,
														"src": "7868:28:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1594,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7868:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1599,
												"initialValue": {
													"arguments": [
														{
															"id": 1597,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "7923:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1596,
														"name": "_getAccountInformation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "7900:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address) view returns (uint256,uint256)"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7900:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7843:85:9"
											},
											{
												"assignments": [
													1601
												],
												"declarations": [
													{
														"constant": false,
														"id": 1601,
														"mutability": "mutable",
														"name": "collateralAdjustedThreshold",
														"nameLocation": "7946:27:9",
														"nodeType": "VariableDeclaration",
														"scope": 1617,
														"src": "7938:35:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1600,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7938:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1608,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1602,
																	"name": "collateralValueInUsd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "7977:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1603,
																	"name": "LIQUIDATION_THRESHOLD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1146,
																	"src": "8000:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7977:44:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1605,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7976:46:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1606,
														"name": "LIQUIDATION_PRECISION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "8025:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7976:70:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7938:108:9"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1609,
																			"name": "collateralAdjustedThreshold",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1601,
																			"src": "8065:27:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1610,
																			"name": "PRECISION",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "8095:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8065:39:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1612,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8064:41:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1613,
																"name": "totalDscMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1593,
																"src": "8108:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8064:58:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1615,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8063:60:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1591,
												"id": 1616,
												"nodeType": "Return",
												"src": "8056:67:9"
											}
										]
									},
									"id": 1618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_healthFactor",
									"nameLocation": "7774:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7796:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "7788:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7788:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7787:14:9"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "7824:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7824:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7823:9:9"
									},
									"scope": 1838,
									"src": "7765:365:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "8204:193:9",
										"statements": [
											{
												"assignments": [
													1624
												],
												"declarations": [
													{
														"constant": false,
														"id": 1624,
														"mutability": "mutable",
														"name": "userHealthFactor",
														"nameLocation": "8222:16:9",
														"nodeType": "VariableDeclaration",
														"scope": 1638,
														"src": "8214:24:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1623,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8214:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1628,
												"initialValue": {
													"arguments": [
														{
															"id": 1626,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "8255:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1625,
														"name": "_healthFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "8241:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8241:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8214:47:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1629,
														"name": "userHealthFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "8275:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1630,
														"name": "MIN_HEALT_FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "8295:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8275:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1637,
												"nodeType": "IfStatement",
												"src": "8271:120:9",
												"trueBody": {
													"id": 1636,
													"nodeType": "Block",
													"src": "8312:79:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1633,
																		"name": "userHealthFactor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "8363:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1632,
																	"name": "DSCEngine__BreaksHealthFactor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "8333:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8333:47:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1635,
															"nodeType": "RevertStatement",
															"src": "8326:54:9"
														}
													]
												}
											}
										]
									},
									"id": 1639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revertIfHealthFactorIsBroken",
									"nameLocation": "8145:29:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "8183:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "8175:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8175:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8174:15:9"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8204:0:9"
									},
									"scope": 1838,
									"src": "8136:261:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "8491:255:9",
										"statements": [
											{
												"expression": {
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1648,
															"name": "s_DscMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "8501:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1650,
														"indexExpression": {
															"id": 1649,
															"name": "_onBehalfOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "8513:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8501:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1651,
														"name": "_amountToBurn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "8529:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8501:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1653,
												"nodeType": "ExpressionStatement",
												"src": "8501:41:9"
											},
											{
												"assignments": [
													1655
												],
												"declarations": [
													{
														"constant": false,
														"id": 1655,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8557:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1679,
														"src": "8552:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1654,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8552:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1665,
												"initialValue": {
													"arguments": [
														{
															"id": 1658,
															"name": "_dscFrom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "8586:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1661,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8604:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DSCEngine_$1838",
																		"typeString": "contract DSCEngine"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DSCEngine_$1838",
																		"typeString": "contract DSCEngine"
																	}
																],
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8596:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1659,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8596:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8596:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1663,
															"name": "_amountToBurn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "8611:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1656,
															"name": "i_dsc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "8567:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_DecentralizedStableCoin_$1944",
																"typeString": "contract DecentralizedStableCoin"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8573:12:9",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "8567:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8567:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8552:73:9"
											},
											{
												"condition": {
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8638:8:9",
													"subExpression": {
														"id": 1666,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "8639:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1672,
												"nodeType": "IfStatement",
												"src": "8635:70:9",
												"trueBody": {
													"id": 1671,
													"nodeType": "Block",
													"src": "8647:58:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1668,
																	"name": "DSCEngine__DscBurnFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1130,
																	"src": "8668:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8668:26:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1670,
															"nodeType": "RevertStatement",
															"src": "8661:33:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1676,
															"name": "_amountToBurn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "8725:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1673,
															"name": "i_dsc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "8714:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_DecentralizedStableCoin_$1944",
																"typeString": "contract DecentralizedStableCoin"
															}
														},
														"id": 1675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8720:4:9",
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1905,
														"src": "8714:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "8714:25:9"
											}
										]
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnDsc",
									"nameLocation": "8412:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "_amountToBurn",
												"nameLocation": "8429:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "8421:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8421:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "_onBehalfOf",
												"nameLocation": "8452:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "8444:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8444:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "_dscFrom",
												"nameLocation": "8473:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "8465:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8465:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8420:62:9"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8491:0:9"
									},
									"scope": 1838,
									"src": "8403:343:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "8868:355:9",
										"statements": [
											{
												"expression": {
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1691,
																"name": "s_collateralDeposited",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "8878:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1694,
															"indexExpression": {
																"id": 1692,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "8900:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8878:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1695,
														"indexExpression": {
															"id": 1693,
															"name": "_tokenCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "8907:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8878:46:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1696,
														"name": "_collateralAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "8928:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8878:67:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "8878:67:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1700,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "8979:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1701,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "8986:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1702,
															"name": "_tokenCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "8991:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1703,
															"name": "_collateralAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "9009:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1699,
														"name": "CollateralRedeemed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "8960:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8960:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1705,
												"nodeType": "EmitStatement",
												"src": "8955:72:9"
											},
											{
												"assignments": [
													1707
												],
												"declarations": [
													{
														"constant": false,
														"id": 1707,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9043:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1724,
														"src": "9038:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1706,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9038:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1715,
												"initialValue": {
													"arguments": [
														{
															"id": 1712,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "9087:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1713,
															"name": "_collateralAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "9092:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1709,
																	"name": "_tokenCollateral",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1682,
																	"src": "9060:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1708,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "9053:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9053:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9078:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 844,
														"src": "9053:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9053:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9038:72:9"
											},
											{
												"condition": {
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9124:8:9",
													"subExpression": {
														"id": 1716,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "9125:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1723,
												"nodeType": "IfStatement",
												"src": "9120:97:9",
												"trueBody": {
													"id": 1722,
													"nodeType": "Block",
													"src": "9134:83:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1719,
																		"name": "_tokenCollateral",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1682,
																		"src": "9189:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1718,
																	"name": "DSCEngine__CollateralRedeemFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1122,
																	"src": "9155:33:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9155:51:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1721,
															"nodeType": "RevertStatement",
															"src": "9148:58:9"
														}
													]
												}
											}
										]
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_redeemCollateral",
									"nameLocation": "8761:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "_tokenCollateral",
												"nameLocation": "8787:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "8779:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8779:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "_collateralAmount",
												"nameLocation": "8813:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "8805:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8805:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "8840:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "8832:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8832:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "8855:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "8847:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8847:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8778:81:9"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8868:0:9"
									},
									"scope": 1838,
									"src": "8752:471:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "9354:192:9",
										"statements": [
											{
												"assignments": [
													null,
													1735,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1735,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "9374:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1757,
														"src": "9367:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1734,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "9367:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1743,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 1737,
																		"name": "s_priceFeeds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "9410:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 1739,
																	"indexExpression": {
																		"id": 1738,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1727,
																		"src": "9423:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9410:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1736,
																"name": "AggregatorV3Interface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "9388:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1094_$",
																	"typeString": "type(contract AggregatorV3Interface)"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9388:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$1094",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9432:15:9",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1093,
														"src": "9388:59:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9388:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9364:85:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1744,
																	"name": "usdAmountInWei",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "9467:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1745,
																	"name": "PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "9484:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9467:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1747,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9466:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1750,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1735,
																			"src": "9506:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9498:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1748,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9498:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9498:14:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1752,
																	"name": "ADDITION_FEED_PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "9515:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9498:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1754,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9497:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9466:73:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1733,
												"id": 1756,
												"nodeType": "Return",
												"src": "9459:80:9"
											}
										]
									},
									"functionSelector": "afea2e48",
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAmountFromUsd",
									"nameLocation": "9264:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "9294:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "9286:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9286:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "usdAmountInWei",
												"nameLocation": "9310:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "9302:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9302:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9285:40:9"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "9346:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9346:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9345:9:9"
									},
									"scope": 1838,
									"src": "9255:291:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1801,
										"nodeType": "Block",
										"src": "9656:307:9",
										"statements": [
											{
												"body": {
													"id": 1797,
													"nodeType": "Block",
													"src": "9718:197:9",
													"statements": [
														{
															"assignments": [
																1777
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1777,
																	"mutability": "mutable",
																	"name": "token",
																	"nameLocation": "9740:5:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1797,
																	"src": "9732:13:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1776,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9732:7:9",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1781,
															"initialValue": {
																"baseExpression": {
																	"id": 1778,
																	"name": "s_collateralTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "9748:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1780,
																"indexExpression": {
																	"id": 1779,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "9767:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9748:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9732:37:9"
														},
														{
															"assignments": [
																1783
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1783,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "9791:6:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1797,
																	"src": "9783:14:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1782,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9783:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1789,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1784,
																		"name": "s_collateralDeposited",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1165,
																		"src": "9800:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1786,
																	"indexExpression": {
																		"id": 1785,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "9822:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9800:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1788,
																"indexExpression": {
																	"id": 1787,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "9829:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9800:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9783:52:9"
														},
														{
															"expression": {
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1790,
																	"name": "totalCollateralValueInUsd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1763,
																	"src": "9849:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1792,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1777,
																			"src": "9890:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1793,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1783,
																			"src": "9897:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1791,
																		"name": "getUSDValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1837,
																		"src": "9878:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9878:26:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9849:55:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1796,
															"nodeType": "ExpressionStatement",
															"src": "9849:55:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1769,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "9684:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1770,
															"name": "s_collateralTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "9687:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9706:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9687:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9684:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1798,
												"initializationExpression": {
													"assignments": [
														1766
													],
													"declarations": [
														{
															"constant": false,
															"id": 1766,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9678:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1798,
															"src": "9670:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1765,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9670:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1768,
													"initialValue": {
														"hexValue": "30",
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9681:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9670:12:9"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9714:3:9",
														"subExpression": {
															"id": 1773,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "9714:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1775,
													"nodeType": "ExpressionStatement",
													"src": "9714:3:9"
												},
												"nodeType": "ForStatement",
												"src": "9666:249:9"
											},
											{
												"expression": {
													"id": 1799,
													"name": "totalCollateralValueInUsd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1763,
													"src": "9931:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1764,
												"id": 1800,
												"nodeType": "Return",
												"src": "9924:32:9"
											}
										]
									},
									"functionSelector": "7d1a4450",
									"id": 1802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAccountCollateralValue",
									"nameLocation": "9561:25:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "9595:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "9587:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9587:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9586:15:9"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "totalCollateralValueInUsd",
												"nameLocation": "9630:25:9",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "9622:33:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9622:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9621:35:9"
									},
									"scope": 1838,
									"src": "9552:411:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "10079:245:9",
										"statements": [
											{
												"assignments": [
													null,
													1815,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1815,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "10099:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1836,
														"src": "10092:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1814,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "10092:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1823,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 1817,
																		"name": "s_priceFeeds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "10135:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 1819,
																	"indexExpression": {
																		"id": 1818,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1804,
																		"src": "10148:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10135:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1816,
																"name": "AggregatorV3Interface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "10113:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1094_$",
																	"typeString": "type(contract AggregatorV3Interface)"
																}
															},
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10113:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$1094",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10157:15:9",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1093,
														"src": "10113:59:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10113:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10089:85:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1826,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1815,
																				"src": "10262:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1824,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:14:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1828,
																		"name": "ADDITION_FEED_PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "10271:23:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10254:40:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1830,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1806,
																	"src": "10297:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10254:50:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1832,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10253:52:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1833,
														"name": "PRECISION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "10308:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10253:64:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1813,
												"id": 1835,
												"nodeType": "Return",
												"src": "10246:71:9"
											}
										]
									},
									"functionSelector": "fa76dcf2",
									"id": 1837,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1809,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1804,
													"src": "10055:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1810,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1808,
												"name": "isAllowedCollateral",
												"nameLocations": [
													"10035:19:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "10035:19:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "10035:27:9"
										}
									],
									"name": "getUSDValue",
									"nameLocation": "9978:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "9998:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "9990:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9990:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10014:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "10006:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10006:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9989:33:9"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "10071:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10071:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10070:9:9"
									},
									"scope": 1838,
									"src": "9969:355:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1839,
							"src": "1710:8616:9",
							"usedErrors": [
								993,
								1108,
								1110,
								1112,
								1114,
								1118,
								1122,
								1126,
								1128,
								1130,
								1132,
								1134
							],
							"usedEvents": [
								1180,
								1190
							]
						}
					],
					"src": "39:10288:9"
				},
				"id": 9
			},
			"src/DecentralizedStableCoin.sol": {
				"ast": {
					"absolutePath": "src/DecentralizedStableCoin.sol",
					"exportedSymbols": {
						"DecentralizedStableCoin": [
							1944
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"Ownable": [
							147
						]
					},
					"id": 1945,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1840,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1843,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 924,
							"src": "68:102:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1841,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "76:5:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1842,
										"name": "ERC20Burnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 923,
										"src": "83:13:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1845,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 148,
							"src": "172:67:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1844,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "180:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1846,
										"name": "ERC20Burnable",
										"nameLocations": [
											"691:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "691:13:10"
									},
									"id": 1847,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:10"
								},
								{
									"baseName": {
										"id": 1848,
										"name": "Ownable",
										"nameLocations": [
											"706:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "706:7:10"
									},
									"id": 1849,
									"nodeType": "InheritanceSpecifier",
									"src": "706:7:10"
								}
							],
							"canonicalName": "DecentralizedStableCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1944,
							"linearizedBaseContracts": [
								1944,
								147,
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "DecentralizedStableCoin",
							"nameLocation": "664:23:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "ae8ba123",
									"id": 1851,
									"name": "DecentralizedStableCoin__AmountMustBeMoreThanZero",
									"nameLocation": "726:49:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"src": "720:58:10"
								},
								{
									"errorSelector": "fe9c6abb",
									"id": 1853,
									"name": "DecentralizedStableCoin__BurnAmountExceedsBalance",
									"nameLocation": "790:49:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:10"
									},
									"src": "784:58:10"
								},
								{
									"errorSelector": "f3c190e9",
									"id": 1855,
									"name": "DecentralizedStableCoin__NotZeroAddress",
									"nameLocation": "854:39:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "893:2:10"
									},
									"src": "848:48:10"
								},
								{
									"body": {
										"id": 1866,
										"nodeType": "Block",
										"src": "978:2:10",
										"statements": []
									},
									"id": 1867,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "446563656e7472616c697a6564537461626c65436f696e",
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "926:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4c892af6da595460367c882173cb78937ab02fe25724e2f1d5f68069c7732cf8",
														"typeString": "literal_string \"DecentralizedStableCoin\""
													},
													"value": "DecentralizedStableCoin"
												},
												{
													"hexValue": "445343",
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "953:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_43f14b70594ce2d8c53eb306c1e4efdb6729cfe75bf89574fb2d9f9db7c097df",
														"typeString": "literal_string \"DSC\""
													},
													"value": "DSC"
												}
											],
											"id": 1860,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1857,
												"name": "ERC20",
												"nameLocations": [
													"920:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "920:5:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "920:39:10"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1862,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "967:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "971:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "967:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1864,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1861,
												"name": "Ownable",
												"nameLocations": [
													"959:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "959:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "959:19:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:2:10"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:0:10"
									},
									"scope": 1944,
									"src": "906:74:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										901
									],
									"body": {
										"id": 1904,
										"nodeType": "Block",
										"src": "1045:319:10",
										"statements": [
											{
												"assignments": [
													1876
												],
												"declarations": [
													{
														"constant": false,
														"id": 1876,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "1064:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1904,
														"src": "1056:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1875,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1056:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1881,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1878,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1084:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1088:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1084:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1877,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "1074:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1056:39:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1882,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "1110:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1121:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1110:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1889,
												"nodeType": "IfStatement",
												"src": "1106:103:10",
												"trueBody": {
													"id": 1888,
													"nodeType": "Block",
													"src": "1124:85:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1885,
																	"name": "DecentralizedStableCoin__AmountMustBeMoreThanZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "1146:49:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1146:51:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1887,
															"nodeType": "RevertStatement",
															"src": "1139:58:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1890,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1876,
														"src": "1223:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1891,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "1233:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1223:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1897,
												"nodeType": "IfStatement",
												"src": "1219:108:10",
												"trueBody": {
													"id": 1896,
													"nodeType": "Block",
													"src": "1242:85:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1893,
																	"name": "DecentralizedStableCoin__BurnAmountExceedsBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "1264:49:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1264:51:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1895,
															"nodeType": "RevertStatement",
															"src": "1257:58:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1901,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "1348:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1898,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1337:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DecentralizedStableCoin_$1944_$",
																"typeString": "type(contract super DecentralizedStableCoin)"
															}
														},
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1343:4:10",
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "1337:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1337:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1903,
												"nodeType": "ExpressionStatement",
												"src": "1337:19:10"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1905,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1873,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1872,
												"name": "onlyOwner",
												"nameLocations": [
													"1035:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1035:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1035:9:10"
										}
									],
									"name": "burn",
									"nameLocation": "997:4:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1871,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1026:8:10"
									},
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1010:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "1002:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:17:10"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1045:0:10"
									},
									"scope": 1944,
									"src": "988:376:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1942,
										"nodeType": "Block",
										"src": "1447:281:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1916,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "1462:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1477:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1469:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1469:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1469:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1462:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1926,
												"nodeType": "IfStatement",
												"src": "1458:98:10",
												"trueBody": {
													"id": 1925,
													"nodeType": "Block",
													"src": "1481:75:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1922,
																	"name": "DecentralizedStableCoin__NotZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1855,
																	"src": "1503:39:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1503:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1924,
															"nodeType": "RevertStatement",
															"src": "1496:48:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1927,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "1570:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1581:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1570:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1934,
												"nodeType": "IfStatement",
												"src": "1566:103:10",
												"trueBody": {
													"id": 1933,
													"nodeType": "Block",
													"src": "1584:85:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1930,
																	"name": "DecentralizedStableCoin__AmountMustBeMoreThanZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "1606:49:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1606:51:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1932,
															"nodeType": "RevertStatement",
															"src": "1599:58:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1936,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "1685:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1937,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "1690:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1935,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1679:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1679:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1939,
												"nodeType": "ExpressionStatement",
												"src": "1679:19:10"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1716:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1915,
												"id": 1941,
												"nodeType": "Return",
												"src": "1709:11:10"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1943,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1912,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1911,
												"name": "onlyOwner",
												"nameLocations": [
													"1424:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1424:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1424:9:10"
										}
									],
									"name": "mint",
									"nameLocation": "1381:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1395:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "1387:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1408:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "1400:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1386:30:10"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "1442:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1913,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1442:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1441:6:10"
									},
									"scope": 1944,
									"src": "1372:356:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1945,
							"src": "655:1076:10",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								1851,
								1853,
								1855
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "40:1693:10"
				},
				"id": 10
			}
		}
	}
}